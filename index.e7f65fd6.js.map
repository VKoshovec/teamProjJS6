{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-071176a05eb9f7a7.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/core/AxiosError.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/axios/lib/env/classes/FormData.js","node_modules/form-data/lib/browser.js","node_modules/ieee754/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/index.js","node_modules/notiflix/dist/notiflix-aio-3.2.5.min.js","src/js/linkapi.js","node_modules/@parcel/runtime-js/lib/runtime-4822c466808789f0.js","src/js/modal/getMovieById.js","src/js/refs.js","src/js/getItemTemplateForStorage.js","src/js/renderFilmsOnMyLibrary.js","src/js/localStorage.js","node_modules/process/browser.js","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","src/js/modal/video.js","node_modules/basiclightbox/dist/basicLightbox.min.js","src/js/modal/modal-main.js","src/js/modal/modal-team.js","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","src/js/firebase-options.js","node_modules/notiflix/build/notiflix-notify-aio.js","src/js/getItemTemplate.js","src/js/renderFilms.js","src/js/pagination.js","src/js/requests.js","src/js/header.js","src/js/scrollUp.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.e7f65fd6.js\\\",\\\"2iwNO\\\":\\\"placeholder.279cbe94.jpg\\\"}\"));","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self;\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  toJSONObject\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import FormData from 'form-data';\nexport default FormData;\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport envFormData from '../env/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliant(thing) {\n  return thing && utils.isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator];\n}\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (envFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && isSpecCompliant(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        (utils.isFileList(value) || utils.endsWith(key, '[]') && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear() {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.2.1\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON,\n  mergeConfig\n}\n","/* Notiflix AIO (https://notiflix.github.io) - Version: 3.2.5 - Author: Furkan MT (https://github.com/furcan) - Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT) */\n\n(function(t,e){\"function\"==typeof define&&define.amd?define([],function(){return e(t)}):\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e(t):t.Notiflix=e(t)})(\"undefined\"==typeof global?\"undefined\"==typeof window?this:window:global,function(t){'use strict';if(\"undefined\"==typeof t&&\"undefined\"==typeof t.document)return!1;var e,i,a,n,o,r=\"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\",s=\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif\",l={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},m={wrapID:\"NotiflixNotifyWrap\",overlayID:\"NotiflixNotifyOverlay\",width:\"280px\",position:\"right-top\",distance:\"10px\",opacity:1,borderRadius:\"5px\",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:\"rgba(0,0,0,0.5)\",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:\"NotiflixNotify\",className:\"notiflix-notify\",zindex:4001,fontFamily:\"Quicksand\",fontSize:\"13px\",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:\"fade\",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:\"basic\",fontAwesomeIconSize:\"34px\",success:{background:\"#32c682\",textColor:\"#fff\",childClassName:\"notiflix-notify-success\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-check-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{background:\"#ff5549\",textColor:\"#fff\",childClassName:\"notiflix-notify-failure\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-times-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{background:\"#eebf31\",textColor:\"#fff\",childClassName:\"notiflix-notify-warning\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-exclamation-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{background:\"#26c0d3\",textColor:\"#fff\",childClassName:\"notiflix-notify-info\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-info-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},c={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},p={ID:\"NotiflixReportWrap\",className:\"notiflix-report\",width:\"320px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",backOverlayClickToClose:!1,fontFamily:\"Quicksand\",svgSize:\"110px\",plainText:!0,titleFontSize:\"16px\",titleMaxLength:34,messageFontSize:\"13px\",messageMaxLength:400,buttonFontSize:\"14px\",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:\"fade\",success:{svgColor:\"#32c682\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#32c682\",buttonColor:\"#fff\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{svgColor:\"#ff5549\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#ff5549\",buttonColor:\"#fff\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{svgColor:\"#eebf31\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#eebf31\",buttonColor:\"#fff\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{svgColor:\"#26c0d3\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#26c0d3\",buttonColor:\"#fff\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},f={Show:\"Show\",Ask:\"Ask\",Prompt:\"Prompt\"},d={ID:\"NotiflixConfirmWrap\",className:\"notiflix-confirm\",width:\"300px\",zindex:4003,position:\"center\",distance:\"10px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:\"fade\",plainText:!0,titleColor:\"#32c682\",titleFontSize:\"16px\",titleMaxLength:34,messageColor:\"#1e1e1e\",messageFontSize:\"14px\",messageMaxLength:110,buttonsFontSize:\"15px\",buttonsMaxLength:34,okButtonColor:\"#f8f8f8\",okButtonBackground:\"#32c682\",cancelButtonColor:\"#f8f8f8\",cancelButtonBackground:\"#a9a9a9\"},x={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\",Custom:\"Custom\",Notiflix:\"Notiflix\"},g={ID:\"NotiflixLoadingWrap\",className:\"notiflix-loading\",zindex:4e3,backgroundColor:\"rgba(0,0,0,0.8)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:\"80px\",svgColor:\"#32c682\",messageID:\"NotiflixLoadingMessage\",messageFontSize:\"15px\",messageMaxLength:34,messageColor:\"#dcdcdc\"},b={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\"},u={ID:\"NotiflixBlockWrap\",querySelectorLimit:200,className:\"notiflix-block\",position:\"absolute\",zindex:1e3,backgroundColor:\"rgba(255,255,255,0.9)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,svgSize:\"45px\",svgColor:\"#383838\",messageFontSize:\"14px\",messageMaxLength:34,messageColor:\"#383838\"},y=function(t){return console.error(\"%c Notiflix Error \",\"padding:2px;border-radius:20px;color:#fff;background:#ff5549\",\"\\n\"+t+r)},k=function(t){return console.log(\"%c Notiflix Info \",\"padding:2px;border-radius:20px;color:#fff;background:#26c0d3\",\"\\n\"+t+r)},w=function(e){return e||(e=\"head\"),null!==t.document[e]||(y(\"\\nNotiflix needs to be appended to the \\\"<\"+e+\">\\\" element, but you called it before the \\\"<\"+e+\">\\\" element has been created.\"),!1)},h=function(e,i){if(!w(\"head\"))return!1;if(null!==e()&&!t.document.getElementById(i)){var a=t.document.createElement(\"style\");a.id=i,a.innerHTML=e(),t.document.head.appendChild(a)}},v=function(){var t={},e=!1,a=0;\"[object Boolean]\"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],a++);for(var n=function(i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=e&&\"[object Object]\"===Object.prototype.toString.call(i[a])?v(t[a],i[a]):i[a])};a<arguments.length;a++)n(arguments[a]);return t},N=function(e){var i=t.document.createElement(\"div\");return i.innerHTML=e,i.textContent||i.innerText||\"\"},C=function(t,e){t||(t=\"110px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportSuccess\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z\\\" style=\\\"-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},z=function(t,e){t||(t=\"110px\"),e||(e=\"#ff5549\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportFailure\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z\\\" style=\\\"-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z\\\" style=\\\"-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},S=function(t,e){t||(t=\"110px\"),e||(e=\"#eebf31\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportWarning\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z\\\" style=\\\"-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)\\\"><path d=\\\"M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z\\\" style=\\\"-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},L=function(t,e){t||(t=\"110px\"),e||(e=\"#26c0d3\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportInfo\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z\\\" style=\\\"-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},W=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" transform=\\\"scale(.8)\\\" viewBox=\\\"0 0 38 38\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\" transform=\\\"translate(1 1)\\\"><circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"18\\\" stroke-opacity=\\\".25\\\"/><path d=\\\"M36 18c0-9.94-8.06-18-18-18\\\"><animateTransform attributeName=\\\"transform\\\" dur=\\\"1s\\\" from=\\\"0 18 18\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 18 18\\\" type=\\\"rotate\\\"/></path></g></svg>\";return i},I=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingHourglass\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\\\"true\\\" data-animator-type=\\\"1\\\" style=\\\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\\\"><g id=\\\"NXhourglass2\\\" fill=\\\"inherit\\\"><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass4\\\" d=\\\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\\\"/></g><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass6\\\" d=\\\"M100 100L65.62 67.92V36.78h68.76v31.14z\\\"/></g><path d=\\\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\\\"/></g></g></svg>\";return i},R=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"25 25 50 50\\\" style=\\\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:\"+t+\";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:\"+t+\";position:absolute;top:0;left:0;margin:auto\\\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"\"+e+\"\\\" stroke-width=\\\"2\\\" style=\\\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\\\" stroke-dasharray=\\\"150 200\\\" stroke-dashoffset=\\\"-10\\\" stroke-linecap=\\\"round\\\"/></svg>\";return i},A=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 128 128\\\"><g><path fill=\\\"inherit\\\" d=\\\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\\\"/><animateTransform attributeName=\\\"transform\\\" dur=\\\"1.5s\\\" from=\\\"0 64 64\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 64 64\\\" type=\\\"rotate\\\"/></g></svg>\";return i},M=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 100 100\\\"><g transform=\\\"translate(25 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.239)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.266s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(50 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.00152)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.133s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(75 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.299)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g></svg>\";return i},B=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 44 44\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\"><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle></g></svg>\";return i},X=function(t,e,i){t||(t=\"60px\"),e||(e=\"#f8f8f8\"),i||(i=\"#32c682\");var a=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingNotiflixLib\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:\"+e+\";stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\\\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\\\" style=\\\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\\\" fill=\\\"\"+i+\"\\\" stroke=\\\"\"+i+\"\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"22\\\" stroke-width=\\\"12\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\\\" style=\\\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\\\" style=\\\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/></svg>\";return a},D=function(){return\"[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}\"},T=0,F=function(a,n,o,r){if(!w(\"body\"))return!1;e||G.Notify.init({});var c=v(!0,e,{});if(\"object\"==typeof o&&!Array.isArray(o)||\"object\"==typeof r&&!Array.isArray(r)){var p={};\"object\"==typeof o?p=o:\"object\"==typeof r&&(p=r),e=v(!0,e,p)}var f=e[a.toLocaleLowerCase(\"en\")];T++,\"string\"!=typeof n&&(n=\"Notiflix \"+a),e.plainText&&(n=N(n)),!e.plainText&&n.length>e.messageMaxLength&&(e=v(!0,e,{closeButton:!0,messageMaxLength:150}),n=\"Possible HTML Tags Error: The \\\"plainText\\\" option is \\\"false\\\" and the notification content length is more than the \\\"messageMaxLength\\\" option.\"),n.length>e.messageMaxLength&&(n=n.substring(0,e.messageMaxLength)+\"...\"),\"shadow\"===e.fontAwesomeIconStyle&&(f.fontAwesomeIconColor=f.background),e.cssAnimation||(e.cssAnimationDuration=0);var d=t.document.getElementById(m.wrapID)||t.document.createElement(\"div\");if(d.id=m.wrapID,d.style.width=e.width,d.style.zIndex=e.zindex,d.style.opacity=e.opacity,\"center-center\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.margin=\"auto\",d.classList.add(\"nx-flex-center-center\"),d.style.maxHeight=\"calc((100vh - \"+e.distance+\") - \"+e.distance+\")\",d.style.display=\"flex\",d.style.flexWrap=\"wrap\",d.style.flexDirection=\"column\",d.style.justifyContent=\"center\",d.style.alignItems=\"center\",d.style.pointerEvents=\"none\"):\"center-top\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.top=e.distance,d.style.bottom=\"auto\",d.style.margin=\"auto\"):\"center-bottom\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.margin=\"auto\"):\"right-bottom\"===e.position?(d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.left=\"auto\"):\"left-top\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=\"auto\",d.style.bottom=\"auto\"):\"left-bottom\"===e.position?(d.style.left=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.right=\"auto\"):(d.style.right=e.distance,d.style.top=e.distance,d.style.left=\"auto\",d.style.bottom=\"auto\"),e.backOverlay){var x=t.document.getElementById(m.overlayID)||t.document.createElement(\"div\");x.id=m.overlayID,x.style.width=\"100%\",x.style.height=\"100%\",x.style.position=\"fixed\",x.style.zIndex=e.zindex-1,x.style.left=0,x.style.top=0,x.style.right=0,x.style.bottom=0,x.style.background=f.backOverlayColor||e.backOverlayColor,x.className=e.cssAnimation?\"nx-with-animation\":\"\",x.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+\"ms\":\"\",t.document.getElementById(m.overlayID)||t.document.body.appendChild(x)}t.document.getElementById(m.wrapID)||t.document.body.appendChild(d);var g=t.document.createElement(\"div\");g.id=e.ID+\"-\"+T,g.className=e.className+\" \"+f.childClassName+\" \"+(e.cssAnimation?\"nx-with-animation\":\"\")+\" \"+(e.useIcon?\"nx-with-icon\":\"\")+\" nx-\"+e.cssAnimationStyle+\" \"+(e.closeButton&&\"function\"!=typeof o?\"nx-with-close-button\":\"\")+\" \"+(\"function\"==typeof o?\"nx-with-callback\":\"\")+\" \"+(e.clickToClose?\"nx-notify-click-to-close\":\"\"),g.style.fontSize=e.fontSize,g.style.color=f.textColor,g.style.background=f.background,g.style.borderRadius=e.borderRadius,g.style.pointerEvents=\"all\",e.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\")),g.style.fontFamily=\"\\\"\"+e.fontFamily+\"\\\", \"+s,e.cssAnimation&&(g.style.animationDuration=e.cssAnimationDuration+\"ms\");var b=\"\";if(e.closeButton&&\"function\"!=typeof o&&(b=\"<span class=\\\"nx-close-button\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\\\"/></g></svg></span>\"),!e.useIcon)g.innerHTML=\"<span class=\\\"nx-message\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else if(e.useFontAwesome)g.innerHTML=\"<i style=\\\"color:\"+f.fontAwesomeIconColor+\"; font-size:\"+e.fontAwesomeIconSize+\";\\\" class=\\\"nx-message-icon nx-message-icon-fa \"+f.fontAwesomeClassName+\" \"+(\"shadow\"===e.fontAwesomeIconStyle?\"nx-message-icon-fa-shadow\":\"nx-message-icon-fa-basic\")+\"\\\"></i><span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else{var u=\"\";a===l.Success?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\\\"/></g></svg>\":a===l.Failure?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\\\"/></g></svg>\":a===l.Warning?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\\\"/></g></svg>\":a===l.Info&&(u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\\\"/></g></svg>\"),g.innerHTML=u+\"<span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\")}if(\"left-bottom\"===e.position||\"right-bottom\"===e.position){var y=t.document.getElementById(m.wrapID);y.insertBefore(g,y.firstChild)}else t.document.getElementById(m.wrapID).appendChild(g);var k=t.document.getElementById(g.id);if(k){var h,C,z=function(){k.classList.add(\"nx-remove\");var e=t.document.getElementById(m.overlayID);e&&0>=d.childElementCount&&e.classList.add(\"nx-remove\"),clearTimeout(h)},S=function(){if(k&&null!==k.parentNode&&k.parentNode.removeChild(k),0>=d.childElementCount&&null!==d.parentNode){d.parentNode.removeChild(d);var e=t.document.getElementById(m.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(C)};if(e.closeButton&&\"function\"!=typeof o){var L=t.document.getElementById(g.id).querySelector(\"span.nx-close-button\");L.addEventListener(\"click\",function(){z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)})}if((\"function\"==typeof o||e.clickToClose)&&k.addEventListener(\"click\",function(){\"function\"==typeof o&&o(),z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)}),!e.closeButton&&\"function\"!=typeof o){var W=function(){h=setTimeout(function(){z()},e.timeout),C=setTimeout(function(){S()},e.timeout+e.cssAnimationDuration)};W(),e.pauseOnHover&&(k.addEventListener(\"mouseenter\",function(){k.classList.add(\"nx-paused\"),clearTimeout(h),clearTimeout(C)}),k.addEventListener(\"mouseleave\",function(){k.classList.remove(\"nx-paused\"),W()}))}}if(e.showOnlyTheLastOne&&0<T)for(var I,R=t.document.querySelectorAll(\"[id^=\"+e.ID+\"-]:not([id=\"+e.ID+\"-\"+T+\"])\"),A=0;A<R.length;A++)I=R[A],null!==I.parentNode&&I.parentNode.removeChild(I);e=v(!0,e,c)},E=function(){return\"[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},j=function(e,a,n,o,r,l){if(!w(\"body\"))return!1;i||G.Report.init({});var m={};if(\"object\"==typeof r&&!Array.isArray(r)||\"object\"==typeof l&&!Array.isArray(l)){var f={};\"object\"==typeof r?f=r:\"object\"==typeof l&&(f=l),m=v(!0,i,{}),i=v(!0,i,f)}var d=i[e.toLocaleLowerCase(\"en\")];\"string\"!=typeof a&&(a=\"Notiflix \"+e),\"string\"!=typeof n&&(e===c.Success?n=\"\\\"Do not try to become a person of success but try to become a person of value.\\\" <br><br>- Albert Einstein\":e===c.Failure?n=\"\\\"Failure is simply the opportunity to begin again, this time more intelligently.\\\" <br><br>- Henry Ford\":e===c.Warning?n=\"\\\"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny.\\\" <br><br>- Mustafa Kemal Ataturk\":e===c.Info&&(n=\"\\\"Knowledge rests not upon truth alone, but upon error also.\\\" <br><br>- Carl Gustav Jung\")),\"string\"!=typeof o&&(o=\"Okay\"),i.plainText&&(a=N(a),n=N(n),o=N(o)),i.plainText||(a.length>i.titleMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than the \\\"titleMaxLength\\\" option.\",o=\"Okay\"),n.length>i.messageMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than the \\\"messageMaxLength\\\" option.\",o=\"Okay\"),o.length>i.buttonMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the button content length is more than the \\\"buttonMaxLength\\\" option.\",o=\"Okay\")),a.length>i.titleMaxLength&&(a=a.substring(0,i.titleMaxLength)+\"...\"),n.length>i.messageMaxLength&&(n=n.substring(0,i.messageMaxLength)+\"...\"),o.length>i.buttonMaxLength&&(o=o.substring(0,i.buttonMaxLength)+\"...\"),i.cssAnimation||(i.cssAnimationDuration=0);var x=t.document.createElement(\"div\");x.id=p.ID,x.className=i.className,x.style.zIndex=i.zindex,x.style.borderRadius=i.borderRadius,x.style.fontFamily=\"\\\"\"+i.fontFamily+\"\\\", \"+s,i.rtl&&(x.setAttribute(\"dir\",\"rtl\"),x.classList.add(\"nx-rtl-on\")),x.style.display=\"flex\",x.style.flexWrap=\"wrap\",x.style.flexDirection=\"column\",x.style.alignItems=\"center\",x.style.justifyContent=\"center\";var g=\"\",b=!0===i.backOverlayClickToClose;i.backOverlay&&(g=\"<div class=\\\"\"+i.className+\"-overlay\"+(i.cssAnimation?\" nx-with-animation\":\"\")+(b?\" nx-report-click-to-close\":\"\")+\"\\\" style=\\\"background:\"+(d.backOverlayColor||i.backOverlayColor)+\";animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"></div>\");var u=\"\";if(e===c.Success?u=C(i.svgSize,d.svgColor):e===c.Failure?u=z(i.svgSize,d.svgColor):e===c.Warning?u=S(i.svgSize,d.svgColor):e===c.Info&&(u=L(i.svgSize,d.svgColor)),x.innerHTML=g+\"<div class=\\\"\"+i.className+\"-content\"+(i.cssAnimation?\" nx-with-animation \":\"\")+\" nx-\"+i.cssAnimationStyle+\"\\\" style=\\\"width:\"+i.width+\"; background:\"+i.backgroundColor+\"; animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"><div style=\\\"width:\"+i.svgSize+\"; height:\"+i.svgSize+\";\\\" class=\\\"\"+i.className+\"-icon\\\">\"+u+\"</div><h5 class=\\\"\"+i.className+\"-title\\\" style=\\\"font-weight:500; font-size:\"+i.titleFontSize+\"; color:\"+d.titleColor+\";\\\">\"+a+\"</h5><p class=\\\"\"+i.className+\"-message\\\" style=\\\"font-size:\"+i.messageFontSize+\"; color:\"+d.messageColor+\";\\\">\"+n+\"</p><a id=\\\"NXReportButton\\\" class=\\\"\"+i.className+\"-button\\\" style=\\\"font-weight:500; font-size:\"+i.buttonFontSize+\"; background:\"+d.buttonBackground+\"; color:\"+d.buttonColor+\";\\\">\"+o+\"</a></div>\",!t.document.getElementById(x.id)){t.document.body.appendChild(x);var y=function(){var e=t.document.getElementById(x.id);e.classList.add(\"nx-remove\");var a=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(a)},i.cssAnimationDuration)},k=t.document.getElementById(\"NXReportButton\");if(k.addEventListener(\"click\",function(){\"function\"==typeof r&&r(),y()}),g&&b){var h=t.document.querySelector(\".nx-report-click-to-close\");h.addEventListener(\"click\",function(){y()})}}i=v(!0,i,m)},O=function(){return\"[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},H=function(e,i,n,o,r,l,m,c,p){if(!w(\"body\"))return!1;a||G.Confirm.init({});var x=v(!0,a,{});\"object\"!=typeof p||Array.isArray(p)||(a=v(!0,a,p)),\"string\"!=typeof i&&(i=\"Notiflix Confirm\"),\"string\"!=typeof n&&(n=\"Do you agree with me?\"),\"string\"!=typeof r&&(r=\"Yes\"),\"string\"!=typeof l&&(l=\"No\"),\"function\"!=typeof m&&(m=void 0),\"function\"!=typeof c&&(c=void 0),a.plainText&&(i=N(i),n=N(n),r=N(r),l=N(l)),a.plainText||(i.length>a.titleMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than \\\"titleMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),n.length>a.messageMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than \\\"messageMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),(r.length||l.length)>a.buttonsMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the buttons content length is more than \\\"buttonsMaxLength\\\" option.\",r=\"Okay\",l=\"...\")),i.length>a.titleMaxLength&&(i=i.substring(0,a.titleMaxLength)+\"...\"),n.length>a.messageMaxLength&&(n=n.substring(0,a.messageMaxLength)+\"...\"),r.length>a.buttonsMaxLength&&(r=r.substring(0,a.buttonsMaxLength)+\"...\"),l.length>a.buttonsMaxLength&&(l=l.substring(0,a.buttonsMaxLength)+\"...\"),a.cssAnimation||(a.cssAnimationDuration=0);var g=t.document.createElement(\"div\");g.id=d.ID,g.className=a.className+(a.cssAnimation?\" nx-with-animation nx-\"+a.cssAnimationStyle:\"\"),g.style.zIndex=a.zindex,g.style.padding=a.distance,a.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\"));var b=\"string\"==typeof a.position?a.position.trim():\"center\";g.classList.add(\"nx-position-\"+b),g.style.fontFamily=\"\\\"\"+a.fontFamily+\"\\\", \"+s;var u=\"\";a.backOverlay&&(u=\"<div class=\\\"\"+a.className+\"-overlay\"+(a.cssAnimation?\" nx-with-animation\":\"\")+\"\\\" style=\\\"background:\"+a.backOverlayColor+\";animation-duration:\"+a.cssAnimationDuration+\"ms;\\\"></div>\");var y=\"\";\"function\"==typeof m&&(y=\"<a id=\\\"NXConfirmButtonCancel\\\" class=\\\"nx-confirm-button-cancel\\\" style=\\\"color:\"+a.cancelButtonColor+\";background:\"+a.cancelButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+l+\"</a>\");var k=\"\",h=null,C=void 0;if(e===f.Ask||e===f.Prompt){h=o||\"\";var z=e===f.Ask?Math.ceil(1.5*h.length):200<h.length?Math.ceil(1.5*h.length):250,S=e===f.Prompt?\"value=\\\"\"+h+\"\\\"\":\"\";k=\"<div><input id=\\\"NXConfirmValidationInput\\\" type=\\\"text\\\" \"+S+\" maxlength=\\\"\"+z+\"\\\" style=\\\"font-size:\"+a.messageFontSize+\";border-radius: \"+a.borderRadius+\";\\\" autocomplete=\\\"off\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"none\\\" /></div>\"}if(g.innerHTML=u+\"<div class=\\\"\"+a.className+\"-content\\\" style=\\\"width:\"+a.width+\"; background:\"+a.backgroundColor+\"; animation-duration:\"+a.cssAnimationDuration+\"ms; border-radius: \"+a.borderRadius+\";\\\"><div class=\\\"\"+a.className+\"-head\\\"><h5 style=\\\"color:\"+a.titleColor+\";font-size:\"+a.titleFontSize+\";\\\">\"+i+\"</h5><div style=\\\"color:\"+a.messageColor+\";font-size:\"+a.messageFontSize+\";\\\">\"+n+k+\"</div></div><div class=\\\"\"+a.className+\"-buttons\\\"><a id=\\\"NXConfirmButtonOk\\\" class=\\\"nx-confirm-button-ok\"+(\"function\"==typeof m?\"\":\" nx-full\")+\"\\\" style=\\\"color:\"+a.okButtonColor+\";background:\"+a.okButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+r+\"</a>\"+y+\"</div></div>\",!t.document.getElementById(g.id)){t.document.body.appendChild(g);var L=t.document.getElementById(g.id),W=t.document.getElementById(\"NXConfirmButtonOk\"),I=t.document.getElementById(\"NXConfirmValidationInput\");if(I&&(I.focus(),I.setSelectionRange(0,(I.value||\"\").length),I.addEventListener(\"keyup\",function(t){var i=t.target.value;if(e===f.Ask&&i!==h)t.preventDefault(),I.classList.add(\"nx-validation-failure\"),I.classList.remove(\"nx-validation-success\");else{e===f.Ask&&(I.classList.remove(\"nx-validation-failure\"),I.classList.add(\"nx-validation-success\"));var a=\"enter\"===(t.key||\"\").toLocaleLowerCase(\"en\")||13===t.keyCode;a&&W.dispatchEvent(new Event(\"click\"))}})),W.addEventListener(\"click\",function(t){if(e===f.Ask&&h&&I){var i=(I.value||\"\").toString();if(i!==h)return I.focus(),I.classList.add(\"nx-validation-failure\"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;I.classList.remove(\"nx-validation-failure\")}\"function\"==typeof m&&(e===f.Prompt&&I&&(C=I.value||\"\"),m(C)),L.classList.add(\"nx-remove\");var n=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(n))},a.cssAnimationDuration)}),\"function\"==typeof m){var R=t.document.getElementById(\"NXConfirmButtonCancel\");R.addEventListener(\"click\",function(){\"function\"==typeof c&&(e===f.Prompt&&I&&(C=I.value||\"\"),c(C)),L.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(t))},a.cssAnimationDuration)})}}a=v(!0,a,x)},P=function(){return\"[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] img,[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}\"},U=function(e,i,a,o,r){if(!w(\"body\"))return!1;n||G.Loading.init({});var l=v(!0,n,{});if(\"object\"==typeof i&&!Array.isArray(i)||\"object\"==typeof a&&!Array.isArray(a)){var m={};\"object\"==typeof i?m=i:\"object\"==typeof a&&(m=a),n=v(!0,n,m)}var c=\"\";if(\"string\"==typeof i&&0<i.length&&(c=i),o){c=c.length>n.messageMaxLength?N(c).toString().substring(0,n.messageMaxLength)+\"...\":N(c).toString();var p=\"\";0<c.length&&(p=\"<p id=\\\"\"+n.messageID+\"\\\" class=\\\"nx-loading-message\\\" style=\\\"color:\"+n.messageColor+\";font-size:\"+n.messageFontSize+\";\\\">\"+c+\"</p>\"),n.cssAnimation||(n.cssAnimationDuration=0);var f=\"\";if(e===x.Standard)f=W(n.svgSize,n.svgColor);else if(e===x.Hourglass)f=I(n.svgSize,n.svgColor);else if(e===x.Circle)f=R(n.svgSize,n.svgColor);else if(e===x.Arrows)f=A(n.svgSize,n.svgColor);else if(e===x.Dots)f=M(n.svgSize,n.svgColor);else if(e===x.Pulse)f=B(n.svgSize,n.svgColor);else if(e===x.Custom&&null!==n.customSvgCode&&null===n.customSvgUrl)f=n.customSvgCode||\"\";else if(e===x.Custom&&null!==n.customSvgUrl&&null===n.customSvgCode)f=\"<img class=\\\"nx-custom-loading-icon\\\" width=\\\"\"+n.svgSize+\"\\\" height=\\\"\"+n.svgSize+\"\\\" src=\\\"\"+n.customSvgUrl+\"\\\" alt=\\\"Notiflix\\\">\";else{if(e===x.Custom&&(null===n.customSvgUrl||null===n.customSvgCode))return y(\"You have to set a static SVG url to \\\"customSvgUrl\\\" option to use Loading Custom.\"),!1;f=X(n.svgSize,\"#f8f8f8\",\"#32c682\")}var d=parseInt((n.svgSize||\"\").replace(/[^0-9]/g,\"\")),b=t.innerWidth,u=d>=b?b-40+\"px\":d+\"px\",k=\"<div style=\\\"width:\"+u+\"; height:\"+u+\";\\\" class=\\\"\"+n.className+\"-icon\"+(0<c.length?\" nx-with-message\":\"\")+\"\\\">\"+f+\"</div>\",h=t.document.createElement(\"div\");if(h.id=g.ID,h.className=n.className+(n.cssAnimation?\" nx-with-animation\":\"\")+(n.clickToClose?\" nx-loading-click-to-close\":\"\"),h.style.zIndex=n.zindex,h.style.background=n.backgroundColor,h.style.animationDuration=n.cssAnimationDuration+\"ms\",h.style.fontFamily=\"\\\"\"+n.fontFamily+\"\\\", \"+s,h.style.display=\"flex\",h.style.flexWrap=\"wrap\",h.style.flexDirection=\"column\",h.style.alignItems=\"center\",h.style.justifyContent=\"center\",n.rtl&&(h.setAttribute(\"dir\",\"rtl\"),h.classList.add(\"nx-rtl-on\")),h.innerHTML=k+p,!t.document.getElementById(h.id)&&(t.document.body.appendChild(h),n.clickToClose)){var C=t.document.getElementById(h.id);C.addEventListener(\"click\",function(){h.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==h.parentNode&&(h.parentNode.removeChild(h),clearTimeout(t))},n.cssAnimationDuration)})}}else if(t.document.getElementById(g.ID))var z=t.document.getElementById(g.ID),S=setTimeout(function(){z.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))},n.cssAnimationDuration);clearTimeout(S)},r);n=v(!0,n,l)},V=function(e){\"string\"!=typeof e&&(e=\"\");var i=t.document.getElementById(g.ID);if(i)if(0<e.length){e=e.length>n.messageMaxLength?N(e).substring(0,n.messageMaxLength)+\"...\":N(e);var a=i.getElementsByTagName(\"p\")[0];if(a)a.innerHTML=e;else{var o=t.document.createElement(\"p\");o.id=n.messageID,o.className=\"nx-loading-message nx-loading-message-new\",o.style.color=n.messageColor,o.style.fontSize=n.messageFontSize,o.innerHTML=e,i.appendChild(o)}}else y(\"Where is the new message?\")},q=function(){return\"[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*=\\\"-message\\\"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}\"},Q=0,Y=function(e,i,a,n,r,l){var m;if(Array.isArray(a)){if(1>a.length)return y(\"Array of HTMLElements should contains at least one HTMLElement.\"),!1;m=a}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,a)){if(1>a.length)return y(\"NodeListOf<HTMLElement> should contains at least one HTMLElement.\"),!1;m=Array.prototype.slice.call(a)}else{var c=\"string\"!=typeof a||1>(a||\"\").length||1===(a||\"\").length&&(\"#\"===(a||\"\")[0]||\".\"===(a||\"\")[0]);if(c)return y(\"The selector parameter must be a string and matches a specified CSS selector(s).\"),!1;var p=t.document.querySelectorAll(a);if(1>p.length)return y(\"You called the \\\"Notiflix.Block...\\\" function with \\\"\"+a+\"\\\" selector, but there is no such element(s) in the document.\"),!1;m=p}o||G.Block.init({});var f=v(!0,o,{});if(\"object\"==typeof n&&!Array.isArray(n)||\"object\"==typeof r&&!Array.isArray(r)){var d={};\"object\"==typeof n?d=n:\"object\"==typeof r&&(d=r),o=v(!0,o,d)}var x=\"\";\"string\"==typeof n&&0<n.length&&(x=n),o.cssAnimation||(o.cssAnimationDuration=0);var g=u.className;\"string\"==typeof o.className&&(g=o.className.trim());var h=\"number\"==typeof o.querySelectorLimit?o.querySelectorLimit:200,C=(m||[]).length>=h?h:m.length,z=\"nx-block-temporary-position\";if(e){for(var S,L=[\"area\",\"base\",\"br\",\"col\",\"command\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"html\",\"head\",\"title\",\"script\",\"style\",\"iframe\"],X=0;X<C;X++)if(S=m[X],S){if(-1<L.indexOf(S.tagName.toLocaleLowerCase(\"en\")))break;var D=S.querySelectorAll(\"[id^=\"+u.ID+\"]\");if(1>D.length){var T=\"\";i&&(i===b.Hourglass?T=I(o.svgSize,o.svgColor):i===b.Circle?T=R(o.svgSize,o.svgColor):i===b.Arrows?T=A(o.svgSize,o.svgColor):i===b.Dots?T=M(o.svgSize,o.svgColor):i===b.Pulse?T=B(o.svgSize,o.svgColor):T=W(o.svgSize,o.svgColor));var F=\"<span class=\\\"\"+g+\"-icon\\\" style=\\\"width:\"+o.svgSize+\";height:\"+o.svgSize+\";\\\">\"+T+\"</span>\",E=\"\";0<x.length&&(x=x.length>o.messageMaxLength?N(x).substring(0,o.messageMaxLength)+\"...\":N(x),E=\"<span style=\\\"font-size:\"+o.messageFontSize+\";color:\"+o.messageColor+\";\\\" class=\\\"\"+g+\"-message\\\">\"+x+\"</span>\"),Q++;var j=t.document.createElement(\"div\");j.id=u.ID+\"-\"+Q,j.className=g+(o.cssAnimation?\" nx-with-animation\":\"\"),j.style.position=o.position,j.style.zIndex=o.zindex,j.style.background=o.backgroundColor,j.style.animationDuration=o.cssAnimationDuration+\"ms\",j.style.fontFamily=\"\\\"\"+o.fontFamily+\"\\\", \"+s,j.style.display=\"flex\",j.style.flexWrap=\"wrap\",j.style.flexDirection=\"column\",j.style.alignItems=\"center\",j.style.justifyContent=\"center\",o.rtl&&(j.setAttribute(\"dir\",\"rtl\"),j.classList.add(\"nx-rtl-on\")),j.innerHTML=F+E;var O=t.getComputedStyle(S).getPropertyValue(\"position\"),H=\"string\"==typeof O?O.toLocaleLowerCase(\"en\"):\"relative\",P=Math.round(1.25*parseInt(o.svgSize))+40,U=S.offsetHeight||0,V=\"\";P>U&&(V=\"min-height:\"+P+\"px;\");var q=\"\";q=S.getAttribute(\"id\")?\"#\"+S.getAttribute(\"id\"):S.classList[0]?\".\"+S.classList[0]:(S.tagName||\"\").toLocaleLowerCase(\"en\");var Y=\"\",K=-1>=[\"absolute\",\"relative\",\"fixed\",\"sticky\"].indexOf(H);if(K||0<V.length){if(!w(\"head\"))return!1;K&&(Y=\"position:relative!important;\");var $=\"<style id=\\\"Style-\"+u.ID+\"-\"+Q+\"\\\">\"+q+\".\"+z+\"{\"+Y+V+\"}</style>\",J=t.document.createRange();J.selectNode(t.document.head);var Z=J.createContextualFragment($);t.document.head.appendChild(Z),S.classList.add(z)}S.appendChild(j)}}}else var _=function(e){var i=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e);var a=e.getAttribute(\"id\"),n=t.document.getElementById(\"Style-\"+a);n&&null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)},o.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)e=t[n],e&&(e.classList.add(\"nx-remove\"),_(e));else\"string\"==typeof a?k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\" selector, but this selector does not have a \\\"Block\\\" element to remove.\"):k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\", but this \\\"Array<HTMLElement>\\\" or \\\"NodeListOf<HTMLElement>\\\" does not have a \\\"Block\\\" element to remove.\")},et=function(t){var e=setTimeout(function(){t.classList.remove(z),clearTimeout(e)},o.cssAnimationDuration+300)},it=setTimeout(function(){for(var t,e=0;e<C;e++)t=m[e],t&&(et(t),D=t.querySelectorAll(\"[id^=\"+u.ID+\"]\"),tt(D));clearTimeout(it)},l);o=v(!0,o,f)},G={Notify:{init:function(t){e=v(!0,m,t),h(D,\"NotiflixNotifyInternalCSS\")},merge:function(t){return e?void(e=v(!0,e,t)):(y(\"You have to initialize the Notify module before call Merge function.\"),!1)},success:function(t,e,i){F(l.Success,t,e,i)},failure:function(t,e,i){F(l.Failure,t,e,i)},warning:function(t,e,i){F(l.Warning,t,e,i)},info:function(t,e,i){F(l.Info,t,e,i)}},Report:{init:function(t){i=v(!0,p,t),h(E,\"NotiflixReportInternalCSS\")},merge:function(t){return i?void(i=v(!0,i,t)):(y(\"You have to initialize the Report module before call Merge function.\"),!1)},success:function(t,e,i,a,n){j(c.Success,t,e,i,a,n)},failure:function(t,e,i,a,n){j(c.Failure,t,e,i,a,n)},warning:function(t,e,i,a,n){j(c.Warning,t,e,i,a,n)},info:function(t,e,i,a,n){j(c.Info,t,e,i,a,n)}},Confirm:{init:function(t){a=v(!0,d,t),h(O,\"NotiflixConfirmInternalCSS\")},merge:function(t){return a?void(a=v(!0,a,t)):(y(\"You have to initialize the Confirm module before call Merge function.\"),!1)},show:function(t,e,i,a,n,o,r){H(f.Show,t,e,null,i,a,n,o,r)},ask:function(t,e,i,a,n,o,r,s){H(f.Ask,t,e,i,a,n,o,r,s)},prompt:function(t,e,i,a,n,o,r,s){H(f.Prompt,t,e,i,a,n,o,r,s)}},Loading:{init:function(t){n=v(!0,g,t),h(P,\"NotiflixLoadingInternalCSS\")},merge:function(t){return n?void(n=v(!0,n,t)):(y(\"You have to initialize the Loading module before call Merge function.\"),!1)},standard:function(t,e){U(x.Standard,t,e,!0,0)},hourglass:function(t,e){U(x.Hourglass,t,e,!0,0)},circle:function(t,e){U(x.Circle,t,e,!0,0)},arrows:function(t,e){U(x.Arrows,t,e,!0,0)},dots:function(t,e){U(x.Dots,t,e,!0,0)},pulse:function(t,e){U(x.Pulse,t,e,!0,0)},custom:function(t,e){U(x.Custom,t,e,!0,0)},notiflix:function(t,e){U(x.Notiflix,t,e,!0,0)},remove:function(t){\"number\"!=typeof t&&(t=0),U(null,null,null,!1,t)},change:function(t){V(t)}},Block:{init:function(t){o=v(!0,u,t),h(q,\"NotiflixBlockInternalCSS\")},merge:function(t){return o?void(o=v(!0,o,t)):(y(\"You have to initialize the \\\"Notiflix.Block\\\" module before call Merge function.\"),!1)},standard:function(t,e,i){Y(!0,b.Standard,t,e,i)},hourglass:function(t,e,i){Y(!0,b.Hourglass,t,e,i)},circle:function(t,e,i){Y(!0,b.Circle,t,e,i)},arrows:function(t,e,i){Y(!0,b.Arrows,t,e,i)},dots:function(t,e,i){Y(!0,b.Dots,t,e,i)},pulse:function(t,e,i){Y(!0,b.Pulse,t,e,i)},remove:function(t,e){\"number\"!=typeof e&&(e=0),Y(!1,null,t,null,null,e)}}};return\"object\"==typeof t.Notiflix?v(!0,t.Notiflix,{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}):{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}});","import axios from \"axios\";\nimport Notiflix from \"notiflix\";\n\nconst keyApi = '0bf9a11da9d083f4751315d07dcbd89b';\nconst baseUrl = 'https://api.themoviedb.org/3/trending/movie/day';\nconst searchByWodrUrl = 'https://api.themoviedb.org/3/search/movie';\nconst searchByIdUrl = 'https://api.themoviedb.org/3/movie/';\nconst imgUrl = 'https://image.tmdb.org/t/p/w';\nconst genresUrl = 'https://api.themoviedb.org/3/genre/movie/list';\n\nconst loading = Notiflix.Loading.circle('loading result...');\nconst stopLoading = Notiflix.Loading.remove();\n\nexport const movieLink = {\n\n    //Objec method to get movies by page number\n    async getMovies ( pageNumber ) {\n            \n        const params = {\n            api_key: keyApi,\n            page: pageNumber,\n        };\n\n           const request = await axios.get ( baseUrl, { params } );\n              return await request.data;\n\n    },\n\n    //Objec method to get movies by name\n    async getMoviesByWord (queryWord, pageNumber) {\n            \n        const params = {\n            api_key: keyApi,\n            language: 'en-US',\n            query: queryWord,\n            page: pageNumber,\n            include_adult: false,\n        };\n\n           const request = await axios.get ( searchByWodrUrl, { params } );\n\n           return await request.data;\n\n    },\n\n    //Objec method to get movie about by id\n    async getMoviesById ( movieId ) {\n            \n        const params = {\n            language: 'en-US',\n            api_key: keyApi,\n        };\n\n        loading;\n\n        try {\n            const request = await axios.get ( `${searchByIdUrl}${movieId}`, { params } );\n            stopLoading;\n            return await request.data;\n        } catch (error) {\n            stopLoading;\n            Notiflix.Notify.failure(`Some broblems with api or query! Err: ${error}`);\n        };\n    },\n  \n    //Objec method to get geres list\n    async getGenresList () {\n\n        const params = {\n            api_key: keyApi,\n            language: 'en-US',\n        };\n\n        loading;\n\n        try {\n            const request = await axios.get ( genresUrl, { params } );\n            stopLoading;\n            return await request.data.genres;\n        } catch (error) {\n            stopLoading;\n            Notiflix.Notify.failure(`Some broblems with api or query! Err: ${error}`);\n        };\n    },\n\n    //Objec method to img full path\n    getImageUrl (imgName, imgSize) {\n        return `${imgUrl}${imgSize}/${imgName}`;\n    },\n\n}\n\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2iwNO\")).toString();","import { movieLink } from '../linkapi';\nimport imageURL from '../../images/placeholder.jpg';\n\nconst posterUrl = 'https://image.tmdb.org/t/p/w';\n\nexport function getMovieById(\n  {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n\n    overview,\n    id,\n  },\n  genres\n) {\n  let genresList = genres.map(element => element.name);\n\n  const cardImgModal = poster_path\n    ? movieLink.getImageUrl(poster_path, 500)\n    : imageURL;\n\n  return `\n\n    <div class=\"card-film film \" id=\"${id}\">\n      <button class=\"btn-close-modal js-btn-close-modal\" type=\"button\">\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8 8L22 22\"  />\n          <path d=\"M8 22L22 8\"  />\n        </svg>\n      </button>\n      <div class=\"film__poster\">\n        <img\n          src=\"${cardImgModal} \"\n          alt=\"poster\"\n          max-width=\"375px\"\n          max-height=\"478px\"\n        />\n        <button class=\"btn-play-trailer\" id=\"teaser\" type=\"button\">watch the trailer</button>\n      </div>\n      <div class=\"film__content\">\n        <h2 class=\"film__title\">${title}</h2>\n\n        <div class=\"list-wrapper\">\n          <ul class=\"film-list__left\">\n            <li class=\"item-left\">\n              <span>Vote / Votes</span>\n            </li>\n            <li class=\"item-left\"><span>Popularity</span></li>\n            <li class=\"item-left\">\n              <span>Original Title </span>\n            </li>\n            <li class=\"item-left\"><span>Genre</span></li>\n          </ul>\n          <ul class=\"film-list__right\">\n            <li class=\"item-right item-right--vote\">\n              <span class=\"film-vote\">${Number(\n                vote_average.toFixed(1)\n              )}</span>/<span>${vote_count}</span>\n            </li>\n            <li class=\"item-right item-right--popularity\">\n              <span>${popularity.toFixed(1)}</span>\n            </li>\n            <li class=\"item-right\"><span>${original_title}</span></li>\n            <li class=\"item-right\"><span>${genresList.join(', ')}</span></li>\n          </ul>\n        </div>\n\n        <p class=\"film__about\">About</p>\n        <p class=\"film__about-description\">${overview} </p>\n        <div class=\"button-wrapper\">\n          <button class=\"btn-modal film-btn__watched is-active\">\n            add to Watched\n          </button>\n          <button class=\"btn-modal film-btn__queue\">add to queue</button>\n        </div>\n      </div>\n    </div>                \n  `;\n}\n","export const refs = {\n  pageNavigation: document.querySelector('.loadMore'),\n  pageBack: document.querySelector('.back'),\n  pageNext: document.querySelector('.next'),\n  pages: document.querySelector('.pages'),\n  searchInput: document.querySelector('.search-field'),\n  searchForm: document.querySelector('.search_form'),\n\n  header: document.querySelector('.header'),\n  //searchInput: document.querySelector('.input-wrapper'),\n  searcBox: document.querySelector('.input-wrapper'),\n  libraryBtn: document.querySelector('.nav_library'),\n  homeBtn: document.querySelector('.nav_home'),\n  watchedBtn: document.querySelector('.watched__btn'),\n  queueBtn: document.querySelector('.queue__btn'),\n\n  libraryBtn: document.querySelector('.nav_library'),\n  filmList: document.querySelector('.film-list'),\n  body: document.querySelector('.body'),\n  openModalBtn: document.querySelector('.footer-modal'),\n  closeModalBtn: document.querySelector('[data-teammodal-close]'),\n  modal: document.querySelector('[data-modal-team]'),\n  bckdrp: document.querySelector('.backdrop-team'),\n};\n","import { movieLink } from './linkapi';\nimport imageURL from '../images/placeholder.jpg';\n\nexport const getItemTemplateForStorage = ({\n  title,\n  poster_path,\n  release_date,\n  genres,\n  id,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n  const year = release_date ? release_date.substr(0, 4) : 'No release date';\n\n  const cardImg1x = poster_path\n    ? movieLink.getImageUrl(poster_path, 500)\n    : imageURL;\n\n  return `<li class=\"film-list__item\" id= ${id}>\n      <a href=\"\" class=\"film-list__link link\">\n          <div class=\"film-list__top-wrap\">\n              <picture>\n                  <source\n                  srcset=\"\n                     ${cardImg1x}  1x,\n                     ${cardImg1x}  2x \"\n                  media=\"(min-width: 1280px)\"\n                  />\n                  <source\n                  srcset=\"\n                    ${cardImg1x}  1x,\n                    ${cardImg1x}  2x\"\n                     media=\"(min-width: 768px)\"\n                  />\n                  <source\n                  srcset=\"\n                    ${cardImg1x}  1x,\n                    ${cardImg1x}  2x\"\n                     media=\"(max-width: 480px)\"\n                  />\n                  <img src=\"./images/film-1-mob-1x.jpg\" \n                  alt=\"film\" />\n              </picture>\n          </div>\n          <div class=\"film-data\">\n            <h2 class=\"film-data__title\">${title}</h2>\n            <div class=\"film-data__info\">\n              <p class=\"film-data__genres\">${genresList}</p>\n              <p class=\"film-data__year\">| ${year}</p>\n            </div>\n          </div>\n        </a>\n      </li>`;\n};\n","import { movieLink } from './linkapi';\nimport { getItemTemplateForStorage } from './getItemTemplateForStorage';\nimport { refs } from './refs';\n\nexport const renderFilmsOnMyLibrary = parseData => {\n  refs.filmList.innerHTML = '';\n\n  parseData.map(id => {\n    movieLink\n      .getMoviesById(id)\n      .then(({ title, poster_path, release_date, genres, id }) => {\n        const item = getItemTemplateForStorage({\n          title,\n          poster_path,\n          release_date,\n          genres,\n          id,\n        });\n        refs.filmList.insertAdjacentHTML('beforeend', item);\n      });\n  });\n};\n","import { refs } from './refs';\nimport { renderFilmsOnMyLibrary } from './renderFilmsOnMyLibrary';\nimport Notiflix from 'notiflix';\n\nexport const KEY_STORAGE_WATCHED = 'watched-films';\nexport const KEY_STORAGE_QUEUE = 'films-in-the-queue';\n\nconst watchedAddTextBtn = 'ADD TO WATCH';\nconst queueAddTextBtn = 'ADD TO QUEUE';\n\nconst watchedRemoveTextBtn = 'REMOVE FROM WATCH';\nconst queueRemoveTextBtn = 'REMOVE FROM QUEUE';\n\nconst textInEmptyContainer =\n  '<p class=\"text-in-empty-container\">Please return to the home page and choose a movie...</p>';\n\nlet formDataQueue = [];\nlet formDataWatched = [];\n\nexport const getDataFromStorage = key => {\n  const savedData = localStorage.getItem(key);\n  const parseData = JSON.parse(savedData);\n  return parseData || [];\n};\n\nconst getAllData = () => {\n  formDataWatched = getDataFromStorage(KEY_STORAGE_WATCHED);\n  formDataQueue = getDataFromStorage(KEY_STORAGE_QUEUE);\n};\n\nexport const getWatchedList = () => {\n  const getData = getDataFromStorage(KEY_STORAGE_WATCHED);\n  if (getData.length === 0) {\n    refs.filmList.innerHTML = textInEmptyContainer;\n    return;\n  }\n  renderFilmsOnMyLibrary(getData);\n};\n\nexport const getQueueList = () => {\n  const getData = getDataFromStorage(KEY_STORAGE_QUEUE);\n  if (getData.length === 0) {\n    refs.filmList.innerHTML = textInEmptyContainer;\n    return;\n  }\n  renderFilmsOnMyLibrary(getData);\n};\n\nconst addFilmInSutableList = (formData, id, key) => {\n  Notiflix.Notify.success('SUCCESS: added to list!');\n  formData.push(id);\n  localStorage.setItem(key, JSON.stringify(formData));\n};\n\nconst removeFromStorageList = (\n  clickableButton,\n  unclickableButton,\n  formData,\n  key,\n  id,\n  text\n) => {\n  clickableButton.textContent = `${text}`;\n  clickableButton.classList.remove('active-btn');\n\n  unclickableButton.removeAttribute('disabled');\n  unclickableButton.style.cursor = 'pointer';\n\n  const index = formData.findIndex(savedId => savedId === id);\n  formData.splice(index, 1);\n\n  localStorage.removeItem(key);\n  localStorage.setItem(key, JSON.stringify(formData));\n  Notiflix.Notify.success(`SUCCESS: deleted from list!`);\n};\n\nconst changesClickableBtn = (btn, text) => {\n  btn.textContent = `${text}`;\n  btn.classList.add('active-btn');\n};\n\nconst changesUnclickableBtn = btn => {\n  btn.setAttribute('disabled', 'true');\n  btn.style.cursor = 'not-allowed';\n};\n\nexport const addfilmInList = (btnWatched, btnQueue, id) => {\n  getAllData();\n  btnWatched.addEventListener('click', () => {\n    if (btnWatched.classList.contains('active-btn')) {\n      removeFromStorageList(\n        btnWatched,\n        btnQueue,\n        formDataWatched,\n        KEY_STORAGE_WATCHED,\n        id,\n        watchedAddTextBtn\n      );\n\n      if (refs.watchedBtn.classList.contains('active-liberty-btn')) {\n        renderFilmsOnMyLibrary(formDataWatched);\n      }\n\n      return;\n    }\n\n    addFilmInSutableList(formDataWatched, id, KEY_STORAGE_WATCHED);\n    changesClickableBtn(btnWatched, watchedRemoveTextBtn);\n    changesUnclickableBtn(btnQueue);\n  });\n\n  btnQueue.addEventListener('click', () => {\n    if (btnQueue.classList.contains('active-btn')) {\n      removeFromStorageList(\n        btnQueue,\n        btnWatched,\n        formDataQueue,\n        KEY_STORAGE_QUEUE,\n        id,\n        queueAddTextBtn\n      );\n      if (refs.queueBtn.classList.contains('active-liberty-btn')) {\n        renderFilmsOnMyLibrary(formDataQueue);\n      }\n      return;\n    }\n\n    addFilmInSutableList(formDataQueue, id, KEY_STORAGE_QUEUE);\n    changesClickableBtn(btnQueue, queueRemoveTextBtn);\n    changesUnclickableBtn(btnWatched);\n  });\n};\n\nrefs.watchedBtn.addEventListener('click', getWatchedList);\nrefs.queueBtn.addEventListener('click', getQueueList);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.0\", \"\"), r(\"firestore-lite\", \"3.8.0\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","import { doc } from 'firebase/firestore/lite';\n\n// export function getVideoTemplates(key) {\n//   return `\n//    <iframe class=\"video\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${key}\"\n//   title=\"YouTube video player\" frameborder=\"0\"\n//   allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//   allowfullscreen></iframe>\n//    `;\n// }\n\n// const id = '877269';\n\nexport function getFetchVideo(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/videos?api_key=0bf9a11da9d083f4751315d07dcbd89b`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n\n    return res.json();\n  });\n}\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).basicLightbox=e()}}((function(){return function e(n,t,o){function r(c,u){if(!t[c]){if(!n[c]){var s=\"function\"==typeof require&&require;if(!u&&s)return s(c,!0);if(i)return i(c,!0);var a=new Error(\"Cannot find module '\"+c+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,(function(e){return r(n[c][1][e]||e)}),l,l.exports,e,n,t,o)}return t[c].exports}for(var i=\"function\"==typeof require&&require,c=0;c<o.length;c++)r(o[c]);return r}({1:[function(e,n,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=t.visible=void 0;var o=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=document.createElement(\"div\");return t.innerHTML=e.trim(),!0===n?t.children:t.firstChild},r=function(e,n){var t=e.children;return 1===t.length&&t[0].tagName===n},i=function(e){return null!=(e=e||document.querySelector(\".basicLightbox\"))&&!0===e.ownerDocument.body.contains(e)};t.visible=i;t.create=function(e,n){var t=function(e,n){var t=o('\\n\\t\\t<div class=\"basicLightbox '.concat(n.className,'\">\\n\\t\\t\\t<div class=\"basicLightbox__placeholder\" role=\"dialog\"></div>\\n\\t\\t</div>\\n\\t')),i=t.querySelector(\".basicLightbox__placeholder\");e.forEach((function(e){return i.appendChild(e)}));var c=r(i,\"IMG\"),u=r(i,\"VIDEO\"),s=r(i,\"IFRAME\");return!0===c&&t.classList.add(\"basicLightbox--img\"),!0===u&&t.classList.add(\"basicLightbox--video\"),!0===s&&t.classList.add(\"basicLightbox--iframe\"),t}(e=function(e){var n=\"string\"==typeof e,t=e instanceof HTMLElement==1;if(!1===n&&!1===t)throw new Error(\"Content must be a DOM element/node or string\");return!0===n?Array.from(o(e,!0)):\"TEMPLATE\"===e.tagName?[e.content.cloneNode(!0)]:Array.from(e.children)}(e),n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==(e=Object.assign({},e)).closable&&(e.closable=!0),null==e.className&&(e.className=\"\"),null==e.onShow&&(e.onShow=function(){}),null==e.onClose&&(e.onClose=function(){}),\"boolean\"!=typeof e.closable)throw new Error(\"Property `closable` must be a boolean\");if(\"string\"!=typeof e.className)throw new Error(\"Property `className` must be a string\");if(\"function\"!=typeof e.onShow)throw new Error(\"Property `onShow` must be a function\");if(\"function\"!=typeof e.onClose)throw new Error(\"Property `onClose` must be a function\");return e}(n)),c=function(e){return!1!==n.onClose(u)&&function(e,n){return e.classList.remove(\"basicLightbox--visible\"),setTimeout((function(){return!1===i(e)||e.parentElement.removeChild(e),n()}),410),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))};!0===n.closable&&t.addEventListener(\"click\",(function(e){e.target===t&&c()}));var u={element:function(){return t},visible:function(){return i(t)},show:function(e){return!1!==n.onShow(u)&&function(e,n){return document.body.appendChild(e),setTimeout((function(){requestAnimationFrame((function(){return e.classList.add(\"basicLightbox--visible\"),n()}))}),10),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))},close:c};return u}},{}]},{},[1])(1)}));","import { movieLink } from '../linkapi';\nimport { getMovieById } from './getMovieById';\nimport {\n  addfilmInList,\n  getDataFromStorage,\n  KEY_STORAGE_WATCHED,\n  KEY_STORAGE_QUEUE,\n} from '../localStorage';\nimport { getFetchVideo } from './video';\nimport { getVideoTemplates } from './video';\n\nimport * as basicLightbox from 'basiclightbox';\nconst basicLightbox = require('basiclightbox');\n\nconst refsO = {\n  body: document.querySelector('body'),\n  listFilm: document.querySelector('.film-list'),\n  filmCardItem: document.querySelector('.film-list__item'),\n  backdrop: document.querySelector('.js-backdrop'),\n  // modalClose: document.querySelector('.js-btn-close-modal'),\n  filmListCard: document.querySelector('.film-list__item'),\n  movieCard: document.querySelector('.js-main-modal'),\n  teaserBtnPlay: null,\n};\n\nrefsO.listFilm.addEventListener('click', onClickItem);\n// refsO.modalClose.addEventListener('click', closeMainModal);\nrefsO.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onClickItem(e) {\n  e.preventDefault();\n  if (e.currentTarget === e.target) {\n    return;\n  }\n  const parent = e.target.closest('li');\n  let { id } = parent;\n  // console.log('li', id);\n\n  movieLink\n    .getMoviesById(id)\n    .then(data => {\n      const { genres } = data;\n      const render = getMovieById(data, genres);\n      return render;\n    })\n    .then(render => {\n      refsO.movieCard.innerHTML = '';\n      refsO.movieCard.insertAdjacentHTML('beforeend', render);\n      const modalClose = document.querySelector('.js-btn-close-modal');\n      modalClose.addEventListener('click', closeMainModal);\n\n      const btnWatched = document.querySelector('.film-btn__watched');\n      const btnQueue = document.querySelector('.film-btn__queue');\n      addfilmInList(btnWatched, btnQueue, id);\n\n      const dataStorageWatched = getDataFromStorage(KEY_STORAGE_WATCHED);\n      const dataStorageQueue = getDataFromStorage(KEY_STORAGE_QUEUE);\n\n      if (dataStorageWatched.includes(id)) {\n        btnWatched.textContent = 'remove from watched';\n        btnWatched.classList.add('active-btn');\n        btnQueue.setAttribute('disabled', 'true');\n        btnQueue.style.cursor = 'not-allowed';\n      }\n\n      if (dataStorageQueue.includes(id)) {\n        btnQueue.textContent = 'remove from queue';\n        btnQueue.classList.add('active-btn');\n        btnWatched.setAttribute('disabled', 'true');\n        btnWatched.style.cursor = 'not-allowed';\n      }\n\n      refsO.teaserBtnPlay = document.querySelector('#teaser');\n    })\n    .catch(err => console.log(err));\n\n  getFetchVideo(id)\n    .then(({ results }) => {\n      const teaser = results.map(video => video);\n\n      //fix no teaser\n      if (results.length == 0) {\n        refsO.teaserBtnPlay.style.display = 'none';\n        return;\n      }\n      //fix no teaser\n\n      const treiler = teaser[teaser.length - 1];\n\n      let terailerKey = treiler.key;\n\n      return terailerKey;\n    })\n    .then(terailerKey => {\n      const trailerRend = `\n    <iframe class=\"video\" width=\"800\" height=\"600\" src=\"https://www.youtube.com/embed/${terailerKey}\"\n    title=\"YouTube video player\" frameborder=\"0\"\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    allowfullscreen></iframe>`;\n\n      const instance = basicLightbox.create(trailerRend);\n      refsO.teaserBtnPlay.addEventListener('click', () => {\n        instance.show();\n      });\n    })\n    .catch(err => console.log(err));\n\n  showMainModal();\n}\n\nfunction showMainModal() {\n  window.addEventListener('keydown', onEscKeyClick);\n  refsO.backdrop.classList.remove('is-hidden');\n  refsO.body.classList.toggle('no-scroll');\n  refsO.body.classList.add('no-scroll');\n}\n\nfunction closeMainModal() {\n  window.removeEventListener('keydown', onEscKeyClick);\n  refsO.backdrop.classList.add('is-hidden');\n  refsO.body.classList.remove('no-scroll');\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget !== e.target) {\n    return;\n  }\n\n  closeMainModal();\n}\n\nfunction onEscKeyClick(e) {\n  if (e.code === 'Escape') {\n    closeMainModal();\n  }\n}\n","import { refs } from '../refs';\n\nrefs.openModalBtn.addEventListener('click', toggleModalOpen);\nrefs.closeModalBtn.addEventListener('click', closeModal);\nrefs.bckdrp.addEventListener('click', closeModalbyWindow);\n\nfunction toggleModalOpen() {\n  refs.modal.classList.remove('is-hidden');\n  refs.body.style.overflow = 'hidden';\n}\n\nfunction closeModal() {\n  refs.modal.classList.add('is-hidden');\n  refs.body.style.overflow = '';\n}\n\nwindow.addEventListener('keydown', closeEsc);\nfunction closeEsc(e) {\n  if (e.key === 'Escape') {\n    closeModal(e);\n  }\n}\n\nfunction closeModalbyWindow() {\n  refs.modal.classList.add('is-hidden');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  const emulator = getDefaultEmulatorHostnameAndPort('database');\n  if (emulator) {\n    connectDatabaseEmulator(db, ...emulator);\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getAnalytics, getFirestore } from 'firebase/firestore/lite';\nimport { getDatabase, ref, set, get } from 'firebase/database';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCjQyny8SgADYEvs3IyK-2He7uJP3zOYC0',\n  authDomain: 'teamprojjs6.firebaseapp.com',\n  databaseURL:\n    'https://teamprojjs6-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'teamprojjs6',\n  storageBucket: 'teamprojjs6.appspot.com',\n  messagingSenderId: '779869491174',\n  appId: '1:779869491174:web:f832ac9eee035fa4f41027',\n  measurementId: 'G-8X92MK3MYD',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// const db = getFirestore(app);\n// console.log('FIREBASE', db);\n\nconst dbRef = ref(getDatabase());\n// console.log('dbRef', dbRef);\n","/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // NOTIFY: Default Settings: begin\n  var typesNotify = {\r\n    Success: 'Success',\r\n    Failure: 'Failure',\r\n    Warning: 'Warning',\r\n    Info: 'Info',\r\n  };\r\n  var newNotifySettings;\r\n  var notifySettings = {\r\n    wrapID: 'NotiflixNotifyWrap', // can not customizable\r\n    overlayID: 'NotiflixNotifyOverlay', // can not customizable\r\n    width: '280px',\r\n    position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 110,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\r\n    fontAwesomeIconSize: '34px',\r\n\n    success: {\r\n      background: '#32c682',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-success',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-check-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n\n    failure: {\r\n      background: '#ff5549',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-failure',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-times-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n\n    warning: {\r\n      background: '#eebf31',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-warning',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n\n    info: {\r\n      background: '#26c0d3',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-info',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-info-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n  };\n  // NOTIFY: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // NOTIFY: Get Internal CSS Codes: begin\n  var notifyGetInternalCSSCodes = function () {\r\n    var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\r\n    return notifyCSS || null;\r\n  };\n  // NOTIFY: Get Internal CSS Codes: end\n\n  // NOTIFY: Create: begin\n  var notifyCreateCounter = 0;\r\n  var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newNotifySettings) {\r\n      Notiflix.Notify.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\r\n\n    // check callbackOrOptions and options: begin\r\n    if ((typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof callbackOrOptions === 'object') {\r\n        newOptions = callbackOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\r\n    }\r\n    // check callbackOrOptions and options: end\r\n\n    // notify type\r\n    var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\r\n\n    // notify counter\r\n    notifyCreateCounter++;\r\n\n    // check the message: begin\r\n    if (typeof message !== 'string') {\r\n      message = 'Notiflix ' + notifyType;\r\n    }\r\n    // check the message: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newNotifySettings.plainText) {\r\n      message = commonGetPlaintext(message); // message plain text\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\r\n    if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\r\n      // extend settings for error massege\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, { closeButton: true, messageMaxLength: 150 });\r\n      // error message\r\n      message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\r\n    }\r\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\r\n\n    // check message max length: begin\r\n    if (message.length > newNotifySettings.messageMaxLength) {\r\n      message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\r\n    }\r\n    // check message max length: end\r\n\n    // font awesome icon style: begin\r\n    if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\r\n      theType.fontAwesomeIconColor = theType.background;\r\n    }\r\n    // font awesome icon style: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newNotifySettings.cssAnimation) {\r\n      newNotifySettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // notify wrap: begin\r\n    var ntflxNotifyWrap = window.document.getElementById(notifySettings.wrapID) || window.document.createElement('div');\r\n    ntflxNotifyWrap.id = notifySettings.wrapID;\r\n    ntflxNotifyWrap.style.width = newNotifySettings.width;\r\n    ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\r\n    ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\r\n\n    // wrap position: begin\r\n    if (newNotifySettings.position === 'center-center') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n      ntflxNotifyWrap.classList.add('nx-flex-center-center');\r\n      ntflxNotifyWrap.style.maxHeight = 'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\r\n      ntflxNotifyWrap.style.display = 'flex';\r\n      ntflxNotifyWrap.style.flexWrap = 'wrap';\r\n      ntflxNotifyWrap.style.flexDirection = 'column';\r\n      ntflxNotifyWrap.style.justifyContent = 'center';\r\n      ntflxNotifyWrap.style.alignItems = 'center';\r\n      ntflxNotifyWrap.style.pointerEvents = 'none';\r\n    } else if (newNotifySettings.position === 'center-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'center-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'right-bottom') {\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n    } else if (newNotifySettings.position === 'left-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    } else if (newNotifySettings.position === 'left-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n    } else { // 'right-top' or else\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    }\r\n    // wrap position: end\r\n\n    // if background overlay is true: begin\r\n    if (newNotifySettings.backOverlay) {\r\n      var ntflxNotifyOverlay = window.document.getElementById(notifySettings.overlayID) || window.document.createElement('div');\r\n      ntflxNotifyOverlay.id = notifySettings.overlayID;\r\n      ntflxNotifyOverlay.style.width = '100%';\r\n      ntflxNotifyOverlay.style.height = '100%';\r\n      ntflxNotifyOverlay.style.position = 'fixed';\r\n      ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\r\n      ntflxNotifyOverlay.style.left = 0;\r\n      ntflxNotifyOverlay.style.top = 0;\r\n      ntflxNotifyOverlay.style.right = 0;\r\n      ntflxNotifyOverlay.style.bottom = 0;\r\n      ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\r\n      ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\r\n      ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + 'ms' : '';\r\n\n      if (!window.document.getElementById(notifySettings.overlayID)) {\r\n        window.document.body.appendChild(ntflxNotifyOverlay);\r\n      }\r\n    }\r\n    // if background overlay is true: end\r\n\n    if (!window.document.getElementById(notifySettings.wrapID)) {\r\n      window.document.body.appendChild(ntflxNotifyWrap);\r\n    }\r\n    // notify wrap: end\r\n\n    // notify content: begin\r\n    var ntflxNotify = window.document.createElement('div');\r\n    ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\r\n    ntflxNotify.className = newNotifySettings.className + ' ' + theType.childClassName + ' ' + (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') + ' ' + (newNotifySettings.useIcon ? 'nx-with-icon' : '') + ' nx-' + newNotifySettings.cssAnimationStyle + ' ' + (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function' ? 'nx-with-close-button' : '') + ' ' + (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') + ' ' + (newNotifySettings.clickToClose ? 'nx-notify-click-to-close' : '');\r\n    ntflxNotify.style.fontSize = newNotifySettings.fontSize;\r\n    ntflxNotify.style.color = theType.textColor;\r\n    ntflxNotify.style.background = theType.background;\r\n    ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\r\n    ntflxNotify.style.pointerEvents = 'all';\r\n\n    // rtl: begin\r\n    if (newNotifySettings.rtl) {\r\n      ntflxNotify.setAttribute('dir', 'rtl');\r\n      ntflxNotify.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // font-family: begin\r\n    ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\r\n    // font-family: end\r\n\n    // use css animation: begin\r\n    if (newNotifySettings.cssAnimation) {\r\n      ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\r\n    }\r\n    // use css animation: end\r\n\n    // close button element: begin\r\n    var closeButtonHTML = '';\r\n    if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n      closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\r\n    }\r\n    // close buttpon element: end\r\n\n    // use icon: begin\r\n    if (newNotifySettings.useIcon) {\r\n      // use font awesome\r\n      if (newNotifySettings.useFontAwesome) {\r\n        ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + '; font-size:' + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + ' ' + (newNotifySettings.fontAwesomeIconStyle === 'shadow' ? 'nx-message-icon-fa-shadow' : 'nx-message-icon-fa-basic') + '\"></i><span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n      // use notiflix icon\r\n      else {\r\n        var svgIcon = '';\r\n        if (notifyType === typesNotify.Success) {  // success\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Failure) { // failure\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Warning) { // warning\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Info) { // info\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\r\n        }\r\n        ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n    }\r\n    // without icon\r\n    else {\r\n      ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n    }\r\n    // use icon: end\r\n    // notify content: end\r\n\n    // notify append or prepend: begin\r\n    if (newNotifySettings.position === 'left-bottom' || newNotifySettings.position === 'right-bottom') { // the new one will be first\r\n      var notifyWrap = window.document.getElementById(notifySettings.wrapID);\r\n      notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\r\n    } else {\r\n      window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\r\n    }\r\n    // notify append or prepend: end\r\n\n    // remove by timeout or click: begin\r\n    var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\r\n    if (eachNotifyElement) {\r\n      // timeout variables\r\n      var timeoutHide;\r\n      var timeoutRemove;\r\n\n      // hide notify elm and hide overlay: begin\r\n      var hideNotifyElementsAndOverlay = function () {\r\n        eachNotifyElement.classList.add('nx-remove');\r\n        var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n        if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\r\n          removeOverlay.classList.add('nx-remove');\r\n        }\r\n        clearTimeout(timeoutHide);\r\n      };\r\n      // hide notify elm and hide overlay: end\r\n\n      // remove notify elm and wrapper: begin\r\n      var removeNotifyElmentsAndWrapper = function () {\r\n        if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\r\n          eachNotifyElement.parentNode.removeChild(eachNotifyElement);\r\n        }\r\n        if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) { // if childs count === 0 remove wrap\r\n          ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\r\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n          if (removeOverlay && removeOverlay.parentNode !== null) {\r\n            removeOverlay.parentNode.removeChild(removeOverlay);\r\n          }\r\n        }\r\n        clearTimeout(timeoutRemove);\r\n      };\r\n      // remove notify elm and wrapper: end\r\n\n      // if has close button and callbackOrOptions is not a function: begin\r\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        var closeButtonElm = window.document.getElementById(ntflxNotify.id).querySelector('span.nx-close-button');\r\n        closeButtonElm.addEventListener('click', function () {\r\n          hideNotifyElementsAndOverlay();\r\n          var clickToCloseTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(clickToCloseTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if has close button and callbackOrOptions is not a function: end\r\n\n      // if callbackOrOptions or click to close: begin\r\n      if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\r\n        eachNotifyElement.addEventListener('click', function () {\r\n          if (typeof callbackOrOptions === 'function') {\r\n            callbackOrOptions();\r\n          }\r\n          hideNotifyElementsAndOverlay();\r\n          var callbackTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(callbackTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if callbackOrOptions or click to close: end\r\n\n      // else auto remove: begin\r\n      if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        // auto remove: begin\r\n        var autoRemove = function () {\r\n          timeoutHide = setTimeout(function () {\r\n            hideNotifyElementsAndOverlay();\r\n          }, newNotifySettings.timeout);\r\n          timeoutRemove = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n          }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\r\n        };\r\n        autoRemove();\r\n        // auto remove: end\r\n\n        // pause auto remove: begin\r\n        if (newNotifySettings.pauseOnHover) {\r\n          eachNotifyElement.addEventListener('mouseenter', function () {\r\n            eachNotifyElement.classList.add('nx-paused');\r\n            clearTimeout(timeoutHide);\r\n            clearTimeout(timeoutRemove);\r\n          });\r\n          eachNotifyElement.addEventListener('mouseleave', function () {\r\n            eachNotifyElement.classList.remove('nx-paused');\r\n            autoRemove();\r\n          });\r\n        }\r\n        // pause auto remove: end\r\n      }\r\n      // else auto remove: end\r\n    }\r\n    // remove by timeout or click: end\r\n\n    // notify - show only the last one: begin\r\n    if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\r\n      var allNotifyElmNotTheLastOne = window.document.querySelectorAll('[id^=' + newNotifySettings.ID + '-]:not([id=' + newNotifySettings.ID + '-' + notifyCreateCounter + '])');\r\n      for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\r\n        var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\r\n        if (eachNotifyElmNotLastOne.parentNode !== null) {\r\n          eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\r\n        }\r\n      }\r\n    }\r\n    // notify - show only the last one: end\r\n\n    // extend new settings with the backup settings\r\n    newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\r\n\n  };\n  // NOTIFY: Create: end\n\n  var Notiflix = {\n    Notify: {\r\n      // Init\r\n      init: function (userNotifyOptions) {\r\n        // extend options\r\n        newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userNotifyExtendOptions) {\r\n        // if initialized already\r\n        if (newNotifySettings) {\r\n          newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Notify module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Success\r\n      success: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\r\n      },\r\n      // Failure\r\n      failure: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\r\n      },\r\n      // Warning\r\n      warning: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\r\n      },\r\n      // Info\r\n      info: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Notify: Notiflix.Notify });\n  } else {\n    return { Notify: Notiflix.Notify };\n  }\n\n});","import { movieLink } from './linkapi';\nimport imageURL from '../images/placeholder.jpg'\n\n\nexport function getItemTemplate({\n    title,\n    poster_path,\n    release_date,\n    genre_ids,\n    id,\n    \n  }, genres) {\n\n    const GenresList = genres.reduce ((acc, element) => {\n      if (genre_ids.includes(element.id)){ acc.push(element.name) }     \n      return acc;\n   }, []); \n\n    const year = (release_date) ? release_date.substr (0, 4) : \"No release date\";\n    const cardImg1x = (poster_path) ? movieLink.getImageUrl(poster_path, 500) : imageURL;\n    // const cardImg2x = (poster_path) ? movieLink.getImageUrl(poster_path, 500) : imageURL;\n    const filmGenres = (GenresList.length) ? GenresList : ['No genre'];\n      \n\n    return `<li class=\"film-list__item\" id= ${id}>\n    <a href=\"\" class=\"film-list__link link\">\n        <div class=\"film-list__top-wrap\">\n            <picture>\n                <source\n                srcset=\"\n                   ${cardImg1x}  1x,\n                   ${cardImg1x}  2x \"\n                media=\"(min-width: 1280px)\"\n                />\n                <source\n                srcset=\"\n                  ${cardImg1x}  1x,\n                  ${cardImg1x}  2x\"\n                   media=\"(min-width: 768px)\"\n                />\n                <source\n                srcset=\"\n                  ${cardImg1x}  1x,\n                  ${cardImg1x}  2x\"\n                   media=\"(max-width: 480px)\"\n                />\n                <img src=\"${cardImg1x}\"\n                loading=\"lazy\" \n                alt=\"${title}\" />\n            </picture>\n        </div>\n        <div class=\"film-data\">\n          <h2 class=\"film-data__title\">${title}</h2>\n          <div class=\"film-data__info\">\n            <p class=\"film-data__genres\">${[...filmGenres]}</p>\n            <p class=\"film-data__year\">| ${year}</p>\n          </div>\n        </div>\n      </a>\n    </li>`;\n  }","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getItemTemplate } from './getItemTemplate';\nimport { movieLink } from './linkapi';\n\n\nconst refs = {\n  filmList: document.querySelector('.film-list'),\n};\n\nexport async function renderFilms(responce, genres) {\n\n  refs.filmList.innerHTML = \"\";\n\n  let films = [];\n\n   films = responce.map (element => getItemTemplate(element, genres));\n   refs.filmList.insertAdjacentHTML('beforeend', films.join(''));\n  \n}","import { trendMovies, searchMoies } from './requests';\nimport { refs } from './refs';\n\nlet qwery = '';\nlet actualPage = 0;\n\nexport function pagination(currentPage, totalPage, qweryWord) {\n  refs.pageNavigation.style.display = 'none';\n  refs.pageBack.style.display = 'none';\n  refs.pageNext.style.display = 'none';\n  const pages = [];\n  actualPage = currentPage;\n  refs.pages.innerHTML = '';\n  qwery = qweryWord;\n  makeArray(pages, currentPage, totalPage);\n\n  if (totalPage > 1) {\n    refs.pageNavigation.style.display = 'flex';\n    navigationRender(pages, currentPage, totalPage);\n  }\n\n  if (totalPage > 2 && currentPage !== totalPage)\n    refs.pageNext.style.display = 'flex';\n  if (totalPage > 2 && currentPage > 1) refs.pageBack.style.display = 'flex';\n\n  function navigationRender(pages, pageCur, pageTot) {\n    const markupPages = pages\n      .map(page => makePage(page, pageCur, pageTot))\n      .join('');\n    refs.pages.insertAdjacentHTML('beforeend', markupPages);\n  }\n\n  function makePage(pageNum, pageCur, pageTot) {\n    let current = '';\n    let nav = pageNum;\n    let pageClass = 'page';\n\n    if (Number(pageNum) === Number(pageCur)) current = ' current';\n    if (pageNum === '...') pageClass = 'points';\n\n    return `<div class=\"${\n      pageClass + current\n    }\" data-nav=\"${nav}\">${pageNum}</div>`;\n  }\n\n  function makeArray(pages, pageCur, pageTot) {\n    if (pageTot < 10) {\n      fillArray(0, pageTot - 1, 1);\n      return pages;\n    } else {\n      pages[0] = 1;\n      pages[8] = pageTot;\n\n      if (pageCur > 5) {\n        pages[1] = '...';\n      } else {\n        pages[1] = 2;\n      }\n      if (pageCur < pageTot - 4) {\n        pages[7] = '...';\n      } else {\n        pages[7] = pageTot - 1;\n      }\n      if (pageCur > 5 && pageCur < pageTot - 3) fillArray(2, 6, pageCur - 2);\n      if (pageCur < 6) fillArray(2, 6, 3);\n      if (pageCur > pageTot - 4) fillArray(2, 6, pageTot - 6);\n      return pages;\n    }\n  }\n\n  function fillArray(posBeg, posEnd, startVal) {\n    for (let i = posBeg; i <= posEnd; i++) {\n      pages[i] = startVal;\n      startVal++;\n    }\n  }\n}\n\nexport function navigation(event) {\n  let nav = event.target.dataset.nav;\n  if (event.target.dataset.nav === '...') return;\n  if (event.target.nodeName.toUpperCase() === 'SVG')\n    nav = event.target.parentNode.dataset.nav;\n  if (event.target.nodeName.toUpperCase() === 'USE')\n    nav = event.target.parentNode.parentNode.dataset.nav;\n\n  switch (nav) {\n    case 'next':\n      switchQwery(qwery, actualPage + 1);\n      break;\n\n    case 'back':\n      switchQwery(qwery, actualPage - 1);\n      break;\n\n    default:\n      switchQwery(qwery, nav);\n  }\n\n  function switchQwery(qwery, numPage) {\n    switch (qwery) {\n      case 'trending':\n        trendMovies(numPage);\n        break;\n\n      default:\n        searchMoies(qwery, numPage);\n    }\n  }\n}\n","import { movieLink } from './linkapi';\nimport { pagination, navigation } from './pagination';\nimport { renderFilms } from './renderFilms';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\n\nlet movies = [];\nlet genres = [];\n\nexport async function trendMovies(pageNum) {\n  await movieLink\n    .getMovies(pageNum)\n    .then(response => (movies = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (movies.length === 0) return;\n  await movieLink\n    .getGenresList()\n    .then(response => (genres = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (genres.length === 0) return;\n  renderFilms(movies.results, genres);\n  if (pageNum < 4) window.scrollTo(0, 0);\n  else window.scrollTo(0, 216);\n  pagination(movies.page, movies.total_pages, 'trending');\n}\n\nexport async function searchMoies(searchWord, pageNum) {\n  await movieLink\n    .getMoviesByWord(searchWord, pageNum)\n    .then(response => (movies = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (movies.length === 0) return;\n  await movieLink\n    .getGenresList()\n    .then(response => (genres = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (genres.length === 0) return;\n  if (movies.total_results === 0)\n    return Notiflix.Notify.failure(\n      `Sorry, there are no movies matching your search query. Please try again.`,\n      {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n  if (movies.page === 1)\n    Notiflix.Notify.success(\n      `Hooray! We found ${movies.total_results} movies.`,\n      {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n\n  renderFilms(movies.results, genres);\n  if (pageNum < 4) window.scrollTo(0, 0);\n  else window.scrollTo(0, 216);\n  pagination(movies.page, movies.total_pages, searchWord);\n}\n\ntrendMovies(1);\nrefs.pageNavigation.addEventListener('click', navigation, false);\nrefs.searchInput.focus();\nrefs.searchForm.addEventListener('submit', event => {\n  event.preventDefault();\n  searchRequest();\n});\n\nfunction searchRequest() {\n  refs.searchInput.blur();\n  const movieRequest = refs.searchInput.value.trimRight().trimLeft();\n  if (!/^[A-ZА-ЯЁЇІЄ\\s]+$/i.test(movieRequest)) {\n    Notiflix.Notify.failure(\n      `Sorry, there are no moies matching your search query. Please try again.`,\n      {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    refs.searchInput.value = '';\n    return;\n  }\n  refs.pageNavigation.removeEventListener('click', navigation, false);\n  searchMoies(movieRequest, 1);\n  refs.pageNavigation.addEventListener('click', navigation, false);\n}\n","import { refs } from './refs';\nimport { getQueueList } from './localStorage';\n\nconst activatesLibraryBtn = () => {\n  refs.homeBtn.classList.remove('active');\n  refs.libraryBtn.classList.add('active');\n};\n\nconst activatesWatchedBtn = () => {\n  refs.queueBtn.classList.remove('active-liberty-btn');\n  refs.watchedBtn.classList.add('active-liberty-btn');\n};\n\nconst activatesQueueBtn = () => {\n  refs.watchedBtn.classList.remove('active-liberty-btn');\n  refs.queueBtn.classList.add('active-liberty-btn');\n};\n\nconst changesAppearanceHeader = () => {\n  refs.header.classList.add('header__liberty');\n  refs.searcBox.style.display = 'none';\n  refs.pageNavigation.style.display = 'none';\n\n  refs.watchedBtn.style.display = 'flex';\n  refs.queueBtn.style.display = 'flex';\n  refs.queueBtn.classList.add('active-liberty-btn');\n};\n\nconst switchOnLibrary = e => {\n  e.preventDefault();\n  activatesLibraryBtn();\n  changesAppearanceHeader();\n\n  refs.filmList.style.minHeight = '500px';\n  getQueueList();\n};\n\nrefs.libraryBtn.addEventListener('click', switchOnLibrary);\nrefs.watchedBtn.addEventListener('click', activatesWatchedBtn);\nrefs.queueBtn.addEventListener('click', activatesQueueBtn);\n","\nconst toTop = document.querySelector(\"#to-top\");\n\ntoTop.hidden = false;\nwindow.addEventListener(\"scroll\", () => {\ntoTop.hidden = scrollY > 200 ? false : true;\n});\n\ntoTop.onclick = () => {\nwindow.scrollTo(0, 0);\n};\n\ndocument.querySelector(\"#to-top\").addEventListener(\"click\", function () {\n\n    let toTopInterval = setInterval(function(){\n\n        let supportedScrollTop = document.body.scrollTop > 0 ? document.body : document.documentElement;\n\n        if (supportedScrollTop.scrollTop > 0) {\n            supportedScrollTop.scrollTop = supportedScrollTop.scrollTop - 50;\n            \n        }\n\n        if (supportedScrollTop.scrollTop < 1) {\n            clearInterval(toTopInterval);\n        }\n\n    }, 10);\n\n}, false);\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$9b139c02a8c43d26$export$2e2bcd8739ae039","fn","thisArg","apply","arguments","toString","$197982d8c7a73e5f$var$toString","prototype","getPrototypeOf","$197982d8c7a73e5f$var$getPrototypeOf","$197982d8c7a73e5f$var$kindOf","cache","create","thing","str","call","slice","toLowerCase","$197982d8c7a73e5f$var$kindOfTest","type","$197982d8c7a73e5f$var$typeOfTest","isArray","$197982d8c7a73e5f$var$isArray","Array","$197982d8c7a73e5f$var$isUndefined","$197982d8c7a73e5f$var$isArrayBuffer","$197982d8c7a73e5f$var$isString","$197982d8c7a73e5f$var$isFunction","$197982d8c7a73e5f$var$isNumber","$197982d8c7a73e5f$var$isObject","$197982d8c7a73e5f$var$isPlainObject","val","Symbol","toStringTag","iterator","$197982d8c7a73e5f$var$isDate","$197982d8c7a73e5f$var$isFile","$197982d8c7a73e5f$var$isBlob","$197982d8c7a73e5f$var$isFileList","$197982d8c7a73e5f$var$isURLSearchParams","$197982d8c7a73e5f$var$forEach","obj","allOwnKeys","l","getOwnPropertyNames","len","key","$197982d8c7a73e5f$var$findKey","_key","$197982d8c7a73e5f$var$_global","self","$parcel$global","undefined","$197982d8c7a73e5f$var$isContextDefined","context","$197982d8c7a73e5f$var$isTypedArray","TypedArray","Uint8Array","$197982d8c7a73e5f$var$isHTMLForm","$197982d8c7a73e5f$var$hasOwnProperty","hasOwnProperty","hasOwnProperty1","prop","$197982d8c7a73e5f$var$isRegExp","$197982d8c7a73e5f$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","defineProperties","$197982d8c7a73e5f$export$2e2bcd8739ae039","constructor","isBuffer","pattern","FormData","result","ArrayBuffer","isView","buffer","pipe","$197982d8c7a73e5f$var$merge","caseless","this","assignValue","targetKey","a","b","trim","replace","content","charCodeAt","superConstructor","props","defineProperty","value","assign","sourceObj","destObj","filter","propFilter","merged","searchString","position","String","lastIndex","indexOf","arr","next","done","pair","regExp","matches","exec","push","hasOwnProp","enumerable","writable","set","arrayOrString","delimiter","define","forEach","split","m","p1","p2","toUpperCase","defaultValue","Number","isFinite","global","stack","visit","source","target","reducedValue","$0c07198b07c857d4$var$AxiosError","message","code","config","request","response","captureStackTrace","$197982d8c7a73e5f$exports","default","inherits","toJSON","description","number","fileName","lineNumber","columnNumber","toJSONObject","status","$0c07198b07c857d4$var$prototype","$0c07198b07c857d4$var$descriptors","from","error","customProps","axiosError","toFlatObject","cause","$d4ecdbf520e63dca$export$a143d493d941bafc","$034686670a8a195b$export$d622b2ad8d90c771","$034686670a8a195b$export$6100ba28696e12de","$0c07198b07c857d4$export$2e2bcd8739ae039","$93f6e42318d36b8b$export$2e2bcd8739ae039","$parcel$interopDefault","window","b64","tmp","i1","lens","$034686670a8a195b$var$getLens","validLen","placeHoldersLen","$034686670a8a195b$var$Arr","$034686670a8a195b$var$_byteLength","curByte","len2","$034686670a8a195b$var$revLookup","uint8","len3","extraBytes","parts","maxChunkLength","i3","$034686670a8a195b$var$encodeChunk","$034686670a8a195b$var$lookup","join","$454af19f7384844b$export$aafa59e2e03f2942","$454af19f7384844b$export$68d8715fc104d294","$034686670a8a195b$var$code","$034686670a8a195b$var$i","$034686670a8a195b$var$len","len1","start","end","num","output","i2","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","c","rt","abs","isNaN","floor","log","LN2","$d4ecdbf520e63dca$var$customInspectSymbol","$d4ecdbf520e63dca$var$Buffer","$d4ecdbf520e63dca$var$createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","TypeError","$d4ecdbf520e63dca$var$allocUnsafe","$d4ecdbf520e63dca$var$from","string","encoding","isEncoding","$d4ecdbf520e63dca$var$byteLength","actual","write","$d4ecdbf520e63dca$var$fromString","arrayView","$d4ecdbf520e63dca$var$isInstance","copy","$d4ecdbf520e63dca$var$fromArrayBuffer","byteOffset","byteLength","$d4ecdbf520e63dca$var$fromArrayLike","$d4ecdbf520e63dca$var$fromArrayView","SharedArrayBuffer","valueOf","$d4ecdbf520e63dca$var$checked","$d4ecdbf520e63dca$var$numberIsNaN","data","$d4ecdbf520e63dca$var$fromObject","toPrimitive","$d4ecdbf520e63dca$var$assertSize","size","array","mustMatch","loweredCase","$d4ecdbf520e63dca$var$utf8ToBytes","$d4ecdbf520e63dca$var$base64ToBytes","$d4ecdbf520e63dca$var$slowToString","$d4ecdbf520e63dca$var$hexSlice","$d4ecdbf520e63dca$var$utf8Slice","$d4ecdbf520e63dca$var$asciiSlice","$d4ecdbf520e63dca$var$latin1Slice","$d4ecdbf520e63dca$var$base64Slice","$d4ecdbf520e63dca$var$utf16leSlice","$d4ecdbf520e63dca$var$swap","n","$d4ecdbf520e63dca$var$bidirectionalIndexOf","dir","$d4ecdbf520e63dca$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$d4ecdbf520e63dca$var$hexWrite","remaining","strLen","parsed","parseInt","substr","$d4ecdbf520e63dca$var$utf8Write","$d4ecdbf520e63dca$var$blitBuffer","$d4ecdbf520e63dca$var$asciiWrite","byteArray","$d4ecdbf520e63dca$var$asciiToBytes","$d4ecdbf520e63dca$var$base64Write","$d4ecdbf520e63dca$var$ucs2Write","units","hi","lo","$d4ecdbf520e63dca$var$utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","fromCharCode","$d4ecdbf520e63dca$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$d4ecdbf520e63dca$var$typedArraySupport","console","get","poolSize","alloc","fill","$d4ecdbf520e63dca$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","ret","out","$d4ecdbf520e63dca$var$hexSliceLookupTable","bytes","$d4ecdbf520e63dca$var$checkOffset","ext","$d4ecdbf520e63dca$var$checkInt","max","$d4ecdbf520e63dca$var$wrtBigUInt64LE","$d4ecdbf520e63dca$var$checkIntBI","BigInt","$d4ecdbf520e63dca$var$wrtBigUInt64BE","$d4ecdbf520e63dca$var$checkIEEE754","$d4ecdbf520e63dca$var$writeFloat","littleEndian","noAssert","$d4ecdbf520e63dca$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$d4ecdbf520e63dca$var$defineBigIntMethod","$d4ecdbf520e63dca$var$validateNumber","first","last","$d4ecdbf520e63dca$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$d4ecdbf520e63dca$var$errors","$d4ecdbf520e63dca$var$E","sym","getMessage","Base","configurable","super","$d4ecdbf520e63dca$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$d4ecdbf520e63dca$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","$d4ecdbf520e63dca$var$INVALID_BASE64_RE","leadSurrogate","$d4ecdbf520e63dca$var$base64clean","src","dst","alphabet","table","i16","$d4ecdbf520e63dca$var$BufferBigIntNotDefined","$7734bfa34e03fc2a$var$isVisitable","isPlainObject","$7734bfa34e03fc2a$var$removeBrackets","endsWith","$7734bfa34e03fc2a$var$renderKey","path","dots","map","token","$7734bfa34e03fc2a$var$predicates","test","$7734bfa34e03fc2a$export$2e2bcd8739ae039","formData","options","isObject","metaTokens","indexes","option","isUndefined","visitor","defaultVisitor","useBlob","Blob","isFunction","append","convertValue","isDate","toISOString","isBlob","isArrayBuffer","isTypedArray","$7734bfa34e03fc2a$require$Buffer","stringify","some","$7734bfa34e03fc2a$var$isFlatArray","isFileList","toArray","el","index","exposedHelpers","build","isString","pop","$cc98c96c287b2efc$var$encode","charMap","encodeURIComponent","match","$cc98c96c287b2efc$var$AxiosURLSearchParams","params","_pairs","$cc98c96c287b2efc$var$prototype","encoder","_encode","$cc98c96c287b2efc$export$2e2bcd8739ae039","$2166c96446d6ea30$var$encode","$2166c96446d6ea30$export$2e2bcd8739ae039","url","encode","serializeFn","serialize","serializedParams","isURLSearchParams","hashmarkIndex","$41a1c1ac65ef962e$export$2e2bcd8739ae039","use","fulfilled","rejected","handlers","synchronous","runWhen","eject","clear","h","$1d5acd6ee4a1e450$export$2e2bcd8739ae039","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$6cfe4bd5b8086c37$export$2e2bcd8739ae039","URLSearchParams","$ac45b2bd873143e7$export$2e2bcd8739ae039","$c88647090d2a1f73$var$isStandardBrowserEnv","product","navigator","document","$c88647090d2a1f73$var$isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","$c88647090d2a1f73$export$2e2bcd8739ae039","isBrowser","classes","protocols","$3fb98e26853e5168$export$2e2bcd8739ae039","helpers","isNode","$30b9a4ee1106a4de$export$2e2bcd8739ae039","buildPath","isNumericKey","isLast","$30b9a4ee1106a4de$var$arrayToObject","isFormData","entries","forEachEntry","matchAll","$30b9a4ee1106a4de$var$parsePropPath","$caf5cce0e605762b$var$DEFAULT_CONTENT_TYPE","$caf5cce0e605762b$var$defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","isHTMLForm","isStream","isFile","isArrayBufferView","setContentType","formSerializer","_FormData","env","rawValue","parser","$caf5cce0e605762b$var$stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Accept","method","merge","$caf5cce0e605762b$export$2e2bcd8739ae039","$6b3d4ca234f68ddb$var$ignoreDuplicateOf","toObjectSet","$6b3d4ca234f68ddb$export$2e2bcd8739ae039","rawHeaders","line","substring","$bc98ecaa632caed0$var$$internals","$bc98ecaa632caed0$var$normalizeHeader","header","$bc98ecaa632caed0$var$normalizeValue","$bc98ecaa632caed0$var$matchHeaderValue","isRegExp","$bc98ecaa632caed0$var$_iterator","$bc98ecaa632caed0$var$_toStringTag","$bc98ecaa632caed0$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","findKey","setHeaders","tokens","tokensRE","$bc98ecaa632caed0$var$parseTokens","has","matcher","delete","deleted","deleteHeader","bind","normalize","format","normalized","w","char","$bc98ecaa632caed0$var$formatHeader","targets","asStrings","static","computed","accessors","defineAccessor","accessorName","toCamelCase","methodName","arg1","arg2","arg3","$bc98ecaa632caed0$var$buildAccessors","accessor","freezeMethods","$bc98ecaa632caed0$export$2e2bcd8739ae039","$83709ffa15cc9b1e$export$2e2bcd8739ae039","fns","$ee4e77981fc99baa$export$2e2bcd8739ae039","__CANCEL__","$5dd8c74561f08d70$var$CanceledError","ERR_CANCELED","$5dd8c74561f08d70$export$2e2bcd8739ae039","$1623641cb5783008$export$2e2bcd8739ae039","resolve","reject","ERR_BAD_REQUEST","$f3627a5d0641603b$export$2e2bcd8739ae039","isStandardBrowserEnv","expires","domain","secure","cookie","isNumber","Date","toGMTString","RegExp","decodeURIComponent","remove","now","$691cc630f9ef56b2$export$2e2bcd8739ae039","baseURL","relativeURL","$1746cdb16526768b$export$2e2bcd8739ae039","requestedURL","$bb07efa23107e01d$export$2e2bcd8739ae039","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","$6357329dd8712192$export$2e2bcd8739ae039","$43b00c9657a44656$export$2e2bcd8739ae039","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","$73b5cdc05ac72ecf$var$progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","$73b5cdc05ac72ecf$export$2e2bcd8739ae039","XMLHttpRequest","Promise","requestData","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","removeEventListener","isStandardBrowserWebWorkerEnv","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","err","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","$a776da890889b002$var$knownAdapters","http","xhr","$a776da890889b002$export$2e2bcd8739ae039","getAdapter","adapters","nameOrAdapter","$acd9f6ce0996c2c9$var$throwIfCancellationRequested","throwIfRequested","$acd9f6ce0996c2c9$export$2e2bcd8739ae039","then","reason","$978ae1e75118f535$var$headersToObject","$978ae1e75118f535$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$4c84c2d525dc977b$var$validators","$4c84c2d525dc977b$var$deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","warn","$4c84c2d525dc977b$export$2e2bcd8739ae039","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$4ca0095817960ee3$var$validators","validators","$4ca0095817960ee3$var$Axios","configOrUrl","defaults","contextHeaders","assertOptions","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptors","interceptor","unshift","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","getUri","instanceConfig","generateHTTPMethod","isForm","$4ca0095817960ee3$export$2e2bcd8739ae039","$1c9d2783569136b3$var$CancelToken","_listeners","splice","executor","resolvePromise","onfulfilled","_resolve","$1c9d2783569136b3$export$2e2bcd8739ae039","$8a2573892eafc323$var$axios","$8a2573892eafc323$var$createInstance","defaultConfig","instance","extend","Axios","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","Cancel","all","promises","spread","callback","isAxiosError","payload","mergeConfig","AxiosHeaders","formToJSON","$8a2573892eafc323$export$2e2bcd8739ae039","$1c9bd35df1aeff0f$export$1c00760e9e5a4e95","$1c9bd35df1aeff0f$export$c1fbed17c2f6a328","$1c9bd35df1aeff0f$export$1ab0c6b20d94fa14","$1c9bd35df1aeff0f$export$3b22524397b493c6","$1c9bd35df1aeff0f$export$fd08e3cb425f0d61","$1c9bd35df1aeff0f$export$a4ad2735b021c132","$1c9bd35df1aeff0f$export$84bf76cd7afc7469","$1c9bd35df1aeff0f$export$848c9b7ead0df967","$1c9bd35df1aeff0f$export$fbafdbe06a5b5a9a","$1c9bd35df1aeff0f$export$3ae0fd4797ed47c8","$1c9bd35df1aeff0f$export$10ae0d317ea97f8b","$1c9bd35df1aeff0f$export$4e7d6ff0f3e6520","$1c9bd35df1aeff0f$export$86d7c59254d6a2c9","$1c9bd35df1aeff0f$export$7ec1ebcfa9d8bd6a","t","$ae143e76ef13a4ec$exports","t1","e1","a1","n1","o1","r1","s1","l1","m1","wrapID","overlayID","width","distance","opacity","borderRadius","rtl","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","info","c1","backgroundColor","backOverlayClickToClose","svgSize","titleFontSize","titleMaxLength","messageFontSize","buttonFontSize","buttonMaxLength","svgColor","titleColor","messageColor","buttonBackground","buttonColor","f1","d1","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","x1","g1","customSvgUrl","customSvgCode","messageID","b1","u1","querySelectorLimit","y1","k1","h1","getElementById","innerHTML","appendChild","v","a2","N","textContent","innerText","W1","I1","R1","A1","M","B","D1","T1","F1","o","r","G","Notify","init","p","f","toLocaleLowerCase","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","height","animationDuration","body","g","color","u","insertBefore","firstChild","k","C","z","childElementCount","clearTimeout","S","parentNode","removeChild","querySelector","W","I","R","querySelectorAll","A","E1","j1","e2","a3","Report","z1","S1","L1","O1","H1","n2","Confirm","padding","ceil","L","focus","setSelectionRange","preventDefault","keyCode","dispatchEvent","Event","stopPropagation","returnValue","cancelBubble","P1","U1","Loading","X1","innerWidth","q1","Q","Y1","e3","a4","n3","isPrototypeOf","NodeList","Block","X","tagName","D","T","F","E","q","O","getComputedStyle","getPropertyValue","H","P","V","offsetHeight","getAttribute","Y","K","$","J","createRange","selectNode","Z","createContextualFragment","_","tt","et","it","show","ask","prompt","standard","hourglass","circle","arrows","pulse","custom","notiflix","change","getElementsByTagName","V1","Notiflix","amd","$58f6ba2e414c2639$export$3dec35ae983201d9","async","pageNumber","api_key","page","queryWord","language","query","include_adult","movieId","genres","getImageUrl","imgName","imgSize","$7c44e490bf866a39$exports","URL","import","meta","$7cc120dfb225b33c$export$e05fa48ccab9af8","poster_path","title","vote_average","vote_count","popularity","original_title","overview","genresList","element","toFixed","$ee27a4d7c64fc8c4$export$21666b427502ea6d","pageNavigation","pageBack","pageNext","pages","searchInput","searchForm","searcBox","libraryBtn","homeBtn","watchedBtn","queueBtn","filmList","openModalBtn","closeModalBtn","modal","bckdrp","$ae7ad92c67022e27$export$2aa1a1304c0a961a","release_date","genre","year","cardImg1x","$d9163fb0f0d0493c$export$dd8ff8abcc9cbcb","parseData","id1","getMoviesById","item","insertAdjacentHTML","$2338c8cd734f85a6$var$formDataQueue","$2338c8cd734f85a6$var$formDataWatched","$2338c8cd734f85a6$export$be9b951aae673f4e","savedData","localStorage","getItem","$2338c8cd734f85a6$export$f3fde474d5abd81f","getData","$2338c8cd734f85a6$var$addFilmInSutableList","setItem","$2338c8cd734f85a6$var$removeFromStorageList","clickableButton","unclickableButton","text","removeAttribute","cursor","findIndex","savedId","removeItem","$2338c8cd734f85a6$var$changesClickableBtn","btn","$2338c8cd734f85a6$var$changesUnclickableBtn","$2338c8cd734f85a6$export$42763a430f2e2138","btnWatched","btnQueue","contains","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","$391299e0893a3dfa$exports","$391299e0893a3dfa$var$defaultSetTimout","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","$391299e0893a3dfa$var$drainQueue","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","$391299e0893a3dfa$var$noop","nextTick","args","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","$b197424204fd80b4$export$588c7fdda06fbb0a","assertion","$b197424204fd80b4$export$a39cad550e7ab28a","$b197424204fd80b4$var$stringToByteArray$1","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","stringToByteArray","c2","c3","$b197424204fd80b4$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$b197424204fd80b4$export$e510a73ee562749","utf8Bytes","$b197424204fd80b4$export$b3b2de96497acc47","$b197424204fd80b4$export$4b5284a3025a455","$b197424204fd80b4$export$c62426fdd000a97e","$b197424204fd80b4$export$6c40052bed430212","$b197424204fd80b4$export$54e9fb29908872fa","$b197424204fd80b4$export$c36915b22ce77c19","$b197424204fd80b4$export$872f8323f01d7ae0","$b197424204fd80b4$export$5d1d834fbbf8bab7","$b197424204fd80b4$export$3865db50535c2055","indexedDB","$b197424204fd80b4$var$getDefaultsFromGlobal","$b197424204fd80b4$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$b197424204fd80b4$var$getDefaults","$b197424204fd80b4$var$getDefaultsFromEnvVariable","decoded","$b197424204fd80b4$var$getDefaultsFromCookie","productName","_a","_b","emulatorHosts","separatorIndex","$b197424204fd80b4$export$85f6557964517f1a","wrapCallback","catch","$b197424204fd80b4$export$367bf224123348f1","projectId","uid","iat","user_id","project","exp","auth_time","sign_in_provider","identities","customData","$b197424204fd80b4$export$dd24e9cd51226c56","template","$b197424204fd80b4$var$PATTERN","service","serviceName","errors","$b197424204fd80b4$export$c5a53ce6a17cf18d","$b197424204fd80b4$export$fac44ee5b035f737","$b197424204fd80b4$export$2f872c0f2117be69","claims","signature","$b197424204fd80b4$export$2344b14b097df817","$b197424204fd80b4$export$dd1bc94b04021eeb","$b197424204fd80b4$export$871de8747c9eaa88","contextObj","$b197424204fd80b4$export$9cb4719e2e525b7a","aKeys","bKeys","aProp","bProp","$b197424204fd80b4$var$isObject","$307d2bd0b522285b$export$16fa2f45be04daa8","mode","instantiationMode","multipleInstances","serviceProps","onInstanceCreated","instanceFactory","$307d2bd0b522285b$export$2881499e37b75b9a","instancesDeferred","normalizedIdentifier","deferred","isInitialized","shouldAutoInitialize","normalizeInstanceIdentifier","identifier","optional","component","$307d2bd0b522285b$var$isComponentEager","getOrInitializeService","instanceIdentifier","instanceDeferred","instancesOptions","instances","services","values","INTERNAL","_delete","isComponentSet","onInit","existingCallbacks","onInitCallbacks","Set","existingInstance","invokeOnInitCallbacks","callbacks","container","$577b55f579ec2041$var$instances","$577b55f579ec2041$export$243e62d78d3b544d","LogLevel1","$577b55f579ec2041$var$levelStringToEnum","DEBUG","VERBOSE","INFO","ERROR","SILENT","$577b55f579ec2041$var$defaultLogLevel","$577b55f579ec2041$var$ConsoleMethod","WARN","$577b55f579ec2041$var$defaultLogHandler","logType","logLevel","_logLevel","logHandler","_logHandler","userLogHandler","_userLogHandler","$a6f488ce4cf7dbe7$var$idbProxyableTypes","$a6f488ce4cf7dbe7$var$cursorAdvanceMethods","$a6f488ce4cf7dbe7$var$cursorRequestMap","WeakMap","$a6f488ce4cf7dbe7$var$transactionDoneMap","$a6f488ce4cf7dbe7$var$transactionStoreNamesMap","$a6f488ce4cf7dbe7$var$transformCache","$a6f488ce4cf7dbe7$export$407448d2b89b1813","$a6f488ce4cf7dbe7$var$idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","$a6f488ce4cf7dbe7$export$efccba1c4a2ef57b","$a6f488ce4cf7dbe7$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$a6f488ce4cf7dbe7$export$3b14a55fb2447963","storeNames","tx","sort","$a6f488ce4cf7dbe7$var$transformCachableValue","unlisten","complete","DOMException","$a6f488ce4cf7dbe7$var$cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","Proxy","IDBRequest","$a6f488ce4cf7dbe7$var$promisifyRequest","newValue","$92f73a92431170de$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","db","$92f73a92431170de$var$readMethods","$92f73a92431170de$var$writeMethods","$92f73a92431170de$var$cachedMethods","Map","$92f73a92431170de$var$getMethod","target1","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","$d7defabc17f02990$var$PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","provider","getImmediate","databaseCompatName","$577b55f579ec2041$export$efa9a398d6368992","$d7defabc17f02990$var$PLATFORM_LOG_STRING","$d7defabc17f02990$export$b4e3c36c855b14b5","$d7defabc17f02990$export$fa5244b94c62d36a","app","addComponent","$d7defabc17f02990$var$logger","debug","$d7defabc17f02990$export$c930050e7bb63965","componentName","$d7defabc17f02990$export$9566bce3835c0f28","$d7defabc17f02990$export$fa0d6da0f5838f50","name1","heartbeatController","getProvider","triggerHeartbeat","$d7defabc17f02990$var$ERROR_FACTORY","$b197424204fd80b4$export$3fa6e1b18a3b2d40","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","checkDestroyed","_name","_options","_config","_container","isDeleted","_isDeleted","rawConfig","name4","existingApp","$307d2bd0b522285b$export$436a80eea5d5c0c5","newApp","$d7defabc17f02990$var$FirebaseAppImpl","name5","$d7defabc17f02990$export$c55cfd413944906d","library","libraryKeyOrName","variant","version1","versionMismatch","libraryMismatch","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","$135e783d297c6b1e$var$d","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","$135e783d297c6b1e$var$w","$135e783d297c6b1e$var$m","$135e783d297c6b1e$var$y","$135e783d297c6b1e$var$v","$135e783d297c6b1e$var$g","$135e783d297c6b1e$var$b","$135e783d297c6b1e$var$E","$135e783d297c6b1e$export$8fada0bf726bf278","$135e783d297c6b1e$var$B","user","$135e783d297c6b1e$var$Q","getToken","invalidateToken","enqueueRetryable","shutdown","$135e783d297c6b1e$var$W","accessToken","getUid","$135e783d297c6b1e$var$G","getAuthHeaderValueForFirstParty","$135e783d297c6b1e$var$K","$135e783d297c6b1e$var$Y","$135e783d297c6b1e$var$H","appCheck","t2","$135e783d297c6b1e$var$X","isDefaultDatabase","database","$135e783d297c6b1e$var$dt","$135e783d297c6b1e$var$wt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","$135e783d297c6b1e$var$_t","$135e783d297c6b1e$var$_iterator","$135e783d297c6b1e$var$It","t9","e5","binaryString","toBase64","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","$135e783d297c6b1e$var$ae","isEmpty","inorderTraversal","reverseTraversal","minKey","maxKey","insert","fixUp","removeMin","EMPTY","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","RED","checkMaxDepth","check","BLACK","$135e783d297c6b1e$var$pn","$135e783d297c6b1e$var$gn","ssl","credentials","cacheSizeBytes","experimentalForceLongPolling","experimentalAutoDetectLongPolling","ignoreUndefinedProperties","useFetchStreams","t49","e21","$135e783d297c6b1e$export$d0e2b3272814ce82","_app","_initialized","_settingsFrozen","_terminated","_terminateTask","_setSettings","t50","_settings","_authCredentials","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_freezeSettings","_terminate","databaseId","_databaseId","settings","terminate","_appCheckCredentials","_persistenceKey","$0bd6470bc8fec501$export$20b1dbb5a4ce4b93","fetch","ok","json","t98","e43","setMultipleInstances","$6fce49880e7c8879$exports","exports","visible","children","ownerDocument","e4","HTMLElement","cloneNode","closable","onShow","onClose","parentElement","e6","requestAnimationFrame","$e0e3469d2cd730e4$var$refsO","listFilm","filmCardItem","backdrop","filmListCard","movieCard","teaserBtnPlay","$e0e3469d2cd730e4$var$closeMainModal","$e0e3469d2cd730e4$var$onEscKeyClick","$cfbb8a8a223b3f68$var$closeModal","overflow","currentTarget","parent","closest","render","dataStorageWatched","dataStorageQueue","results","teaser","video","terailerKey","trailerRend","toggle","$668b2310913a4fe8$var$SDK_VERSION","$668b2310913a4fe8$var$DOMStorageWrapper","domStorage_","prefixedName_","storedVal","prefix_","$668b2310913a4fe8$var$MemoryStorage","cache_","isInMemoryStorage","$668b2310913a4fe8$var$createStoragefor","domStorageName","domStorage","$668b2310913a4fe8$var$PersistentStorage","$668b2310913a4fe8$var$SessionStorage","$668b2310913a4fe8$var$sha1","$b197424204fd80b4$export$655666783217a925","sha11","$b197424204fd80b4$export$c85d589bf4e25fef","digest","sha1Bytes","$668b2310913a4fe8$var$buildLogMessage_","varArgs","$668b2310913a4fe8$var$firstLog_","$668b2310913a4fe8$var$enableLogging$1","logger_","persistent","$b197424204fd80b4$export$a7a9523472993e97","$668b2310913a4fe8$var$logClient","$668b2310913a4fe8$var$logger","$668b2310913a4fe8$var$log","$668b2310913a4fe8$var$logWrapper","prefix","$668b2310913a4fe8$var$isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","$668b2310913a4fe8$var$nameCompare","bAsInt","aAsInt","$668b2310913a4fe8$var$requireKey","$668b2310913a4fe8$var$ObjectToUniqueKey","$668b2310913a4fe8$var$splitStringBySize","segsize","dataSegs","$668b2310913a4fe8$var$each","bias","ln","bits","reverse","hexByteString","hexByte","$668b2310913a4fe8$var$INTEGER_REGEXP_","$668b2310913a4fe8$var$tryParseInt","intVal","$668b2310913a4fe8$var$exceptionGuard","$668b2310913a4fe8$var$warn","$668b2310913a4fe8$var$setTimeoutNonBlocking","time","Deno","unrefTimer","forceRefresh","appCheckProvider","addTokenListener","notifyForInvalidToken","appName_","auth_","error2","firebaseOptions_","errorMessage","authProvider_","$668b2310913a4fe8$var$EmulatorTokenProvider","removeTokenChangeListener","OWNER","$668b2310913a4fe8$var$RepoInfo","internalHost","newHost","isCacheableHost","_host","toURLString","persistenceKey","query2","includeNamespaceInQueryParams","namespace","webSocketOnly","nodeAdmin","_domain","$668b2310913a4fe8$var$repoInfoConnectionURL","repoInfo","connURL","counters_","name2","amount","hashString","$668b2310913a4fe8$var$collections","$668b2310913a4fe8$var$StatsCollection","responseNum","closeAfterResponse","requestNum","pendingResponses","currentResponseNum","toProcess","onMessage_","curSegmentNum","onDisconnect1","$668b2310913a4fe8$var$PacketReceiver","onMessage","isClosed_","connectTimeoutTimer_","log_","onClosed_","wrappedFn","called","attachEvent","scriptTagHolder","$668b2310913a4fe8$var$FirebaseIFrameScriptHolder","command","arg4","incrementIncomingBytes_","everConnected_","sendNewPolls","myPacketOrderer","closeAfter","handleResponse","pN","urlFn","random","uniqueCallbackIdentifier","urlParams","connectURL","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","$668b2310913a4fe8$var$BrowserPollConnection","Windows","UI","myDisconnFrame","shutdown_","onDisconnect_","bytesSent","dataStr","stats_","incrementCounter","base64data","enqueueSegment","pw","bytesReceived","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","$668b2310913a4fe8$var$statsManagerGetCollection","iframe","contentWindow","contentDocument","doc","alive","myIFrame","onDisconnect2","onDisconnect","myID","myPW","newRequest_","outstandingRequests","pendingSegs","currentSerial","theURL","curDataString","theSeg","seg","ts","segnum","totalsegs","serial","keepaliveTimeout","doNewRequest","addTag","doNodeLongPoll","loadCB","newScript","onload","rstate","commandCB","onMessageCB","onDisconnect3","$668b2310913a4fe8$var$LUIDGenerator","createIFrame_","script","iframeContents","$668b2310913a4fe8$var$WebSocketImpl","MozWebSocket","WebSocket","$668b2310913a4fe8$var$WebSocketConnection","$668b2310913a4fe8$var$FORGE_DOMAIN_RE","onDisconnect4","platform","device","proxy","origin","mySock","error3","onopen","onclose","onmessage","handleIncomingFrame","error4","isOldAndroid","oldAndroidMatch","oldAndroidRegex","parseFloat","appendFrame_","frames","jsonMess","fullMess","frameCount","totalFrames","handleNewFrameCount_","mess","resetKeepAlive","remainingData","extractFrameCount_","sendString_","keepaliveTimer","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","$668b2310913a4fe8$var$TransportManager","ALL_TRANSPORTS","initialTransport","upgradeTransport","$668b2310913a4fe8$var$Connection","start_","conn","transportManager_","conn_","nextTransportId_","repoInfo_","applicationId_","appCheckToken_","authToken_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","healthyTimeoutMS","healthyTimeout_","isHealthy_","markConnectionHealthy","connectionCount","everConnected","onConnectionLost_","onSecondaryConnectionLost_","state_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","pendingDataMessages","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","primaryResponsesRequired_","onHandshake_","onConnectionShutdown_","onReset_","$668b2310913a4fe8$var$error","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version2","onConnectionEstablished_","tryStartUpgrade_","sessionId","onDisconnect5","closeConnections_","onReady_","onKill_","$668b2310913a4fe8$var$ServerActions","pathString","onComplete","refreshAuthToken","stats","eventType","listeners_","validateEventType_","eventData","getInitialEvent","allowedEvents_","find","$668b2310913a4fe8$var$EventEmitter","$668b2310913a4fe8$var$OnlineMonitor","online_","trigger","pieceNum_","pieces_","pathOrString","pieceNum","copyTo","$668b2310913a4fe8$var$newEmptyPath","$668b2310913a4fe8$var$Path","$668b2310913a4fe8$var$pathGetFront","pieces","childPathObj","childPieces","$668b2310913a4fe8$var$pathIsEmpty","$668b2310913a4fe8$var$newRelativePath","outerPath","innerPath","outer","inner","$668b2310913a4fe8$var$pathPopFront","$668b2310913a4fe8$var$pathEquals","other","$668b2310913a4fe8$var$pathGetLength","$668b2310913a4fe8$var$pathContains","$668b2310913a4fe8$var$ValidationPath","errorPrefix_","parts_","$668b2310913a4fe8$var$pathSlice","byteLength_","$b197424204fd80b4$export$9536dc0a75b20bf9","$668b2310913a4fe8$var$validationPathCheckValid","validationPath","$668b2310913a4fe8$var$validationPathToErrorString","$668b2310913a4fe8$var$VisibilityMonitor","visible_","hidden","visibilityChange","requestNumber_","curReqNum","connected_","realtime_","sendRequest","onResponse","requestCBHash_","query3","initConnection_","outstandingGet","action","_path","_queryObject","outstandingGets_","outstandingGetCount_","sendGet_","query4","currentHashFn","tag","queryId","_queryIdentifier","listens","_queryParams","isDefault","loadsAllData","listenSpec","sendListen_","get1","query5","req","hashFn","$668b2310913a4fe8$var$PersistentConnection","warnOnListenWarnings_","removeListen_","query6","warnings","$b197424204fd80b4$export$e51ae4db7b428f67","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","$b197424204fd80b4$export$fc970ed23da99565","maxReconnectDelay_","refreshAppCheckToken","tryAppCheck","authMethod","$b197424204fd80b4$export$9565ca3d387f8aa0","cred","authOverride_","invalidAuthTokenCount_","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","query7","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","onDisconnectCancel","putInternal","outstandingPuts_","outstandingPutCount_","setMaxNode","MAX_NODE","sendPut_","queued","reportStats","errorReason","reqNum","onDataUpdate_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","onConnectStatus_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","online","onRealtimeDisconnect_","cancelSentTransactions_","timeSinceLastConnectAttempt","lastConnectionAttemptTime_","reconnectDelay","shouldReconnect_","onDataMessage","onReady","onDisconnect6","nextConnectionId_","connection","closeFn","canceled","sendRequestFn","nodeFromJSON","forceTokenRefresh_","authTokenProvider_","appCheckTokenProvider_","interrupt","error5","interruptReasons_","delta","onServerInfoUpdate_","put","query8","listen","normalizedPathString","map1","statusCode","explanation","securityDebugCallback_","queries","clientName","getInstance","currentlyOnline","nextPersistentConnectionId_","onVisible_","onOnline_","$668b2310913a4fe8$var$NamedNode","name3","node","$668b2310913a4fe8$var$Index","indexedValueChanged","oldNode","newNode","newWrapped","oldWrapped","MIN","__EMPTY_NODE","$668b2310913a4fe8$var$__EMPTY_NODE","indexValue","$668b2310913a4fe8$var$KeyIndex","nodeStack_","resultGenerator_","isReverse_","startKey","comparator","cmp","$668b2310913a4fe8$var$LLRBNode","count","min_","fixUp_","removeMin_","$668b2310913a4fe8$var$SortedMap","EMPTY_NODE","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","comparator_","root_","rightParent","getIterator","resultGenerator","$668b2310913a4fe8$var$SortedMapIterator","$668b2310913a4fe8$var$NAME_ONLY_COMPARATOR","$668b2310913a4fe8$var$MAX_NODE$2","priority","$668b2310913a4fe8$var$validatePriorityNode","priorityNode","isLeafNode","getPriority","$668b2310913a4fe8$var$__childrenNodeConstructor","$668b2310913a4fe8$var$LeafNode","__childrenNodeConstructor","priorityNode_","updatePriority","newPriorityNode","value_","getImmediateChild","childName","getChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","lazyHash_","toHash","$668b2310913a4fe8$var$priorityHashText","$668b2310913a4fe8$var$doubleToIEEE754String","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","aPriority","bPriority","indexCmp","$668b2310913a4fe8$var$MAX_NODE$1","$668b2310913a4fe8$var$nodeFromJSON$1","bits_","current_","$668b2310913a4fe8$var$LOG_2","mask","childList","keyFn","mapSortFn","low","high","namedNode","middle","buildBalancedTree","root1","root","buildPennant","chunkSize","childTree","attachPennant","pennant","base12","isOne","nextBitIsOne","buildFrom12Array","$668b2310913a4fe8$var$Base12Num","Default","$668b2310913a4fe8$var$fallbackObject","$668b2310913a4fe8$var$PRIORITY_INDEX","$668b2310913a4fe8$var$_defaultIndexMap","$668b2310913a4fe8$var$IndexMap","indexKey","sortedMap","indexes_","indexDefinition","indexSet_","existingChildren","$668b2310913a4fe8$var$KEY_INDEX","sawIndexedValue","iter","Wrap","newIndex","getNext","isDefinedOn","$668b2310913a4fe8$var$buildChildSet","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","$668b2310913a4fe8$var$ChildrenNode","$668b2310913a4fe8$var$EMPTY_NODE","$668b2310913a4fe8$var$NAME_COMPARATOR","children_","indexMap_","child2","hasChild","newIndexMap","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChild","getFirstChildName","getLastChild","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","peek","getReverseIteratorFrom","maxPost","endPost","$668b2310913a4fe8$var$MAX_NODE","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","$668b2310913a4fe8$var$nodeFromJSON","childData","childrenHavePriority","child3","childSet","sortedChildSet","$668b2310913a4fe8$var$PathIndex","extractChild","snap","indexPath_","aChild","bChild","name6","valueNode","MAX","makePost","name7","$668b2310913a4fe8$var$changeValue","snapshotNode","$668b2310913a4fe8$var$changeChildAdded","$668b2310913a4fe8$var$changeChildRemoved","$668b2310913a4fe8$var$changeChildChanged","oldSnap","startSet_","viewFrom_","indexStartValue_","getIndexStartName","startNameSet_","indexStartName_","endSet_","getIndexEndValue","indexEndValue_","getIndexEndName","endNameSet_","indexEndName_","hasLimit","limitSet_","hasAnchoredLimit","limit_","index_","$668b2310913a4fe8$export$7ba287e361c94330","startAfterSet_","endBeforeSet_","$668b2310913a4fe8$var$queryParamsToRestQueryStringParameters","queryParams","qs","orderBy","$668b2310913a4fe8$var$VALUE_INDEX","startParam","endParam","isViewFromLeft","viewFrom","$668b2310913a4fe8$var$ReadonlyRestClient","query9","query10","listenId","getListenId_","thisListen","listens_","queryStringParameters","restRequest_","error6","query11","query12","error7","referenceConstructor","$b197424204fd80b4$export$ac4103b836844853","rootNode_","newSnapshotNode","$668b2310913a4fe8$var$newSparseSnapshotTree","$668b2310913a4fe8$var$sparseSnapshotTreeRemember","sparseSnapshotTree","childKey","$668b2310913a4fe8$var$sparseSnapshotTreeForEachTree","prefixPath","tree","$668b2310913a4fe8$var$StatsListener","newStats","collection_","last_","stat","statsListener_","statsToReport_","haveStatsToReport","server_","reportedStats","reportStats_","collection","$668b2310913a4fe8$var$OperationType","OperationType1","$668b2310913a4fe8$var$newOperationSourceServerTaggedQuery","fromUser","tagged","$668b2310913a4fe8$var$AckUserWrite","affectedTree","subtree","revert","ACK_USER_WRITE","fromServer","$668b2310913a4fe8$var$Overwrite","$668b2310913a4fe8$var$Merge","operationForChild","fullyInitialized_","isFiltered","filtered_","isCompleteForPath","isFullyInitialized","isCompleteForChild","node_","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","aWrapped","bWrapped","$668b2310913a4fe8$var$eventGeneratorCompareChanges","materializedChange","prevName","$668b2310913a4fe8$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","query_","$668b2310913a4fe8$var$newViewCache","serverCache","viewCache","eventSnap","filtered","$668b2310913a4fe8$var$CacheNode","$668b2310913a4fe8$var$viewCacheUpdateServerSnap","serverSnap","$668b2310913a4fe8$var$viewCacheGetCompleteEventSnap","getNode","$668b2310913a4fe8$var$viewCacheGetCompleteServerSnap","$668b2310913a4fe8$var$emptyChildrenSingleton","$668b2310913a4fe8$var$ImmutableTree","childPath","childSnap","findRootMostMatchingPathAndValue","relativePath","predicate","child5","childExistingPathAndValue","$668b2310913a4fe8$var$pathChild","findRootMostValueAndPath","toSet","newChild","child7","child8","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath_","currentRelativePath","foreach","foreach_","$668b2310913a4fe8$var$stringCompare","$668b2310913a4fe8$var$EmptyChildren","$668b2310913a4fe8$var$CompoundWrite","writeTree_","rootmost","rootMostPath","compoundWrite","newWriteTree1","$668b2310913a4fe8$var$compoundWriteAddWrites","updates","$668b2310913a4fe8$var$compoundWriteAddWrite","newWrite","$668b2310913a4fe8$var$compoundWriteRemoveWrite","empty","newWriteTree2","$668b2310913a4fe8$var$compoundWriteHasCompleteWrite","$668b2310913a4fe8$var$compoundWriteGetCompleteNode","$668b2310913a4fe8$var$compoundWriteChildCompoundWrite","shadowingNode","$668b2310913a4fe8$var$compoundWriteIsEmpty","$668b2310913a4fe8$var$compoundWriteApply","writeTree","priorityWrite","$668b2310913a4fe8$var$applySubtreeWrite","$668b2310913a4fe8$var$writeTreeChildWrites","$668b2310913a4fe8$var$newWriteTreeRef","$668b2310913a4fe8$var$writeTreeRemoveWrite","writeId","allWrites","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$668b2310913a4fe8$var$writeTreeRecordContainsPath_","visibleWrites","$668b2310913a4fe8$var$writeTreeLayerTree_","$668b2310913a4fe8$var$writeTreeDefaultFilter_","lastWriteId","writeRecord","writes","treeRoot","writePath","child10","deepNode","$668b2310913a4fe8$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$668b2310913a4fe8$var$writeTreeCalcCompleteEventChildren","$668b2310913a4fe8$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$668b2310913a4fe8$var$writeTreeCalcEventCacheAfterServerOverwrite","$668b2310913a4fe8$var$writeTreeRefShadowingWrite","completeServerData","toIterate","nodes","existingServerCache","oldChange","changeMap","oldType","$668b2310913a4fe8$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","child","$668b2310913a4fe8$var$WriteTreeCompleteChildSource","viewCache_","serverNode","optCompleteServerCache_","$668b2310913a4fe8$var$writeTreeRefCalcCompleteChild","writes_","getChildAfterChild","child11","$668b2310913a4fe8$var$writeTreeRefCalcIndexedSlice","accumulator","$668b2310913a4fe8$var$ChildChangeAccumulator","newViewCache1","filterServerNode","operation","OVERWRITE","overwrite","$668b2310913a4fe8$var$viewProcessorApplyUserOverwrite","viewProcessor","oldViewCache","writesCache","completeCache","$668b2310913a4fe8$var$viewProcessorApplyServerOverwrite","MERGE","changedChildren","curViewCache","$668b2310913a4fe8$var$viewProcessorCacheHasChild","$668b2310913a4fe8$var$viewProcessorApplyUserMerge","$668b2310913a4fe8$var$viewProcessorApplyServerMerge","ackUserWrite","oldEventCache","newEventCache","serverChildren","updateFullNode","filtersNodes","$668b2310913a4fe8$var$viewProcessorRevertUserWrite","ackPath","name8","mergePath","serverCachePath","$668b2310913a4fe8$var$viewProcessorAckUserWrite","LISTEN_COMPLETE","oldServerNode","newViewCache5","$668b2310913a4fe8$var$viewProcessorGenerateEventCacheAfterServerEvent","$668b2310913a4fe8$var$viewProcessorListenComplete","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","$668b2310913a4fe8$var$viewProcessorMaybeAddValueEvent","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","childChangePath","eventChildUpdate","newEventChild","$668b2310913a4fe8$var$viewCacheUpdateEventSnap","changedSnap","serverFilter","getIndexedFilter","newServerCache","oldServerSnap","newServerNode","newViewCache3","newViewCache4","oldChild","$668b2310913a4fe8$var$pathGetBack","$668b2310913a4fe8$var$pathParent","$668b2310913a4fe8$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$668b2310913a4fe8$var$viewGetCompleteServerCache","view","$668b2310913a4fe8$var$viewApplyOperation","$668b2310913a4fe8$var$viewProcessorApplyOperation","processor_","$668b2310913a4fe8$var$viewGenerateEventsForChanges_","eventRegistration","eventRegistrations_","eventRegistrations","moves","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForChanges","eventGenerator_","$668b2310913a4fe8$var$referenceConstructor$1","$668b2310913a4fe8$var$referenceConstructor","$668b2310913a4fe8$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","views","$668b2310913a4fe8$var$syncPointGetCompleteServerCache","$668b2310913a4fe8$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$668b2310913a4fe8$var$syncTreeApplyUserOverwrite","syncTree","newData","$668b2310913a4fe8$var$syncTreeApplyOperationToSyncPoints_","$668b2310913a4fe8$var$syncTreeAckUserWrite","record","$668b2310913a4fe8$var$writeTreeGetWrite","$668b2310913a4fe8$var$syncTreeApplyServerOverwrite","$668b2310913a4fe8$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$668b2310913a4fe8$var$syncTreeQueryKeyForTag_","$668b2310913a4fe8$var$syncTreeParseQueryKey_","queryPath","$668b2310913a4fe8$var$syncTreeApplyTaggedOperation_","$668b2310913a4fe8$var$syncTreeCalcCompleteEventCache","serverCache1","$668b2310913a4fe8$var$syncTreeApplyOperationHelper_","syncPointTree","$668b2310913a4fe8$var$syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","$668b2310913a4fe8$var$writeTreeRefChild","child1","creatorFunction","changeTree","fromObject","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","$668b2310913a4fe8$export$eff4d24c3ff7876e","factory","$0a45cd7b032f2838$export$18a63439252de862","genre_ids","GenresList","reduce","acc","$db8fed00f4c020c9$exports","newNotifySettings","typesNotify","notifySettings","commonConsoleError","commonCheckHeadOrBody","commonExtendOptions","extended","deep","notifyGetInternalCSSCodes","notifyCreateCounter","notifyCreate","notifyType","callbackOrOptions","newNotifySettingsBackup","newOptions","html","htmlPool","theType","ntflxNotifyWrap","ntflxNotifyOverlay","ntflxNotify","closeButtonHTML","svgIcon","notifyWrap","eachNotifyElement","timeoutHide","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","removeNotifyElmentsAndWrapper","clickToCloseTimeout","callbackTimeout","autoRemove","allNotifyElmNotTheLastOne","eachNotifyElmNotLastOne","userNotifyOptions","getInternalCSSCodes","styleElementId","internalCSS","commonSetInternalCSSCodes","userNotifyExtendOptions","$8da24cb622d4991f$var$refs","$8da24cb622d4991f$export$e98cbe51299acd52","responce","films","$1bab9c519cfa82bc$var$qwery","$1bab9c519cfa82bc$var$actualPage","$1bab9c519cfa82bc$export$22fa394f3ba39578","currentPage","totalPage","qweryWord","pages1","pageCur","pageTot","fillArray","posBeg","posEnd","startVal","markupPages","pageNum","current","nav","pageClass","makePage","navigationRender","$1bab9c519cfa82bc$export$428e7c787d57587d","dataset","nodeName","switchQwery","qwery1","numPage","$009757a025d5cdc8$export$9d2e8b65238dea05","$009757a025d5cdc8$export$3a3c4dee50295cf0","$009757a025d5cdc8$var$movies","$009757a025d5cdc8$var$genres","getMovies","getGenresList","scrollTo","total_pages","searchWord","getMoviesByWord","total_results","blur","movieRequest","trimRight","trimLeft","$009757a025d5cdc8$var$searchRequest","minHeight","$c79ca54343d973bd$var$toTop","scrollY","onclick","toTopInterval","supportedScrollTop","scrollTop","documentElement"],"version":3,"file":"index.e7f65fd6.js.map"}