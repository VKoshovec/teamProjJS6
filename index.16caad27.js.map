{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_construct.js","node_modules/@swc/helpers/lib/_super_prop_base.js","node_modules/@swc/helpers/lib/_is_native_function.js","node_modules/@parcel/runtime-js/lib/runtime-41869aca59cca4c3.js","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/regenerator-runtime/runtime.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/env/classes/FormData.js","node_modules/form-data/lib/browser.js","node_modules/buffer/index.js","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_create_super.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/defaults/index.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/helpers/null.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/notiflix/dist/notiflix-aio-3.2.5.min.js","node_modules/axios/index.js","src/js/linkapi.js","node_modules/@parcel/runtime-js/lib/runtime-f1c5af26ec91d4e1.js","src/js/modal/getMovieById.js","src/js/refs.js","src/js/getItemTemplateForStorage.js","src/js/renderFilmsOnMyLibrary.js","src/js/localStorage.js","node_modules/@swc/helpers/lib/_get.js","node_modules/@firebase/util/src/constants.ts","node_modules/@swc/helpers/lib/_wrap_native_super.js","node_modules/process/browser.js","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/uuid.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/logger/src/logger.ts","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/idb/build/wrap-idb-value.js","node_modules/idb/build/index.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","src/js/modal/video.js","node_modules/basiclightbox/dist/basicLightbox.min.js","src/js/modal/modal-main.js","src/js/modal/modal-team.js","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/index.ts","src/js/firebase-options.js","node_modules/notiflix/build/notiflix-notify-aio.js","src/js/getItemTemplate.js","src/js/renderFilms.js","src/js/pagination.js","src/js/requests.js","src/js/header.js","src/js/scrollUp.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _construct;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _construct(Parent, args, Class) {\n    return construct.apply(null, arguments);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction construct(Parent1, args1, Class1) {\n    if (isNativeReflectConstruct()) {\n        construct = Reflect.construct;\n    } else {\n        construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) (0, _setPrototypeOf).default(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return construct.apply(null, arguments);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _superPropBase;\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = (0, _getPrototypeOf).default(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeFunction;\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.16caad27.js\\\",\\\"fYFLD\\\":\\\"placeholder.279cbe94.jpg\\\"}\"));","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self;\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  toJSONObject\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","import FormData from 'form-data';\nexport default FormData;\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport envFormData from '../env/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliant(thing) {\n  return thing && utils.isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator];\n}\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (envFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && isSpecCompliant(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        (utils.isFileList(value) || utils.endsWith(key, '[]') && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear() {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","export const VERSION = \"1.2.1\";","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","/* Notiflix AIO (https://notiflix.github.io) - Version: 3.2.5 - Author: Furkan MT (https://github.com/furcan) - Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT) */\n\n(function(t,e){\"function\"==typeof define&&define.amd?define([],function(){return e(t)}):\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e(t):t.Notiflix=e(t)})(\"undefined\"==typeof global?\"undefined\"==typeof window?this:window:global,function(t){'use strict';if(\"undefined\"==typeof t&&\"undefined\"==typeof t.document)return!1;var e,i,a,n,o,r=\"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\",s=\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif\",l={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},m={wrapID:\"NotiflixNotifyWrap\",overlayID:\"NotiflixNotifyOverlay\",width:\"280px\",position:\"right-top\",distance:\"10px\",opacity:1,borderRadius:\"5px\",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:\"rgba(0,0,0,0.5)\",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:\"NotiflixNotify\",className:\"notiflix-notify\",zindex:4001,fontFamily:\"Quicksand\",fontSize:\"13px\",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:\"fade\",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:\"basic\",fontAwesomeIconSize:\"34px\",success:{background:\"#32c682\",textColor:\"#fff\",childClassName:\"notiflix-notify-success\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-check-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{background:\"#ff5549\",textColor:\"#fff\",childClassName:\"notiflix-notify-failure\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-times-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{background:\"#eebf31\",textColor:\"#fff\",childClassName:\"notiflix-notify-warning\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-exclamation-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{background:\"#26c0d3\",textColor:\"#fff\",childClassName:\"notiflix-notify-info\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-info-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},c={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},p={ID:\"NotiflixReportWrap\",className:\"notiflix-report\",width:\"320px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",backOverlayClickToClose:!1,fontFamily:\"Quicksand\",svgSize:\"110px\",plainText:!0,titleFontSize:\"16px\",titleMaxLength:34,messageFontSize:\"13px\",messageMaxLength:400,buttonFontSize:\"14px\",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:\"fade\",success:{svgColor:\"#32c682\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#32c682\",buttonColor:\"#fff\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{svgColor:\"#ff5549\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#ff5549\",buttonColor:\"#fff\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{svgColor:\"#eebf31\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#eebf31\",buttonColor:\"#fff\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{svgColor:\"#26c0d3\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#26c0d3\",buttonColor:\"#fff\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},f={Show:\"Show\",Ask:\"Ask\",Prompt:\"Prompt\"},d={ID:\"NotiflixConfirmWrap\",className:\"notiflix-confirm\",width:\"300px\",zindex:4003,position:\"center\",distance:\"10px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:\"fade\",plainText:!0,titleColor:\"#32c682\",titleFontSize:\"16px\",titleMaxLength:34,messageColor:\"#1e1e1e\",messageFontSize:\"14px\",messageMaxLength:110,buttonsFontSize:\"15px\",buttonsMaxLength:34,okButtonColor:\"#f8f8f8\",okButtonBackground:\"#32c682\",cancelButtonColor:\"#f8f8f8\",cancelButtonBackground:\"#a9a9a9\"},x={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\",Custom:\"Custom\",Notiflix:\"Notiflix\"},g={ID:\"NotiflixLoadingWrap\",className:\"notiflix-loading\",zindex:4e3,backgroundColor:\"rgba(0,0,0,0.8)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:\"80px\",svgColor:\"#32c682\",messageID:\"NotiflixLoadingMessage\",messageFontSize:\"15px\",messageMaxLength:34,messageColor:\"#dcdcdc\"},b={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\"},u={ID:\"NotiflixBlockWrap\",querySelectorLimit:200,className:\"notiflix-block\",position:\"absolute\",zindex:1e3,backgroundColor:\"rgba(255,255,255,0.9)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,svgSize:\"45px\",svgColor:\"#383838\",messageFontSize:\"14px\",messageMaxLength:34,messageColor:\"#383838\"},y=function(t){return console.error(\"%c Notiflix Error \",\"padding:2px;border-radius:20px;color:#fff;background:#ff5549\",\"\\n\"+t+r)},k=function(t){return console.log(\"%c Notiflix Info \",\"padding:2px;border-radius:20px;color:#fff;background:#26c0d3\",\"\\n\"+t+r)},w=function(e){return e||(e=\"head\"),null!==t.document[e]||(y(\"\\nNotiflix needs to be appended to the \\\"<\"+e+\">\\\" element, but you called it before the \\\"<\"+e+\">\\\" element has been created.\"),!1)},h=function(e,i){if(!w(\"head\"))return!1;if(null!==e()&&!t.document.getElementById(i)){var a=t.document.createElement(\"style\");a.id=i,a.innerHTML=e(),t.document.head.appendChild(a)}},v=function(){var t={},e=!1,a=0;\"[object Boolean]\"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],a++);for(var n=function(i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=e&&\"[object Object]\"===Object.prototype.toString.call(i[a])?v(t[a],i[a]):i[a])};a<arguments.length;a++)n(arguments[a]);return t},N=function(e){var i=t.document.createElement(\"div\");return i.innerHTML=e,i.textContent||i.innerText||\"\"},C=function(t,e){t||(t=\"110px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportSuccess\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z\\\" style=\\\"-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},z=function(t,e){t||(t=\"110px\"),e||(e=\"#ff5549\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportFailure\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z\\\" style=\\\"-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z\\\" style=\\\"-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},S=function(t,e){t||(t=\"110px\"),e||(e=\"#eebf31\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportWarning\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z\\\" style=\\\"-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)\\\"><path d=\\\"M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z\\\" style=\\\"-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},L=function(t,e){t||(t=\"110px\"),e||(e=\"#26c0d3\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportInfo\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z\\\" style=\\\"-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},W=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" transform=\\\"scale(.8)\\\" viewBox=\\\"0 0 38 38\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\" transform=\\\"translate(1 1)\\\"><circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"18\\\" stroke-opacity=\\\".25\\\"/><path d=\\\"M36 18c0-9.94-8.06-18-18-18\\\"><animateTransform attributeName=\\\"transform\\\" dur=\\\"1s\\\" from=\\\"0 18 18\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 18 18\\\" type=\\\"rotate\\\"/></path></g></svg>\";return i},I=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingHourglass\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\\\"true\\\" data-animator-type=\\\"1\\\" style=\\\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\\\"><g id=\\\"NXhourglass2\\\" fill=\\\"inherit\\\"><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass4\\\" d=\\\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\\\"/></g><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass6\\\" d=\\\"M100 100L65.62 67.92V36.78h68.76v31.14z\\\"/></g><path d=\\\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\\\"/></g></g></svg>\";return i},R=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"25 25 50 50\\\" style=\\\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:\"+t+\";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:\"+t+\";position:absolute;top:0;left:0;margin:auto\\\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"\"+e+\"\\\" stroke-width=\\\"2\\\" style=\\\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\\\" stroke-dasharray=\\\"150 200\\\" stroke-dashoffset=\\\"-10\\\" stroke-linecap=\\\"round\\\"/></svg>\";return i},A=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 128 128\\\"><g><path fill=\\\"inherit\\\" d=\\\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\\\"/><animateTransform attributeName=\\\"transform\\\" dur=\\\"1.5s\\\" from=\\\"0 64 64\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 64 64\\\" type=\\\"rotate\\\"/></g></svg>\";return i},M=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 100 100\\\"><g transform=\\\"translate(25 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.239)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.266s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(50 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.00152)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.133s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(75 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.299)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g></svg>\";return i},B=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 44 44\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\"><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle></g></svg>\";return i},X=function(t,e,i){t||(t=\"60px\"),e||(e=\"#f8f8f8\"),i||(i=\"#32c682\");var a=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingNotiflixLib\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:\"+e+\";stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\\\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\\\" style=\\\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\\\" fill=\\\"\"+i+\"\\\" stroke=\\\"\"+i+\"\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"22\\\" stroke-width=\\\"12\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\\\" style=\\\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\\\" style=\\\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/></svg>\";return a},D=function(){return\"[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}\"},T=0,F=function(a,n,o,r){if(!w(\"body\"))return!1;e||G.Notify.init({});var c=v(!0,e,{});if(\"object\"==typeof o&&!Array.isArray(o)||\"object\"==typeof r&&!Array.isArray(r)){var p={};\"object\"==typeof o?p=o:\"object\"==typeof r&&(p=r),e=v(!0,e,p)}var f=e[a.toLocaleLowerCase(\"en\")];T++,\"string\"!=typeof n&&(n=\"Notiflix \"+a),e.plainText&&(n=N(n)),!e.plainText&&n.length>e.messageMaxLength&&(e=v(!0,e,{closeButton:!0,messageMaxLength:150}),n=\"Possible HTML Tags Error: The \\\"plainText\\\" option is \\\"false\\\" and the notification content length is more than the \\\"messageMaxLength\\\" option.\"),n.length>e.messageMaxLength&&(n=n.substring(0,e.messageMaxLength)+\"...\"),\"shadow\"===e.fontAwesomeIconStyle&&(f.fontAwesomeIconColor=f.background),e.cssAnimation||(e.cssAnimationDuration=0);var d=t.document.getElementById(m.wrapID)||t.document.createElement(\"div\");if(d.id=m.wrapID,d.style.width=e.width,d.style.zIndex=e.zindex,d.style.opacity=e.opacity,\"center-center\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.margin=\"auto\",d.classList.add(\"nx-flex-center-center\"),d.style.maxHeight=\"calc((100vh - \"+e.distance+\") - \"+e.distance+\")\",d.style.display=\"flex\",d.style.flexWrap=\"wrap\",d.style.flexDirection=\"column\",d.style.justifyContent=\"center\",d.style.alignItems=\"center\",d.style.pointerEvents=\"none\"):\"center-top\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.top=e.distance,d.style.bottom=\"auto\",d.style.margin=\"auto\"):\"center-bottom\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.margin=\"auto\"):\"right-bottom\"===e.position?(d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.left=\"auto\"):\"left-top\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=\"auto\",d.style.bottom=\"auto\"):\"left-bottom\"===e.position?(d.style.left=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.right=\"auto\"):(d.style.right=e.distance,d.style.top=e.distance,d.style.left=\"auto\",d.style.bottom=\"auto\"),e.backOverlay){var x=t.document.getElementById(m.overlayID)||t.document.createElement(\"div\");x.id=m.overlayID,x.style.width=\"100%\",x.style.height=\"100%\",x.style.position=\"fixed\",x.style.zIndex=e.zindex-1,x.style.left=0,x.style.top=0,x.style.right=0,x.style.bottom=0,x.style.background=f.backOverlayColor||e.backOverlayColor,x.className=e.cssAnimation?\"nx-with-animation\":\"\",x.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+\"ms\":\"\",t.document.getElementById(m.overlayID)||t.document.body.appendChild(x)}t.document.getElementById(m.wrapID)||t.document.body.appendChild(d);var g=t.document.createElement(\"div\");g.id=e.ID+\"-\"+T,g.className=e.className+\" \"+f.childClassName+\" \"+(e.cssAnimation?\"nx-with-animation\":\"\")+\" \"+(e.useIcon?\"nx-with-icon\":\"\")+\" nx-\"+e.cssAnimationStyle+\" \"+(e.closeButton&&\"function\"!=typeof o?\"nx-with-close-button\":\"\")+\" \"+(\"function\"==typeof o?\"nx-with-callback\":\"\")+\" \"+(e.clickToClose?\"nx-notify-click-to-close\":\"\"),g.style.fontSize=e.fontSize,g.style.color=f.textColor,g.style.background=f.background,g.style.borderRadius=e.borderRadius,g.style.pointerEvents=\"all\",e.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\")),g.style.fontFamily=\"\\\"\"+e.fontFamily+\"\\\", \"+s,e.cssAnimation&&(g.style.animationDuration=e.cssAnimationDuration+\"ms\");var b=\"\";if(e.closeButton&&\"function\"!=typeof o&&(b=\"<span class=\\\"nx-close-button\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\\\"/></g></svg></span>\"),!e.useIcon)g.innerHTML=\"<span class=\\\"nx-message\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else if(e.useFontAwesome)g.innerHTML=\"<i style=\\\"color:\"+f.fontAwesomeIconColor+\"; font-size:\"+e.fontAwesomeIconSize+\";\\\" class=\\\"nx-message-icon nx-message-icon-fa \"+f.fontAwesomeClassName+\" \"+(\"shadow\"===e.fontAwesomeIconStyle?\"nx-message-icon-fa-shadow\":\"nx-message-icon-fa-basic\")+\"\\\"></i><span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else{var u=\"\";a===l.Success?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\\\"/></g></svg>\":a===l.Failure?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\\\"/></g></svg>\":a===l.Warning?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\\\"/></g></svg>\":a===l.Info&&(u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\\\"/></g></svg>\"),g.innerHTML=u+\"<span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\")}if(\"left-bottom\"===e.position||\"right-bottom\"===e.position){var y=t.document.getElementById(m.wrapID);y.insertBefore(g,y.firstChild)}else t.document.getElementById(m.wrapID).appendChild(g);var k=t.document.getElementById(g.id);if(k){var h,C,z=function(){k.classList.add(\"nx-remove\");var e=t.document.getElementById(m.overlayID);e&&0>=d.childElementCount&&e.classList.add(\"nx-remove\"),clearTimeout(h)},S=function(){if(k&&null!==k.parentNode&&k.parentNode.removeChild(k),0>=d.childElementCount&&null!==d.parentNode){d.parentNode.removeChild(d);var e=t.document.getElementById(m.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(C)};if(e.closeButton&&\"function\"!=typeof o){var L=t.document.getElementById(g.id).querySelector(\"span.nx-close-button\");L.addEventListener(\"click\",function(){z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)})}if((\"function\"==typeof o||e.clickToClose)&&k.addEventListener(\"click\",function(){\"function\"==typeof o&&o(),z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)}),!e.closeButton&&\"function\"!=typeof o){var W=function(){h=setTimeout(function(){z()},e.timeout),C=setTimeout(function(){S()},e.timeout+e.cssAnimationDuration)};W(),e.pauseOnHover&&(k.addEventListener(\"mouseenter\",function(){k.classList.add(\"nx-paused\"),clearTimeout(h),clearTimeout(C)}),k.addEventListener(\"mouseleave\",function(){k.classList.remove(\"nx-paused\"),W()}))}}if(e.showOnlyTheLastOne&&0<T)for(var I,R=t.document.querySelectorAll(\"[id^=\"+e.ID+\"-]:not([id=\"+e.ID+\"-\"+T+\"])\"),A=0;A<R.length;A++)I=R[A],null!==I.parentNode&&I.parentNode.removeChild(I);e=v(!0,e,c)},E=function(){return\"[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},j=function(e,a,n,o,r,l){if(!w(\"body\"))return!1;i||G.Report.init({});var m={};if(\"object\"==typeof r&&!Array.isArray(r)||\"object\"==typeof l&&!Array.isArray(l)){var f={};\"object\"==typeof r?f=r:\"object\"==typeof l&&(f=l),m=v(!0,i,{}),i=v(!0,i,f)}var d=i[e.toLocaleLowerCase(\"en\")];\"string\"!=typeof a&&(a=\"Notiflix \"+e),\"string\"!=typeof n&&(e===c.Success?n=\"\\\"Do not try to become a person of success but try to become a person of value.\\\" <br><br>- Albert Einstein\":e===c.Failure?n=\"\\\"Failure is simply the opportunity to begin again, this time more intelligently.\\\" <br><br>- Henry Ford\":e===c.Warning?n=\"\\\"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny.\\\" <br><br>- Mustafa Kemal Ataturk\":e===c.Info&&(n=\"\\\"Knowledge rests not upon truth alone, but upon error also.\\\" <br><br>- Carl Gustav Jung\")),\"string\"!=typeof o&&(o=\"Okay\"),i.plainText&&(a=N(a),n=N(n),o=N(o)),i.plainText||(a.length>i.titleMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than the \\\"titleMaxLength\\\" option.\",o=\"Okay\"),n.length>i.messageMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than the \\\"messageMaxLength\\\" option.\",o=\"Okay\"),o.length>i.buttonMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the button content length is more than the \\\"buttonMaxLength\\\" option.\",o=\"Okay\")),a.length>i.titleMaxLength&&(a=a.substring(0,i.titleMaxLength)+\"...\"),n.length>i.messageMaxLength&&(n=n.substring(0,i.messageMaxLength)+\"...\"),o.length>i.buttonMaxLength&&(o=o.substring(0,i.buttonMaxLength)+\"...\"),i.cssAnimation||(i.cssAnimationDuration=0);var x=t.document.createElement(\"div\");x.id=p.ID,x.className=i.className,x.style.zIndex=i.zindex,x.style.borderRadius=i.borderRadius,x.style.fontFamily=\"\\\"\"+i.fontFamily+\"\\\", \"+s,i.rtl&&(x.setAttribute(\"dir\",\"rtl\"),x.classList.add(\"nx-rtl-on\")),x.style.display=\"flex\",x.style.flexWrap=\"wrap\",x.style.flexDirection=\"column\",x.style.alignItems=\"center\",x.style.justifyContent=\"center\";var g=\"\",b=!0===i.backOverlayClickToClose;i.backOverlay&&(g=\"<div class=\\\"\"+i.className+\"-overlay\"+(i.cssAnimation?\" nx-with-animation\":\"\")+(b?\" nx-report-click-to-close\":\"\")+\"\\\" style=\\\"background:\"+(d.backOverlayColor||i.backOverlayColor)+\";animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"></div>\");var u=\"\";if(e===c.Success?u=C(i.svgSize,d.svgColor):e===c.Failure?u=z(i.svgSize,d.svgColor):e===c.Warning?u=S(i.svgSize,d.svgColor):e===c.Info&&(u=L(i.svgSize,d.svgColor)),x.innerHTML=g+\"<div class=\\\"\"+i.className+\"-content\"+(i.cssAnimation?\" nx-with-animation \":\"\")+\" nx-\"+i.cssAnimationStyle+\"\\\" style=\\\"width:\"+i.width+\"; background:\"+i.backgroundColor+\"; animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"><div style=\\\"width:\"+i.svgSize+\"; height:\"+i.svgSize+\";\\\" class=\\\"\"+i.className+\"-icon\\\">\"+u+\"</div><h5 class=\\\"\"+i.className+\"-title\\\" style=\\\"font-weight:500; font-size:\"+i.titleFontSize+\"; color:\"+d.titleColor+\";\\\">\"+a+\"</h5><p class=\\\"\"+i.className+\"-message\\\" style=\\\"font-size:\"+i.messageFontSize+\"; color:\"+d.messageColor+\";\\\">\"+n+\"</p><a id=\\\"NXReportButton\\\" class=\\\"\"+i.className+\"-button\\\" style=\\\"font-weight:500; font-size:\"+i.buttonFontSize+\"; background:\"+d.buttonBackground+\"; color:\"+d.buttonColor+\";\\\">\"+o+\"</a></div>\",!t.document.getElementById(x.id)){t.document.body.appendChild(x);var y=function(){var e=t.document.getElementById(x.id);e.classList.add(\"nx-remove\");var a=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(a)},i.cssAnimationDuration)},k=t.document.getElementById(\"NXReportButton\");if(k.addEventListener(\"click\",function(){\"function\"==typeof r&&r(),y()}),g&&b){var h=t.document.querySelector(\".nx-report-click-to-close\");h.addEventListener(\"click\",function(){y()})}}i=v(!0,i,m)},O=function(){return\"[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},H=function(e,i,n,o,r,l,m,c,p){if(!w(\"body\"))return!1;a||G.Confirm.init({});var x=v(!0,a,{});\"object\"!=typeof p||Array.isArray(p)||(a=v(!0,a,p)),\"string\"!=typeof i&&(i=\"Notiflix Confirm\"),\"string\"!=typeof n&&(n=\"Do you agree with me?\"),\"string\"!=typeof r&&(r=\"Yes\"),\"string\"!=typeof l&&(l=\"No\"),\"function\"!=typeof m&&(m=void 0),\"function\"!=typeof c&&(c=void 0),a.plainText&&(i=N(i),n=N(n),r=N(r),l=N(l)),a.plainText||(i.length>a.titleMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than \\\"titleMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),n.length>a.messageMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than \\\"messageMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),(r.length||l.length)>a.buttonsMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the buttons content length is more than \\\"buttonsMaxLength\\\" option.\",r=\"Okay\",l=\"...\")),i.length>a.titleMaxLength&&(i=i.substring(0,a.titleMaxLength)+\"...\"),n.length>a.messageMaxLength&&(n=n.substring(0,a.messageMaxLength)+\"...\"),r.length>a.buttonsMaxLength&&(r=r.substring(0,a.buttonsMaxLength)+\"...\"),l.length>a.buttonsMaxLength&&(l=l.substring(0,a.buttonsMaxLength)+\"...\"),a.cssAnimation||(a.cssAnimationDuration=0);var g=t.document.createElement(\"div\");g.id=d.ID,g.className=a.className+(a.cssAnimation?\" nx-with-animation nx-\"+a.cssAnimationStyle:\"\"),g.style.zIndex=a.zindex,g.style.padding=a.distance,a.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\"));var b=\"string\"==typeof a.position?a.position.trim():\"center\";g.classList.add(\"nx-position-\"+b),g.style.fontFamily=\"\\\"\"+a.fontFamily+\"\\\", \"+s;var u=\"\";a.backOverlay&&(u=\"<div class=\\\"\"+a.className+\"-overlay\"+(a.cssAnimation?\" nx-with-animation\":\"\")+\"\\\" style=\\\"background:\"+a.backOverlayColor+\";animation-duration:\"+a.cssAnimationDuration+\"ms;\\\"></div>\");var y=\"\";\"function\"==typeof m&&(y=\"<a id=\\\"NXConfirmButtonCancel\\\" class=\\\"nx-confirm-button-cancel\\\" style=\\\"color:\"+a.cancelButtonColor+\";background:\"+a.cancelButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+l+\"</a>\");var k=\"\",h=null,C=void 0;if(e===f.Ask||e===f.Prompt){h=o||\"\";var z=e===f.Ask?Math.ceil(1.5*h.length):200<h.length?Math.ceil(1.5*h.length):250,S=e===f.Prompt?\"value=\\\"\"+h+\"\\\"\":\"\";k=\"<div><input id=\\\"NXConfirmValidationInput\\\" type=\\\"text\\\" \"+S+\" maxlength=\\\"\"+z+\"\\\" style=\\\"font-size:\"+a.messageFontSize+\";border-radius: \"+a.borderRadius+\";\\\" autocomplete=\\\"off\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"none\\\" /></div>\"}if(g.innerHTML=u+\"<div class=\\\"\"+a.className+\"-content\\\" style=\\\"width:\"+a.width+\"; background:\"+a.backgroundColor+\"; animation-duration:\"+a.cssAnimationDuration+\"ms; border-radius: \"+a.borderRadius+\";\\\"><div class=\\\"\"+a.className+\"-head\\\"><h5 style=\\\"color:\"+a.titleColor+\";font-size:\"+a.titleFontSize+\";\\\">\"+i+\"</h5><div style=\\\"color:\"+a.messageColor+\";font-size:\"+a.messageFontSize+\";\\\">\"+n+k+\"</div></div><div class=\\\"\"+a.className+\"-buttons\\\"><a id=\\\"NXConfirmButtonOk\\\" class=\\\"nx-confirm-button-ok\"+(\"function\"==typeof m?\"\":\" nx-full\")+\"\\\" style=\\\"color:\"+a.okButtonColor+\";background:\"+a.okButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+r+\"</a>\"+y+\"</div></div>\",!t.document.getElementById(g.id)){t.document.body.appendChild(g);var L=t.document.getElementById(g.id),W=t.document.getElementById(\"NXConfirmButtonOk\"),I=t.document.getElementById(\"NXConfirmValidationInput\");if(I&&(I.focus(),I.setSelectionRange(0,(I.value||\"\").length),I.addEventListener(\"keyup\",function(t){var i=t.target.value;if(e===f.Ask&&i!==h)t.preventDefault(),I.classList.add(\"nx-validation-failure\"),I.classList.remove(\"nx-validation-success\");else{e===f.Ask&&(I.classList.remove(\"nx-validation-failure\"),I.classList.add(\"nx-validation-success\"));var a=\"enter\"===(t.key||\"\").toLocaleLowerCase(\"en\")||13===t.keyCode;a&&W.dispatchEvent(new Event(\"click\"))}})),W.addEventListener(\"click\",function(t){if(e===f.Ask&&h&&I){var i=(I.value||\"\").toString();if(i!==h)return I.focus(),I.classList.add(\"nx-validation-failure\"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;I.classList.remove(\"nx-validation-failure\")}\"function\"==typeof m&&(e===f.Prompt&&I&&(C=I.value||\"\"),m(C)),L.classList.add(\"nx-remove\");var n=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(n))},a.cssAnimationDuration)}),\"function\"==typeof m){var R=t.document.getElementById(\"NXConfirmButtonCancel\");R.addEventListener(\"click\",function(){\"function\"==typeof c&&(e===f.Prompt&&I&&(C=I.value||\"\"),c(C)),L.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(t))},a.cssAnimationDuration)})}}a=v(!0,a,x)},P=function(){return\"[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] img,[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}\"},U=function(e,i,a,o,r){if(!w(\"body\"))return!1;n||G.Loading.init({});var l=v(!0,n,{});if(\"object\"==typeof i&&!Array.isArray(i)||\"object\"==typeof a&&!Array.isArray(a)){var m={};\"object\"==typeof i?m=i:\"object\"==typeof a&&(m=a),n=v(!0,n,m)}var c=\"\";if(\"string\"==typeof i&&0<i.length&&(c=i),o){c=c.length>n.messageMaxLength?N(c).toString().substring(0,n.messageMaxLength)+\"...\":N(c).toString();var p=\"\";0<c.length&&(p=\"<p id=\\\"\"+n.messageID+\"\\\" class=\\\"nx-loading-message\\\" style=\\\"color:\"+n.messageColor+\";font-size:\"+n.messageFontSize+\";\\\">\"+c+\"</p>\"),n.cssAnimation||(n.cssAnimationDuration=0);var f=\"\";if(e===x.Standard)f=W(n.svgSize,n.svgColor);else if(e===x.Hourglass)f=I(n.svgSize,n.svgColor);else if(e===x.Circle)f=R(n.svgSize,n.svgColor);else if(e===x.Arrows)f=A(n.svgSize,n.svgColor);else if(e===x.Dots)f=M(n.svgSize,n.svgColor);else if(e===x.Pulse)f=B(n.svgSize,n.svgColor);else if(e===x.Custom&&null!==n.customSvgCode&&null===n.customSvgUrl)f=n.customSvgCode||\"\";else if(e===x.Custom&&null!==n.customSvgUrl&&null===n.customSvgCode)f=\"<img class=\\\"nx-custom-loading-icon\\\" width=\\\"\"+n.svgSize+\"\\\" height=\\\"\"+n.svgSize+\"\\\" src=\\\"\"+n.customSvgUrl+\"\\\" alt=\\\"Notiflix\\\">\";else{if(e===x.Custom&&(null===n.customSvgUrl||null===n.customSvgCode))return y(\"You have to set a static SVG url to \\\"customSvgUrl\\\" option to use Loading Custom.\"),!1;f=X(n.svgSize,\"#f8f8f8\",\"#32c682\")}var d=parseInt((n.svgSize||\"\").replace(/[^0-9]/g,\"\")),b=t.innerWidth,u=d>=b?b-40+\"px\":d+\"px\",k=\"<div style=\\\"width:\"+u+\"; height:\"+u+\";\\\" class=\\\"\"+n.className+\"-icon\"+(0<c.length?\" nx-with-message\":\"\")+\"\\\">\"+f+\"</div>\",h=t.document.createElement(\"div\");if(h.id=g.ID,h.className=n.className+(n.cssAnimation?\" nx-with-animation\":\"\")+(n.clickToClose?\" nx-loading-click-to-close\":\"\"),h.style.zIndex=n.zindex,h.style.background=n.backgroundColor,h.style.animationDuration=n.cssAnimationDuration+\"ms\",h.style.fontFamily=\"\\\"\"+n.fontFamily+\"\\\", \"+s,h.style.display=\"flex\",h.style.flexWrap=\"wrap\",h.style.flexDirection=\"column\",h.style.alignItems=\"center\",h.style.justifyContent=\"center\",n.rtl&&(h.setAttribute(\"dir\",\"rtl\"),h.classList.add(\"nx-rtl-on\")),h.innerHTML=k+p,!t.document.getElementById(h.id)&&(t.document.body.appendChild(h),n.clickToClose)){var C=t.document.getElementById(h.id);C.addEventListener(\"click\",function(){h.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==h.parentNode&&(h.parentNode.removeChild(h),clearTimeout(t))},n.cssAnimationDuration)})}}else if(t.document.getElementById(g.ID))var z=t.document.getElementById(g.ID),S=setTimeout(function(){z.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))},n.cssAnimationDuration);clearTimeout(S)},r);n=v(!0,n,l)},V=function(e){\"string\"!=typeof e&&(e=\"\");var i=t.document.getElementById(g.ID);if(i)if(0<e.length){e=e.length>n.messageMaxLength?N(e).substring(0,n.messageMaxLength)+\"...\":N(e);var a=i.getElementsByTagName(\"p\")[0];if(a)a.innerHTML=e;else{var o=t.document.createElement(\"p\");o.id=n.messageID,o.className=\"nx-loading-message nx-loading-message-new\",o.style.color=n.messageColor,o.style.fontSize=n.messageFontSize,o.innerHTML=e,i.appendChild(o)}}else y(\"Where is the new message?\")},q=function(){return\"[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*=\\\"-message\\\"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}\"},Q=0,Y=function(e,i,a,n,r,l){var m;if(Array.isArray(a)){if(1>a.length)return y(\"Array of HTMLElements should contains at least one HTMLElement.\"),!1;m=a}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,a)){if(1>a.length)return y(\"NodeListOf<HTMLElement> should contains at least one HTMLElement.\"),!1;m=Array.prototype.slice.call(a)}else{var c=\"string\"!=typeof a||1>(a||\"\").length||1===(a||\"\").length&&(\"#\"===(a||\"\")[0]||\".\"===(a||\"\")[0]);if(c)return y(\"The selector parameter must be a string and matches a specified CSS selector(s).\"),!1;var p=t.document.querySelectorAll(a);if(1>p.length)return y(\"You called the \\\"Notiflix.Block...\\\" function with \\\"\"+a+\"\\\" selector, but there is no such element(s) in the document.\"),!1;m=p}o||G.Block.init({});var f=v(!0,o,{});if(\"object\"==typeof n&&!Array.isArray(n)||\"object\"==typeof r&&!Array.isArray(r)){var d={};\"object\"==typeof n?d=n:\"object\"==typeof r&&(d=r),o=v(!0,o,d)}var x=\"\";\"string\"==typeof n&&0<n.length&&(x=n),o.cssAnimation||(o.cssAnimationDuration=0);var g=u.className;\"string\"==typeof o.className&&(g=o.className.trim());var h=\"number\"==typeof o.querySelectorLimit?o.querySelectorLimit:200,C=(m||[]).length>=h?h:m.length,z=\"nx-block-temporary-position\";if(e){for(var S,L=[\"area\",\"base\",\"br\",\"col\",\"command\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"html\",\"head\",\"title\",\"script\",\"style\",\"iframe\"],X=0;X<C;X++)if(S=m[X],S){if(-1<L.indexOf(S.tagName.toLocaleLowerCase(\"en\")))break;var D=S.querySelectorAll(\"[id^=\"+u.ID+\"]\");if(1>D.length){var T=\"\";i&&(i===b.Hourglass?T=I(o.svgSize,o.svgColor):i===b.Circle?T=R(o.svgSize,o.svgColor):i===b.Arrows?T=A(o.svgSize,o.svgColor):i===b.Dots?T=M(o.svgSize,o.svgColor):i===b.Pulse?T=B(o.svgSize,o.svgColor):T=W(o.svgSize,o.svgColor));var F=\"<span class=\\\"\"+g+\"-icon\\\" style=\\\"width:\"+o.svgSize+\";height:\"+o.svgSize+\";\\\">\"+T+\"</span>\",E=\"\";0<x.length&&(x=x.length>o.messageMaxLength?N(x).substring(0,o.messageMaxLength)+\"...\":N(x),E=\"<span style=\\\"font-size:\"+o.messageFontSize+\";color:\"+o.messageColor+\";\\\" class=\\\"\"+g+\"-message\\\">\"+x+\"</span>\"),Q++;var j=t.document.createElement(\"div\");j.id=u.ID+\"-\"+Q,j.className=g+(o.cssAnimation?\" nx-with-animation\":\"\"),j.style.position=o.position,j.style.zIndex=o.zindex,j.style.background=o.backgroundColor,j.style.animationDuration=o.cssAnimationDuration+\"ms\",j.style.fontFamily=\"\\\"\"+o.fontFamily+\"\\\", \"+s,j.style.display=\"flex\",j.style.flexWrap=\"wrap\",j.style.flexDirection=\"column\",j.style.alignItems=\"center\",j.style.justifyContent=\"center\",o.rtl&&(j.setAttribute(\"dir\",\"rtl\"),j.classList.add(\"nx-rtl-on\")),j.innerHTML=F+E;var O=t.getComputedStyle(S).getPropertyValue(\"position\"),H=\"string\"==typeof O?O.toLocaleLowerCase(\"en\"):\"relative\",P=Math.round(1.25*parseInt(o.svgSize))+40,U=S.offsetHeight||0,V=\"\";P>U&&(V=\"min-height:\"+P+\"px;\");var q=\"\";q=S.getAttribute(\"id\")?\"#\"+S.getAttribute(\"id\"):S.classList[0]?\".\"+S.classList[0]:(S.tagName||\"\").toLocaleLowerCase(\"en\");var Y=\"\",K=-1>=[\"absolute\",\"relative\",\"fixed\",\"sticky\"].indexOf(H);if(K||0<V.length){if(!w(\"head\"))return!1;K&&(Y=\"position:relative!important;\");var $=\"<style id=\\\"Style-\"+u.ID+\"-\"+Q+\"\\\">\"+q+\".\"+z+\"{\"+Y+V+\"}</style>\",J=t.document.createRange();J.selectNode(t.document.head);var Z=J.createContextualFragment($);t.document.head.appendChild(Z),S.classList.add(z)}S.appendChild(j)}}}else var _=function(e){var i=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e);var a=e.getAttribute(\"id\"),n=t.document.getElementById(\"Style-\"+a);n&&null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)},o.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)e=t[n],e&&(e.classList.add(\"nx-remove\"),_(e));else\"string\"==typeof a?k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\" selector, but this selector does not have a \\\"Block\\\" element to remove.\"):k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\", but this \\\"Array<HTMLElement>\\\" or \\\"NodeListOf<HTMLElement>\\\" does not have a \\\"Block\\\" element to remove.\")},et=function(t){var e=setTimeout(function(){t.classList.remove(z),clearTimeout(e)},o.cssAnimationDuration+300)},it=setTimeout(function(){for(var t,e=0;e<C;e++)t=m[e],t&&(et(t),D=t.querySelectorAll(\"[id^=\"+u.ID+\"]\"),tt(D));clearTimeout(it)},l);o=v(!0,o,f)},G={Notify:{init:function(t){e=v(!0,m,t),h(D,\"NotiflixNotifyInternalCSS\")},merge:function(t){return e?void(e=v(!0,e,t)):(y(\"You have to initialize the Notify module before call Merge function.\"),!1)},success:function(t,e,i){F(l.Success,t,e,i)},failure:function(t,e,i){F(l.Failure,t,e,i)},warning:function(t,e,i){F(l.Warning,t,e,i)},info:function(t,e,i){F(l.Info,t,e,i)}},Report:{init:function(t){i=v(!0,p,t),h(E,\"NotiflixReportInternalCSS\")},merge:function(t){return i?void(i=v(!0,i,t)):(y(\"You have to initialize the Report module before call Merge function.\"),!1)},success:function(t,e,i,a,n){j(c.Success,t,e,i,a,n)},failure:function(t,e,i,a,n){j(c.Failure,t,e,i,a,n)},warning:function(t,e,i,a,n){j(c.Warning,t,e,i,a,n)},info:function(t,e,i,a,n){j(c.Info,t,e,i,a,n)}},Confirm:{init:function(t){a=v(!0,d,t),h(O,\"NotiflixConfirmInternalCSS\")},merge:function(t){return a?void(a=v(!0,a,t)):(y(\"You have to initialize the Confirm module before call Merge function.\"),!1)},show:function(t,e,i,a,n,o,r){H(f.Show,t,e,null,i,a,n,o,r)},ask:function(t,e,i,a,n,o,r,s){H(f.Ask,t,e,i,a,n,o,r,s)},prompt:function(t,e,i,a,n,o,r,s){H(f.Prompt,t,e,i,a,n,o,r,s)}},Loading:{init:function(t){n=v(!0,g,t),h(P,\"NotiflixLoadingInternalCSS\")},merge:function(t){return n?void(n=v(!0,n,t)):(y(\"You have to initialize the Loading module before call Merge function.\"),!1)},standard:function(t,e){U(x.Standard,t,e,!0,0)},hourglass:function(t,e){U(x.Hourglass,t,e,!0,0)},circle:function(t,e){U(x.Circle,t,e,!0,0)},arrows:function(t,e){U(x.Arrows,t,e,!0,0)},dots:function(t,e){U(x.Dots,t,e,!0,0)},pulse:function(t,e){U(x.Pulse,t,e,!0,0)},custom:function(t,e){U(x.Custom,t,e,!0,0)},notiflix:function(t,e){U(x.Notiflix,t,e,!0,0)},remove:function(t){\"number\"!=typeof t&&(t=0),U(null,null,null,!1,t)},change:function(t){V(t)}},Block:{init:function(t){o=v(!0,u,t),h(q,\"NotiflixBlockInternalCSS\")},merge:function(t){return o?void(o=v(!0,o,t)):(y(\"You have to initialize the \\\"Notiflix.Block\\\" module before call Merge function.\"),!1)},standard:function(t,e,i){Y(!0,b.Standard,t,e,i)},hourglass:function(t,e,i){Y(!0,b.Hourglass,t,e,i)},circle:function(t,e,i){Y(!0,b.Circle,t,e,i)},arrows:function(t,e,i){Y(!0,b.Arrows,t,e,i)},dots:function(t,e,i){Y(!0,b.Dots,t,e,i)},pulse:function(t,e,i){Y(!0,b.Pulse,t,e,i)},remove:function(t,e){\"number\"!=typeof e&&(e=0),Y(!1,null,t,null,null,e)}}};return\"object\"==typeof t.Notiflix?v(!0,t.Notiflix,{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}):{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}});","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  formToJSON,\n  mergeConfig\n}\n","import axios from \"axios\";\nimport Notiflix from \"notiflix\";\n\nconst keyApi = '0bf9a11da9d083f4751315d07dcbd89b';\nconst baseUrl = 'https://api.themoviedb.org/3/trending/movie/day';\nconst searchByWodrUrl = 'https://api.themoviedb.org/3/search/movie';\nconst searchByIdUrl = 'https://api.themoviedb.org/3/movie/';\nconst imgUrl = 'https://image.tmdb.org/t/p/w';\nconst genresUrl = 'https://api.themoviedb.org/3/genre/movie/list';\n\nconst loading = Notiflix.Loading.circle('loading result...');\nconst stopLoading = Notiflix.Loading.remove();\n\nexport const movieLink = {\n\n    //Objec method to get movies by page number\n    async getMovies ( pageNumber ) {\n            \n        const params = {\n            api_key: keyApi,\n            page: pageNumber,\n        };\n\n           const request = await axios.get ( baseUrl, { params } );\n              return await request.data;\n\n    },\n\n    //Objec method to get movies by name\n    async getMoviesByWord (queryWord, pageNumber) {\n            \n        const params = {\n            api_key: keyApi,\n            language: 'en-US',\n            query: queryWord,\n            page: pageNumber,\n            include_adult: false,\n        };\n\n           const request = await axios.get ( searchByWodrUrl, { params } );\n\n           return await request.data;\n\n    },\n\n    //Objec method to get movie about by id\n    async getMoviesById ( movieId ) {\n            \n        const params = {\n            language: 'en-US',\n            api_key: keyApi,\n        };\n\n        loading;\n\n        try {\n            const request = await axios.get ( `${searchByIdUrl}${movieId}`, { params } );\n            stopLoading;\n            return await request.data;\n        } catch (error) {\n            stopLoading;\n            Notiflix.Notify.failure(`Some broblems with api or query! Err: ${error}`);\n        };\n    },\n  \n    //Objec method to get geres list\n    async getGenresList () {\n\n        const params = {\n            api_key: keyApi,\n            language: 'en-US',\n        };\n\n        loading;\n\n        try {\n            const request = await axios.get ( genresUrl, { params } );\n            stopLoading;\n            return await request.data.genres;\n        } catch (error) {\n            stopLoading;\n            Notiflix.Notify.failure(`Some broblems with api or query! Err: ${error}`);\n        };\n    },\n\n    //Objec method to img full path\n    getImageUrl (imgName, imgSize) {\n        return `${imgUrl}${imgSize}/${imgName}`;\n    },\n\n}\n\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"fYFLD\");","import { movieLink } from '../linkapi';\nimport imageURL from '../../images/placeholder.jpg';\n\nconst posterUrl = 'https://image.tmdb.org/t/p/w';\n\nexport function getMovieById(\n  {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n\n    overview,\n    id,\n  },\n  genres\n) {\n  let genresList = genres.map(element => element.name);\n\n  const cardImgModal = poster_path\n    ? movieLink.getImageUrl(poster_path, 500)\n    : imageURL;\n\n  return `\n\n    <div class=\"card-film film \" id=\"${id}\">\n      <button class=\"btn-close-modal js-btn-close-modal\" type=\"button\">\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8 8L22 22\"  />\n          <path d=\"M8 22L22 8\"  />\n        </svg>\n      </button>\n      <div class=\"film__poster\">\n        <img\n          src=\"${cardImgModal} \"\n          alt=\"poster\"\n          max-width=\"375px\"\n          max-height=\"478px\"\n        />\n        <button class=\"btn-play-trailer\" id=\"teaser\" type=\"button\">watch the trailer</button>\n      </div>\n      <div class=\"film__content\">\n        <h2 class=\"film__title\">${title}</h2>\n\n        <div class=\"list-wrapper\">\n          <ul class=\"film-list__left\">\n            <li class=\"item-left\">\n              <span>Vote / Votes</span>\n            </li>\n            <li class=\"item-left\"><span>Popularity</span></li>\n            <li class=\"item-left\">\n              <span>Original Title </span>\n            </li>\n            <li class=\"item-left\"><span>Genre</span></li>\n          </ul>\n          <ul class=\"film-list__right\">\n            <li class=\"item-right item-right--vote\">\n              <span class=\"film-vote\">${Number(\n                vote_average.toFixed(1)\n              )}</span>/<span>${vote_count}</span>\n            </li>\n            <li class=\"item-right item-right--popularity\">\n              <span>${popularity.toFixed(1)}</span>\n            </li>\n            <li class=\"item-right\"><span>${original_title}</span></li>\n            <li class=\"item-right\"><span>${genresList.join(', ')}</span></li>\n          </ul>\n        </div>\n\n        <p class=\"film__about\">About</p>\n        <p class=\"film__about-description\">${overview} </p>\n        <div class=\"button-wrapper\">\n          <button class=\"btn-modal film-btn__watched is-active\">\n            add to Watched\n          </button>\n          <button class=\"btn-modal film-btn__queue\">add to queue</button>\n        </div>\n      </div>\n    </div>                \n  `;\n}\n","export const refs = {\n  pageNavigation: document.querySelector('.loadMore'),\n  pageBack: document.querySelector('.back'),\n  pageNext: document.querySelector('.next'),\n  pages: document.querySelector('.pages'),\n  searchInput: document.querySelector('.search-field'),\n  searchForm: document.querySelector('.search_form'),\n\n  header: document.querySelector('.header'),\n  //searchInput: document.querySelector('.input-wrapper'),\n  searcBox: document.querySelector('.input-wrapper'),\n  libraryBtn: document.querySelector('.nav_library'),\n  homeBtn: document.querySelector('.nav_home'),\n  watchedBtn: document.querySelector('.watched__btn'),\n  queueBtn: document.querySelector('.queue__btn'),\n\n  libraryBtn: document.querySelector('.nav_library'),\n  filmList: document.querySelector('.film-list'),\n  body: document.querySelector('.body'),\n  openModalBtn: document.querySelector('.footer-modal'),\n  closeModalBtn: document.querySelector('[data-teammodal-close]'),\n  modal: document.querySelector('[data-modal-team]'),\n  bckdrp: document.querySelector('.backdrop-team'),\n};\n","import { movieLink } from './linkapi';\nimport imageURL from '../images/placeholder.jpg';\n\nexport const getItemTemplateForStorage = ({\n  title,\n  poster_path,\n  release_date,\n  genres,\n  id,\n}) => {\n  const genresList = genres.map(genre => genre.name).join(', ');\n  const year = release_date ? release_date.substr(0, 4) : 'No release date';\n\n  const cardImg1x = poster_path\n    ? movieLink.getImageUrl(poster_path, 500)\n    : imageURL;\n\n  return `<li class=\"film-list__item\" id= ${id}>\n      <a href=\"\" class=\"film-list__link link\">\n          <div class=\"film-list__top-wrap\">\n              <picture>\n                  <source\n                  srcset=\"\n                     ${cardImg1x}  1x,\n                     ${cardImg1x}  2x \"\n                  media=\"(min-width: 1280px)\"\n                  />\n                  <source\n                  srcset=\"\n                    ${cardImg1x}  1x,\n                    ${cardImg1x}  2x\"\n                     media=\"(min-width: 768px)\"\n                  />\n                  <source\n                  srcset=\"\n                    ${cardImg1x}  1x,\n                    ${cardImg1x}  2x\"\n                     media=\"(max-width: 480px)\"\n                  />\n                  <img src=\"./images/film-1-mob-1x.jpg\" \n                  alt=\"film\" />\n              </picture>\n          </div>\n          <div class=\"film-data\">\n            <h2 class=\"film-data__title\">${title}</h2>\n            <div class=\"film-data__info\">\n              <p class=\"film-data__genres\">${genresList}</p>\n              <p class=\"film-data__year\">| ${year}</p>\n            </div>\n          </div>\n        </a>\n      </li>`;\n};\n","import { movieLink } from './linkapi';\nimport { getItemTemplateForStorage } from './getItemTemplateForStorage';\nimport { refs } from './refs';\n\nexport const renderFilmsOnMyLibrary = parseData => {\n  refs.filmList.innerHTML = '';\n\n  parseData.map(id => {\n    movieLink\n      .getMoviesById(id)\n      .then(({ title, poster_path, release_date, genres, id }) => {\n        const item = getItemTemplateForStorage({\n          title,\n          poster_path,\n          release_date,\n          genres,\n          id,\n        });\n        refs.filmList.insertAdjacentHTML('beforeend', item);\n      });\n  });\n};\n","import { refs } from './refs';\nimport { renderFilmsOnMyLibrary } from './renderFilmsOnMyLibrary';\nimport Notiflix from 'notiflix';\n\nexport const KEY_STORAGE_WATCHED = 'watched-films';\nexport const KEY_STORAGE_QUEUE = 'films-in-the-queue';\n\nconst watchedAddTextBtn = 'ADD TO WATCH';\nconst queueAddTextBtn = 'ADD TO QUEUE';\n\nconst watchedRemoveTextBtn = 'REMOVE FROM WATCH';\nconst queueRemoveTextBtn = 'REMOVE FROM QUEUE';\n\nconst textInEmptyContainer =\n  '<p class=\"text-in-empty-container\">Please return to the home page and choose a movie...</p>';\n\nlet formDataQueue = [];\nlet formDataWatched = [];\n\nexport const getDataFromStorage = key => {\n  const savedData = localStorage.getItem(key);\n  const parseData = JSON.parse(savedData);\n  return parseData || [];\n};\n\nconst getAllData = () => {\n  formDataWatched = getDataFromStorage(KEY_STORAGE_WATCHED);\n  formDataQueue = getDataFromStorage(KEY_STORAGE_QUEUE);\n};\n\nexport const getWatchedList = () => {\n  const getData = getDataFromStorage(KEY_STORAGE_WATCHED);\n  if (getData.length === 0) {\n    refs.filmList.innerHTML = textInEmptyContainer;\n    return;\n  }\n  renderFilmsOnMyLibrary(getData);\n};\n\nexport const getQueueList = () => {\n  const getData = getDataFromStorage(KEY_STORAGE_QUEUE);\n  if (getData.length === 0) {\n    refs.filmList.innerHTML = textInEmptyContainer;\n    return;\n  }\n  renderFilmsOnMyLibrary(getData);\n};\n\nconst addFilmInSutableList = (formData, id, key) => {\n  Notiflix.Notify.success('SUCCESS: added to list!');\n  formData.push(id);\n  localStorage.setItem(key, JSON.stringify(formData));\n};\n\nconst removeFromStorageList = (\n  clickableButton,\n  unclickableButton,\n  formData,\n  key,\n  id,\n  text\n) => {\n  clickableButton.textContent = `${text}`;\n  clickableButton.classList.remove('active-btn');\n\n  unclickableButton.removeAttribute('disabled');\n  unclickableButton.style.cursor = 'pointer';\n\n  const index = formData.findIndex(savedId => savedId === id);\n  formData.splice(index, 1);\n\n  localStorage.removeItem(key);\n  localStorage.setItem(key, JSON.stringify(formData));\n  Notiflix.Notify.success(`SUCCESS: deleted from list!`);\n};\n\nconst changesClickableBtn = (btn, text) => {\n  btn.textContent = `${text}`;\n  btn.classList.add('active-btn');\n};\n\nconst changesUnclickableBtn = btn => {\n  btn.setAttribute('disabled', 'true');\n  btn.style.cursor = 'not-allowed';\n};\n\nexport const addfilmInList = (btnWatched, btnQueue, id) => {\n  getAllData();\n  btnWatched.addEventListener('click', () => {\n    if (btnWatched.classList.contains('active-btn')) {\n      removeFromStorageList(\n        btnWatched,\n        btnQueue,\n        formDataWatched,\n        KEY_STORAGE_WATCHED,\n        id,\n        watchedAddTextBtn\n      );\n\n      if (refs.watchedBtn.classList.contains('active-liberty-btn')) {\n        renderFilmsOnMyLibrary(formDataWatched);\n      }\n\n      return;\n    }\n\n    addFilmInSutableList(formDataWatched, id, KEY_STORAGE_WATCHED);\n    changesClickableBtn(btnWatched, watchedRemoveTextBtn);\n    changesUnclickableBtn(btnQueue);\n  });\n\n  btnQueue.addEventListener('click', () => {\n    if (btnQueue.classList.contains('active-btn')) {\n      removeFromStorageList(\n        btnQueue,\n        btnWatched,\n        formDataQueue,\n        KEY_STORAGE_QUEUE,\n        id,\n        queueAddTextBtn\n      );\n      if (refs.queueBtn.classList.contains('active-liberty-btn')) {\n        renderFilmsOnMyLibrary(formDataQueue);\n      }\n      return;\n    }\n\n    addFilmInSutableList(formDataQueue, id, KEY_STORAGE_QUEUE);\n    changesClickableBtn(btnQueue, queueRemoveTextBtn);\n    changesUnclickableBtn(btnWatched);\n  });\n};\n\nrefs.watchedBtn.addEventListener('click', getWatchedList);\nrefs.queueBtn.addEventListener('click', getQueueList);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _get;\nvar _superPropBase = _interopRequireDefault(require(\"./_super_prop_base\"));\nfunction _get(target, property, receiver) {\n    return get(target, property, receiver);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction get(target1, property1, receiver1) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        get = Reflect.get;\n    } else {\n        get = function get(target, property, receiver) {\n            var base = (0, _superPropBase).default(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver || target);\n            }\n            return desc.value;\n        };\n    }\n    return get(target1, property1, receiver1);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _wrapNativeSuper;\nvar _construct = _interopRequireDefault(require(\"./_construct\"));\nvar _isNativeFunction = _interopRequireDefault(require(\"./_is_native_function\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _wrapNativeSuper(Class) {\n    return wrapNativeSuper(Class);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction wrapNativeSuper(Class1) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    wrapNativeSuper = function wrapNativeSuper(Class) {\n        if (Class === null || !(0, _isNativeFunction).default(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, _construct).default(Class, arguments, (0, _getPrototypeOf).default(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, _setPrototypeOf).default(Wrapper, Class);\n    };\n    return wrapNativeSuper(Class1);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.15.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", N = \"already-exists\", D = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class gt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction _t(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return _t(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst Tt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function At(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Tt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Rt(t.seconds),\n        nanos: Rt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Rt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Pt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Vt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Vt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Vt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Vt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? _t(this.nanoseconds, t.nanoseconds) : _t(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function $t(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return $t(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Dt(t) {\n    const e = At(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Vt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ft = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction xt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? $t(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function St(t, e) {\n    if (t === e) return !0;\n    const n = xt(t);\n    if (n !== xt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Dt(t).isEqual(Dt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = At(t.timestampValue), r = At(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Pt(t.bytesValue).isEqual(Pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Rt(t.geoPointValue.latitude) === Rt(e.geoPointValue.latitude) && Rt(t.geoPointValue.longitude) === Rt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Rt(t.integerValue) === Rt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Rt(t.doubleValue), r = Rt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], St);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !St(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction qt(t, e) {\n    return void 0 !== (t.values || []).find((t => St(t, e)));\n}\n\nfunction Ot(t, e) {\n    if (t === e) return 0;\n    const n = xt(t), r = xt(e);\n    if (n !== r) return _t(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return _t(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Rt(t.integerValue || t.doubleValue), r = Rt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return kt(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return kt(Dt(t), Dt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return _t(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Pt(t), r = Pt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = _t(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = _t(Rt(t.latitude), Rt(e.latitude));\n            if (0 !== n) return n;\n            return _t(Rt(t.longitude), Rt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ot(n[t], r[t]);\n                if (e) return e;\n            }\n            return _t(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ft && e === Ft) return 0;\n            if (t === Ft) return 1;\n            if (e === Ft) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = _t(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ot(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return _t(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction kt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return _t(t, e);\n    const n = At(t), r = At(e), s = _t(n.seconds, r.seconds);\n    return 0 !== s ? s : _t(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Mt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Ut(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Qt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction zt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!St(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Wt {}\n\nclass Gt extends Wt {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new Ht(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new te(t, n) : \"in\" /* Operator.IN */ === e ? new ee(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new ne(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Gt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new Jt(t, n) : new Xt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Ot(e, this.value)) : null !== e && xt(this.value) === xt(e) && this.matchesComparison(Ot(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Kt extends Wt {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.D = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Kt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.D || (this.D = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.D;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.F((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    F(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Yt(t, e) {\n    return t instanceof Gt ? function(t, e) {\n        return e instanceof Gt && t.op === e.op && t.field.isEqual(e.field) && St(t.value, e.value);\n    }(t, e) : t instanceof Kt ? function(t, e) {\n        if (e instanceof Kt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Yt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass Ht extends Gt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Jt extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = Zt(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Xt extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = Zt(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Zt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class te extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && qt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ee extends Gt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ne extends Gt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (qt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !qt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Gt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => qt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class se {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ie(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class oe {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new oe(t);\n    }\n    static min() {\n        return new oe(new Vt(0, 0));\n    }\n    static max() {\n        return new oe(new Vt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass ue {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || ae.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new ue(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new ue(this.comparator, this.root.remove(t, this.comparator).copy(null, null, ae.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new ce(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new ce(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new ce(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass ce {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass ae {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : ae.RED, this.left = null != r ? r : ae.EMPTY, \n        this.right = null != s ? s : ae.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new ae(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return ae.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return ae.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, ae.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, ae.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nae.EMPTY = null, ae.RED = !0, ae.BLACK = !1;\n\n// end LLRBEmptyNode\nae.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new ae(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass he {\n    constructor(t) {\n        this.comparator = t, this.data = new ue(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new le(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new le(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof he)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new he(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass le {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class fe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new fe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new he(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new fe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class de {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new de({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Bt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return St(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new de(Bt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class we {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new we(t, 0 /* DocumentType.INVALID */ , \n        /* version */ oe.min(), \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new we(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new we(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new we(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ oe.min(), \n        /* createTime */ oe.min(), de.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(oe.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = de.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = oe.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof we && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new we(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass me {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.S = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function pe(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new me(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass ye {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction _e(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ve(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function be(t) {\n    const e = I(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = _e(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new se(t)), e.q.push(new se(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new se(nt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = I(t);\n    if (!e.O) if (\"F\" /* LimitType.First */ === e.limitType) e.O = pe(e.path, e.collectionGroup, be(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of be(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new se(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Qt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Qt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = pe(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction Ie(t, e) {\n    e.getFirstInequalityField(), _e(t);\n    const n = t.filters.concat([ e ]);\n    return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Te(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ie(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Yt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!zt(t.startAt, e.startAt) && zt(t.endAt, e.endAt);\n    }(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction Ae(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Re {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Pe extends Re {}\n\n/** Transforms an array value via a union operation. */ class Ve extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class $e extends Re {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ne extends Re {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class De {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Fe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Fe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Fe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Fe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class xe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Se extends xe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class qe extends xe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Oe extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class ke extends xe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ce = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Le = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), Me = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Ue {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction je(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Be(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Qe(t, e) {\n    return je(t, e.toTimestamp());\n}\n\nfunction ze(t) {\n    return E(!!t), oe.fromTimestamp(function(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction We(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ge(t, e) {\n    return We(t.databaseId, e.path);\n}\n\nfunction Ke(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(cn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ye(t, e) {\n    return We(t.databaseId, e);\n}\n\nfunction He(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Je(t, e, n) {\n    return {\n        name: Ge(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Xe(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ke(t, e.found.name), r = ze(e.found.updateTime), s = e.found.createTime ? ze(e.found.createTime) : oe.min(), i = new de({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return we.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Ke(t, e.missing), r = ze(e.readTime);\n        return we.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ze(t, e) {\n    let n;\n    if (e instanceof Se) n = {\n        update: Je(t, e.key, e.value)\n    }; else if (e instanceof Oe) n = {\n        delete: Ge(t, e.key)\n    }; else if (e instanceof qe) n = {\n        update: Je(t, e.key, e.data),\n        updateMask: un(e.fieldMask)\n    }; else {\n        if (!(e instanceof ke)) return b();\n        n = {\n            verify: Ge(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ve) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof $e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Qe(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction tn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ye(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ye(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return on(Kt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: sn(t.field),\n                direction: en(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction en(t) {\n    return Ce[t];\n}\n\n// visible for testing\nfunction nn(t) {\n    return Le[t];\n}\n\nfunction rn(t) {\n    return Me[t];\n}\n\nfunction sn(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction on(t) {\n    return t instanceof Gt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Ut(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (Mt(t.value)) return {\n                unaryFilter: {\n                    field: sn(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: sn(t.field),\n                op: nn(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Kt ? function(t) {\n        const e = t.getFilters().map((t => on(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: rn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction un(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction cn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function an(t) {\n    return new Ue(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass hn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.W = 0, this.G = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.W = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.G = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);\n    }\n    X() {\n        null !== this.G && (this.G.skipDelay(), this.G = null);\n    }\n    cancel() {\n        null !== this.G && (this.G.cancel(), this.G = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass ln extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.C = r, this.Z = !1;\n    }\n    tt() {\n        if (this.Z) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.Z = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function fn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        writes: e.map((t => Ze(n.C, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function dn(t, e) {\n    const n = I(t), r = He(n.C) + \"/documents\", s = {\n        documents: e.map((t => Ge(n.C, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Xe(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function wn(t, e) {\n    const n = I(t), r = tn(n.C, Ee(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ke(t, e.name), s = ze(e.updateTime), i = e.createTime ? ze(e.createTime) : oe.min(), o = new de({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = we.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.C, t.document, void 0)));\n}\n\nasync function mn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = tn(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.C, Ee(e)), s = r.parent;\n    n.connection.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction yn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!pn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = an(t._databaseId), u = function(t, e, n, r) {\n            return new ln(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        pn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return pn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass gn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new gn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new gn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = pn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), pn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction vn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction bn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && En(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function En(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, _n))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function In(t) {\n    return t = ct(t, _n), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Tn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class Rn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return mn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new An(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Pn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new $n(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Pn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Vn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Vn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class $n extends Vn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new ye(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Pn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new $n(this.firestore, t, this._path);\n    }\n}\n\nfunction Nn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new $n(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new $n(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Dn(t, e) {\n    if (t = ct(t, _n), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Vn(t, \n    /* converter= */ null, function(t) {\n        return new ye(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction Fn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = gt.N()), st(\"doc\", \"path\", e), t instanceof _n) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Pn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Pn || t instanceof $n)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Pn(t.firestore, t instanceof $n ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function xn(t, e) {\n    return t = l(t), e = l(e), (t instanceof Pn || t instanceof $n) && (e instanceof Pn || e instanceof $n) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sn(t, e) {\n    return t = l(t), e = l(e), t instanceof Vn && e instanceof Vn && (t.firestore === e.firestore && Te(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class qn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new qn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new qn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class On {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function kn() {\n    return new On(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Cn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Ln {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return _t(this._lat, t._lat) || _t(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Un {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new qe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Se(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class jn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new qe(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Bn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Qn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.et(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    rt(t) {\n        return new Qn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.ot(t), r;\n    }\n    ut(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.rt({\n            path: n,\n            it: !1\n        });\n        return r.et(), r;\n    }\n    ct(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.rt({\n            path: void 0,\n            it: !0\n        });\n    }\n    at(t) {\n        return hr(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.lt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    et() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ot(this.path.get(t));\n    }\n    ot(t) {\n        if (0 === t.length) throw this.at(\"Document fields must not be empty\");\n        if (Bn(this.nt) && Mn.test(t)) throw this.at('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class zn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || an(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, n, r = !1) {\n        return new Qn({\n            nt: t,\n            methodName: e,\n            lt: n,\n            path: nt.emptyPath(),\n            it: !1,\n            ht: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Wn(t) {\n    const e = t._freezeSettings(), n = an(t._databaseId);\n    return new zn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Gn(t, e, n, r, s, i = {}) {\n    const o = t.ft(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    or(\"Data must be an object, but it was:\", o, r);\n    const u = sr(r, o);\n    let c, a;\n    if (i.merge) c = new fe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = ur(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            lr(t, s) || t.push(s);\n        }\n        c = new fe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Un(new de(u), c, a);\n}\n\nclass Kn extends Cn {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.at(`${this._methodName}() can only appear at the top level of your update data`) : t.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Kn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Yn(t, e, n) {\n    return new Qn({\n        nt: 3 /* UserDataSource.Argument */ ,\n        lt: e.settings.lt,\n        methodName: t._methodName,\n        it: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass Hn extends Cn {\n    _toFieldTransform(t) {\n        return new De(t.path, new Pe);\n    }\n    isEqual(t) {\n        return t instanceof Hn;\n    }\n}\n\nclass Jn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new Ve(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Xn extends Cn {\n    constructor(t, e) {\n        super(t), this.dt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Yn(this, t, \n        /*array=*/ !0), n = this.dt.map((t => rr(t, e))), r = new $e(n);\n        return new De(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Zn extends Cn {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ne(t.C, Ae(t.C, this.wt));\n        return new De(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function tr(t, e, n, r) {\n    const s = t.ft(1 /* UserDataSource.Update */ , e, n);\n    or(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = de.empty();\n    Et(r, ((t, r) => {\n        const u = ar(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.ut(u);\n        if (r instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = rr(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new fe(i);\n    return new jn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function er(t, e, n, r, s, i) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, n), u = [ ur(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(ur(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = de.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!lr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.ut(e);\n        if (n instanceof Kn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = rr(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new fe(a);\n    return new jn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function nr(t, e, n, r = !1) {\n    return rr(n, t.ft(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function rr(t, e) {\n    if (ir(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return or(\"Unsupported field value:\", e, t), sr(t, e);\n    if (t instanceof Cn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Bn(e.nt)) throw e.at(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.at(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.it && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.at(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = rr(s, e.ct(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ae(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Vt.fromDate(t);\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Vt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Vt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: je(e.C, n)\n            };\n        }\n        if (t instanceof Ln) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof qn) return {\n            bytesValue: Be(e.C, t._byteString)\n        };\n        if (t instanceof Pn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.at(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: We(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.at(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction sr(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Converts a Base64 encoded string to a binary string. */ (t) ? Et(t, ((t, r) => {\n        const s = rr(r, e.st(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction ir(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Vt || t instanceof Ln || t instanceof qn || t instanceof Pn || t instanceof Cn);\n}\n\nfunction or(t, e, n) {\n    if (!ir(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.at(t + \" a custom object\") : e.at(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function ur(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof On) return e._internalPath;\n    if (\"string\" == typeof e) return ar(t, e);\n    throw hr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const cr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function ar(t, e, n) {\n    if (e.search(cr) >= 0) throw hr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new On(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw hr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction hr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function lr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class fr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Pn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new dr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(pr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class dr extends fr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class wr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function mr(t, e) {\n    return t = l(t), e = l(e), t instanceof fr && e instanceof fr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof wr && e instanceof wr && (Sn(t.query, e.query) && vt(t.docs, e.docs, mr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function pr(t, e) {\n    return \"string\" == typeof e ? ar(t, e) : e instanceof On ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass yr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class gr extends yr {}\n\nfunction _r(t, e, ...n) {\n    let r = [];\n    e instanceof yr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Er)).length, n = t.filter((t => t instanceof vr)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class vr extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new vr(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return Lr(t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e));\n    }\n    _parse(t) {\n        const e = Wn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Cr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(kr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = kr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Cr(o, i), \n            u = nr(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Gt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function br(t, e, n) {\n    const r = e, s = pr(\"where\", t);\n    return vr._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Er extends yr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Er(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Kt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) Lr(n, t), n = Ie(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Vn(t.firestore, t.converter, Ie(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical OR\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for OR operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Ir(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"or\", t))), Er._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a {@link QueryCompositeFilterConstraint} that performs a logical AND\n * of all the provided {@link QueryFilterConstraint}s.\n *\n * @param queryConstraints - Optional. The {@link QueryFilterConstraint}s\n * for AND operation. These must be created with calls to {@link where},\n * {@link or}, or {@link and}.\n * @returns The created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Tr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => Ur(\"and\", t))), Er._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Ar extends gr {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Ar(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new se(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = _e(t);\n                    null !== n && Mr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new ye(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function Rr(t, e = \"asc\") {\n    const n = e, r = pr(\"orderBy\", t);\n    return Ar._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Pr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Pr(t, e, n);\n    }\n    _apply(t) {\n        return new Vn(t.firestore, t.converter, function(t, e, n) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Vr(t) {\n    return at(\"limit\", t), Pr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function $r(t) {\n    return at(\"limitToLast\", t), Pr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class Nr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Nr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Dr(...t) {\n    return Nr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction Fr(...t) {\n    return Nr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class xr extends gr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Or(t, this.type, this._docOrFields, this._inclusive);\n        return new Vn(t.firestore, t.converter, function(t, e) {\n            return new ye(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction qr(...t) {\n    return xr._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Or(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof fr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of be(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if ($t(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Qt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Wn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ve(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = nr(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Qt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction kr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ve(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new rt(r));\n    }\n    if (n instanceof Pn) return Ct(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Cr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */ function Lr(t, e) {\n    if (e.isInequality()) {\n        const n = _e(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = ge(t);\n        null !== s && Mr(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains\" /* Operator.ARRAY_CONTAINS */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"in\" /* Operator.IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains\" /* Operator.ARRAY_CONTAINS */ , \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Mr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction Ur(t, e) {\n    if (!(e instanceof vr || e instanceof Er)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction jr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Br extends class {\n    convertValue(t, e = \"none\") {\n        switch (xt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Rt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Pt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Ln(Rt(t.latitude), Rt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Dt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = At(t);\n        return new Vt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(cn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new qn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Pn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Qr(t) {\n    const e = yn((t = ct(t, Pn)).firestore), n = new Br(t.firestore);\n    return dn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new fr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function zr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Vn))._query);\n    const e = yn(t.firestore), n = new Br(t.firestore);\n    return wn(e, t._query).then((e => {\n        const r = e.map((e => new dr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new wr(t, r);\n    }));\n}\n\nfunction Wr(t, e, n) {\n    const r = jr((t = ct(t, Pn)).converter, e, n), s = Gn(Wn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return fn(yn(t.firestore), [ s.toMutation(t._key, Fe.none()) ]);\n}\n\nfunction Gr(t, e, n, ...r) {\n    const s = Wn((t = ct(t, Pn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(s, \"updateDoc\", t._key, e, n, r) : tr(s, \"updateDoc\", t._key, e);\n    return fn(yn(t.firestore), [ i.toMutation(t._key, Fe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Kr(t) {\n    return fn(yn((t = ct(t, Pn)).firestore), [ new Oe(t._key, Fe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Yr(t, e) {\n    const n = Fn(t = ct(t, $n)), r = jr(t.converter, e), s = Gn(Wn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return fn(yn(t.firestore), [ s.toMutation(n._key, Fe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Hr(t) {\n    const e = ct(t.firestore, _n), n = yn(e), r = new Br(e);\n    return new Rn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Jr(t, e) {\n    return Sn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Xr() {\n    return new Kn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Zr() {\n    return new Hn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function ts(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Jn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function es(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function ns(t) {\n    return new Zn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Wn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Fe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : tr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Fe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = ss(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Oe(e._key, Fe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction ss(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function is(t) {\n    const e = yn(t = ct(t, _n));\n    return new rs(t, (t => fn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class os {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await dn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Oe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new ke(n, this.precondition(n)));\n        })), await fn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = oe.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(oe.min()) ? Fe.exists(!1) : Fe.updateTime(e) : Fe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(oe.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Fe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Fe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const us = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass cs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.yt = n.maxAttempts, this.gt = new hn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.yt -= 1, this._t();\n    }\n    _t() {\n        this.gt.H((async () => {\n            const t = new os(this.datastore), e = this.vt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.bt(t);\n                }))));\n            })).catch((t => {\n                this.bt(t);\n            }));\n        }));\n    }\n    vt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    bt(t) {\n        this.yt > 0 && this.Et(t) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget((() => (this._t(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Et(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case N:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function as() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class hs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new hs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ls {\n    constructor() {\n        // The last promise in the queue.\n        this.It = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Tt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.At = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Rt = [], \n        // visible for testing\n        this.Pt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Vt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.$t = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Nt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.gt = new hn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Dt = () => {\n            const t = as();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.gt.X();\n        };\n        const t = as();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Dt);\n    }\n    get isShuttingDown() {\n        return this.At;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ft(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.xt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.At) {\n            this.At = !0, this.$t = t || !1;\n            const e = as();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Dt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ft(), this.At) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.xt((() => this.At && this.$t ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Tt.push(t), this.St())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async St() {\n        if (0 !== this.Tt.length) {\n            try {\n                await this.Tt[0](), this.Tt.shift(), this.gt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Tt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.gt.H((() => this.St()));\n        }\n    }\n    xt(t) {\n        const e = this.It.then((() => (this.Vt = !0, t().catch((t => {\n            this.Pt = t, this.Vt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Vt = !1, t))))));\n        return this.It = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ft(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Nt.indexOf(t) > -1 && (e = 0);\n        const r = hs.createAndSchedule(this, t, e, n, (t => this.qt(t)));\n        return this.Rt.push(r), r;\n    }\n    Ft() {\n        this.Pt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ot() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.It, await t;\n        } while (t !== this.It);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    kt(t) {\n        for (const e of this.Rt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Ct(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ot().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Rt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Rt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ot();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Lt(t) {\n        this.Nt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    qt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Rt.indexOf(t);\n        this.Rt.splice(e, 1);\n    }\n}\n\nclass fs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Wn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = ss(t, this._firestore), n = new Br(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new fr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new fr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = ss(t, this._firestore), s = jr(r.converter, e, n), i = Gn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = ss(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof On ? er(this._dataReader, \"Transaction.update\", s._key, e, n, r) : tr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = ss(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ds(t, e, n) {\n    const r = yn(t = ct(t, _n)), s = Object.assign(Object.assign({}, us), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new cs(new ls, r, s, (n => e(new fs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new _n(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.0\", \"\"), r(\"firestore-lite\", \"3.8.0\", \"__BUILD_TARGET__\");\n\nexport { Tn as AggregateField, An as AggregateQuerySnapshot, qn as Bytes, $n as CollectionReference, Pn as DocumentReference, fr as DocumentSnapshot, On as FieldPath, Cn as FieldValue, _n as Firestore, U as FirestoreError, Ln as GeoPoint, Vn as Query, Er as QueryCompositeFilterConstraint, gr as QueryConstraint, dr as QueryDocumentSnapshot, xr as QueryEndAtConstraint, vr as QueryFieldFilterConstraint, Pr as QueryLimitConstraint, Ar as QueryOrderByConstraint, wr as QuerySnapshot, Nr as QueryStartAtConstraint, Vt as Timestamp, fs as Transaction, rs as WriteBatch, Yr as addDoc, Jr as aggregateQuerySnapshotEqual, Tr as and, es as arrayRemove, ts as arrayUnion, Nn as collection, Dn as collectionGroup, En as connectFirestoreEmulator, Kr as deleteDoc, Xr as deleteField, Fn as doc, kn as documentId, qr as endAt, Sr as endBefore, Hr as getCount, Qr as getDoc, zr as getDocs, bn as getFirestore, ns as increment, vn as initializeFirestore, Vr as limit, $r as limitToLast, Ir as or, Rr as orderBy, _r as query, Sn as queryEqual, xn as refEqual, ds as runTransaction, Zr as serverTimestamp, Wr as setDoc, p as setLogLevel, mr as snapshotEqual, Fr as startAfter, Dr as startAt, In as terminate, Gr as updateDoc, br as where, is as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","import { doc } from 'firebase/firestore/lite';\n\n// export function getVideoTemplates(key) {\n//   return `\n//    <iframe class=\"video\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${key}\"\n//   title=\"YouTube video player\" frameborder=\"0\"\n//   allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//   allowfullscreen></iframe>\n//    `;\n// }\n\n// const id = '877269';\n\nexport function getFetchVideo(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/videos?api_key=0bf9a11da9d083f4751315d07dcbd89b`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n\n    return res.json();\n  });\n}\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).basicLightbox=e()}}((function(){return function e(n,t,o){function r(c,u){if(!t[c]){if(!n[c]){var s=\"function\"==typeof require&&require;if(!u&&s)return s(c,!0);if(i)return i(c,!0);var a=new Error(\"Cannot find module '\"+c+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,(function(e){return r(n[c][1][e]||e)}),l,l.exports,e,n,t,o)}return t[c].exports}for(var i=\"function\"==typeof require&&require,c=0;c<o.length;c++)r(o[c]);return r}({1:[function(e,n,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=t.visible=void 0;var o=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=document.createElement(\"div\");return t.innerHTML=e.trim(),!0===n?t.children:t.firstChild},r=function(e,n){var t=e.children;return 1===t.length&&t[0].tagName===n},i=function(e){return null!=(e=e||document.querySelector(\".basicLightbox\"))&&!0===e.ownerDocument.body.contains(e)};t.visible=i;t.create=function(e,n){var t=function(e,n){var t=o('\\n\\t\\t<div class=\"basicLightbox '.concat(n.className,'\">\\n\\t\\t\\t<div class=\"basicLightbox__placeholder\" role=\"dialog\"></div>\\n\\t\\t</div>\\n\\t')),i=t.querySelector(\".basicLightbox__placeholder\");e.forEach((function(e){return i.appendChild(e)}));var c=r(i,\"IMG\"),u=r(i,\"VIDEO\"),s=r(i,\"IFRAME\");return!0===c&&t.classList.add(\"basicLightbox--img\"),!0===u&&t.classList.add(\"basicLightbox--video\"),!0===s&&t.classList.add(\"basicLightbox--iframe\"),t}(e=function(e){var n=\"string\"==typeof e,t=e instanceof HTMLElement==1;if(!1===n&&!1===t)throw new Error(\"Content must be a DOM element/node or string\");return!0===n?Array.from(o(e,!0)):\"TEMPLATE\"===e.tagName?[e.content.cloneNode(!0)]:Array.from(e.children)}(e),n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==(e=Object.assign({},e)).closable&&(e.closable=!0),null==e.className&&(e.className=\"\"),null==e.onShow&&(e.onShow=function(){}),null==e.onClose&&(e.onClose=function(){}),\"boolean\"!=typeof e.closable)throw new Error(\"Property `closable` must be a boolean\");if(\"string\"!=typeof e.className)throw new Error(\"Property `className` must be a string\");if(\"function\"!=typeof e.onShow)throw new Error(\"Property `onShow` must be a function\");if(\"function\"!=typeof e.onClose)throw new Error(\"Property `onClose` must be a function\");return e}(n)),c=function(e){return!1!==n.onClose(u)&&function(e,n){return e.classList.remove(\"basicLightbox--visible\"),setTimeout((function(){return!1===i(e)||e.parentElement.removeChild(e),n()}),410),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))};!0===n.closable&&t.addEventListener(\"click\",(function(e){e.target===t&&c()}));var u={element:function(){return t},visible:function(){return i(t)},show:function(e){return!1!==n.onShow(u)&&function(e,n){return document.body.appendChild(e),setTimeout((function(){requestAnimationFrame((function(){return e.classList.add(\"basicLightbox--visible\"),n()}))}),10),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))},close:c};return u}},{}]},{},[1])(1)}));","import { movieLink } from '../linkapi';\nimport { getMovieById } from './getMovieById';\nimport {\n  addfilmInList,\n  getDataFromStorage,\n  KEY_STORAGE_WATCHED,\n  KEY_STORAGE_QUEUE,\n} from '../localStorage';\nimport { getFetchVideo } from './video';\nimport { getVideoTemplates } from './video';\n\nimport * as basicLightbox from 'basiclightbox';\nconst basicLightbox = require('basiclightbox');\n\nconst refsO = {\n  body: document.querySelector('body'),\n  listFilm: document.querySelector('.film-list'),\n  filmCardItem: document.querySelector('.film-list__item'),\n  backdrop: document.querySelector('.js-backdrop'),\n  // modalClose: document.querySelector('.js-btn-close-modal'),\n  filmListCard: document.querySelector('.film-list__item'),\n  movieCard: document.querySelector('.js-main-modal'),\n  teaserBtnPlay: null,\n};\n\nrefsO.listFilm.addEventListener('click', onClickItem);\n// refsO.modalClose.addEventListener('click', closeMainModal);\nrefsO.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onClickItem(e) {\n  e.preventDefault();\n  if (e.currentTarget === e.target) {\n    return;\n  }\n  const parent = e.target.closest('li');\n  let { id } = parent;\n  // console.log('li', id);\n\n  movieLink\n    .getMoviesById(id)\n    .then(data => {\n      const { genres } = data;\n      const render = getMovieById(data, genres);\n      return render;\n    })\n    .then(render => {\n      refsO.movieCard.innerHTML = '';\n      refsO.movieCard.insertAdjacentHTML('beforeend', render);\n      const modalClose = document.querySelector('.js-btn-close-modal');\n      modalClose.addEventListener('click', closeMainModal);\n\n      const btnWatched = document.querySelector('.film-btn__watched');\n      const btnQueue = document.querySelector('.film-btn__queue');\n      addfilmInList(btnWatched, btnQueue, id);\n\n      const dataStorageWatched = getDataFromStorage(KEY_STORAGE_WATCHED);\n      const dataStorageQueue = getDataFromStorage(KEY_STORAGE_QUEUE);\n\n      if (dataStorageWatched.includes(id)) {\n        btnWatched.textContent = 'remove from watched';\n        btnWatched.classList.add('active-btn');\n        btnQueue.setAttribute('disabled', 'true');\n        btnQueue.style.cursor = 'not-allowed';\n      }\n\n      if (dataStorageQueue.includes(id)) {\n        btnQueue.textContent = 'remove from queue';\n        btnQueue.classList.add('active-btn');\n        btnWatched.setAttribute('disabled', 'true');\n        btnWatched.style.cursor = 'not-allowed';\n      }\n\n      refsO.teaserBtnPlay = document.querySelector('#teaser');\n    })\n    .catch(err => console.log(err));\n\n  getFetchVideo(id)\n    .then(({ results }) => {\n      const teaser = results.map(video => video);\n\n      //fix no teaser\n      if (results.length == 0) {\n        refsO.teaserBtnPlay.style.display = 'none';\n        return;\n      }\n      //fix no teaser\n\n      const treiler = teaser[teaser.length - 1];\n\n      let terailerKey = treiler.key;\n\n      return terailerKey;\n    })\n    .then(terailerKey => {\n      const trailerRend = `\n    <iframe class=\"video\" width=\"800\" height=\"600\" src=\"https://www.youtube.com/embed/${terailerKey}\"\n    title=\"YouTube video player\" frameborder=\"0\"\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    allowfullscreen></iframe>`;\n\n      const instance = basicLightbox.create(trailerRend);\n      refsO.teaserBtnPlay.addEventListener('click', () => {\n        instance.show();\n      });\n    })\n    .catch(err => console.log(err));\n\n  showMainModal();\n}\n\nfunction showMainModal() {\n  window.addEventListener('keydown', onEscKeyClick);\n  refsO.backdrop.classList.remove('is-hidden');\n  refsO.body.classList.toggle('no-scroll');\n  refsO.body.classList.add('no-scroll');\n}\n\nfunction closeMainModal() {\n  window.removeEventListener('keydown', onEscKeyClick);\n  refsO.backdrop.classList.add('is-hidden');\n  refsO.body.classList.remove('no-scroll');\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget !== e.target) {\n    return;\n  }\n\n  closeMainModal();\n}\n\nfunction onEscKeyClick(e) {\n  if (e.code === 'Escape') {\n    closeMainModal();\n  }\n}\n","import { refs } from '../refs';\n\nrefs.openModalBtn.addEventListener('click', toggleModalOpen);\nrefs.closeModalBtn.addEventListener('click', closeModal);\nrefs.bckdrp.addEventListener('click', closeModalbyWindow);\n\nfunction toggleModalOpen() {\n  refs.modal.classList.remove('is-hidden');\n  refs.body.style.overflow = 'hidden';\n}\n\nfunction closeModal() {\n  refs.modal.classList.add('is-hidden');\n  refs.body.style.overflow = '';\n}\n\nwindow.addEventListener('keydown', closeEsc);\nfunction closeEsc(e) {\n  if (e.key === 'Escape') {\n    closeModal(e);\n  }\n}\n\nfunction closeModalbyWindow() {\n  refs.modal.classList.add('is-hidden');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  const emulator = getDefaultEmulatorHostnameAndPort('database');\n  if (emulator) {\n    connectDatabaseEmulator(db, ...emulator);\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getAnalytics, getFirestore } from 'firebase/firestore/lite';\nimport { getDatabase, ref, set, get } from 'firebase/database';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCjQyny8SgADYEvs3IyK-2He7uJP3zOYC0',\n  authDomain: 'teamprojjs6.firebaseapp.com',\n  databaseURL:\n    'https://teamprojjs6-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'teamprojjs6',\n  storageBucket: 'teamprojjs6.appspot.com',\n  messagingSenderId: '779869491174',\n  appId: '1:779869491174:web:f832ac9eee035fa4f41027',\n  measurementId: 'G-8X92MK3MYD',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// const db = getFirestore(app);\n// console.log('FIREBASE', db);\n\nconst dbRef = ref(getDatabase());\n// console.log('dbRef', dbRef);\n","/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // NOTIFY: Default Settings: begin\n  var typesNotify = {\r\n    Success: 'Success',\r\n    Failure: 'Failure',\r\n    Warning: 'Warning',\r\n    Info: 'Info',\r\n  };\r\n  var newNotifySettings;\r\n  var notifySettings = {\r\n    wrapID: 'NotiflixNotifyWrap', // can not customizable\r\n    overlayID: 'NotiflixNotifyOverlay', // can not customizable\r\n    width: '280px',\r\n    position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 110,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\r\n    fontAwesomeIconSize: '34px',\r\n\n    success: {\r\n      background: '#32c682',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-success',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-check-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n\n    failure: {\r\n      background: '#ff5549',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-failure',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-times-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n\n    warning: {\r\n      background: '#eebf31',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-warning',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n\n    info: {\r\n      background: '#26c0d3',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-info',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-info-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n  };\n  // NOTIFY: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // NOTIFY: Get Internal CSS Codes: begin\n  var notifyGetInternalCSSCodes = function () {\r\n    var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\r\n    return notifyCSS || null;\r\n  };\n  // NOTIFY: Get Internal CSS Codes: end\n\n  // NOTIFY: Create: begin\n  var notifyCreateCounter = 0;\r\n  var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newNotifySettings) {\r\n      Notiflix.Notify.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\r\n\n    // check callbackOrOptions and options: begin\r\n    if ((typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof callbackOrOptions === 'object') {\r\n        newOptions = callbackOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\r\n    }\r\n    // check callbackOrOptions and options: end\r\n\n    // notify type\r\n    var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\r\n\n    // notify counter\r\n    notifyCreateCounter++;\r\n\n    // check the message: begin\r\n    if (typeof message !== 'string') {\r\n      message = 'Notiflix ' + notifyType;\r\n    }\r\n    // check the message: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newNotifySettings.plainText) {\r\n      message = commonGetPlaintext(message); // message plain text\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\r\n    if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\r\n      // extend settings for error massege\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, { closeButton: true, messageMaxLength: 150 });\r\n      // error message\r\n      message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\r\n    }\r\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\r\n\n    // check message max length: begin\r\n    if (message.length > newNotifySettings.messageMaxLength) {\r\n      message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\r\n    }\r\n    // check message max length: end\r\n\n    // font awesome icon style: begin\r\n    if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\r\n      theType.fontAwesomeIconColor = theType.background;\r\n    }\r\n    // font awesome icon style: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newNotifySettings.cssAnimation) {\r\n      newNotifySettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // notify wrap: begin\r\n    var ntflxNotifyWrap = window.document.getElementById(notifySettings.wrapID) || window.document.createElement('div');\r\n    ntflxNotifyWrap.id = notifySettings.wrapID;\r\n    ntflxNotifyWrap.style.width = newNotifySettings.width;\r\n    ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\r\n    ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\r\n\n    // wrap position: begin\r\n    if (newNotifySettings.position === 'center-center') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n      ntflxNotifyWrap.classList.add('nx-flex-center-center');\r\n      ntflxNotifyWrap.style.maxHeight = 'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\r\n      ntflxNotifyWrap.style.display = 'flex';\r\n      ntflxNotifyWrap.style.flexWrap = 'wrap';\r\n      ntflxNotifyWrap.style.flexDirection = 'column';\r\n      ntflxNotifyWrap.style.justifyContent = 'center';\r\n      ntflxNotifyWrap.style.alignItems = 'center';\r\n      ntflxNotifyWrap.style.pointerEvents = 'none';\r\n    } else if (newNotifySettings.position === 'center-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'center-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'right-bottom') {\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n    } else if (newNotifySettings.position === 'left-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    } else if (newNotifySettings.position === 'left-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n    } else { // 'right-top' or else\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    }\r\n    // wrap position: end\r\n\n    // if background overlay is true: begin\r\n    if (newNotifySettings.backOverlay) {\r\n      var ntflxNotifyOverlay = window.document.getElementById(notifySettings.overlayID) || window.document.createElement('div');\r\n      ntflxNotifyOverlay.id = notifySettings.overlayID;\r\n      ntflxNotifyOverlay.style.width = '100%';\r\n      ntflxNotifyOverlay.style.height = '100%';\r\n      ntflxNotifyOverlay.style.position = 'fixed';\r\n      ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\r\n      ntflxNotifyOverlay.style.left = 0;\r\n      ntflxNotifyOverlay.style.top = 0;\r\n      ntflxNotifyOverlay.style.right = 0;\r\n      ntflxNotifyOverlay.style.bottom = 0;\r\n      ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\r\n      ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\r\n      ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + 'ms' : '';\r\n\n      if (!window.document.getElementById(notifySettings.overlayID)) {\r\n        window.document.body.appendChild(ntflxNotifyOverlay);\r\n      }\r\n    }\r\n    // if background overlay is true: end\r\n\n    if (!window.document.getElementById(notifySettings.wrapID)) {\r\n      window.document.body.appendChild(ntflxNotifyWrap);\r\n    }\r\n    // notify wrap: end\r\n\n    // notify content: begin\r\n    var ntflxNotify = window.document.createElement('div');\r\n    ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\r\n    ntflxNotify.className = newNotifySettings.className + ' ' + theType.childClassName + ' ' + (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') + ' ' + (newNotifySettings.useIcon ? 'nx-with-icon' : '') + ' nx-' + newNotifySettings.cssAnimationStyle + ' ' + (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function' ? 'nx-with-close-button' : '') + ' ' + (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') + ' ' + (newNotifySettings.clickToClose ? 'nx-notify-click-to-close' : '');\r\n    ntflxNotify.style.fontSize = newNotifySettings.fontSize;\r\n    ntflxNotify.style.color = theType.textColor;\r\n    ntflxNotify.style.background = theType.background;\r\n    ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\r\n    ntflxNotify.style.pointerEvents = 'all';\r\n\n    // rtl: begin\r\n    if (newNotifySettings.rtl) {\r\n      ntflxNotify.setAttribute('dir', 'rtl');\r\n      ntflxNotify.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // font-family: begin\r\n    ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\r\n    // font-family: end\r\n\n    // use css animation: begin\r\n    if (newNotifySettings.cssAnimation) {\r\n      ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\r\n    }\r\n    // use css animation: end\r\n\n    // close button element: begin\r\n    var closeButtonHTML = '';\r\n    if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n      closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\r\n    }\r\n    // close buttpon element: end\r\n\n    // use icon: begin\r\n    if (newNotifySettings.useIcon) {\r\n      // use font awesome\r\n      if (newNotifySettings.useFontAwesome) {\r\n        ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + '; font-size:' + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + ' ' + (newNotifySettings.fontAwesomeIconStyle === 'shadow' ? 'nx-message-icon-fa-shadow' : 'nx-message-icon-fa-basic') + '\"></i><span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n      // use notiflix icon\r\n      else {\r\n        var svgIcon = '';\r\n        if (notifyType === typesNotify.Success) {  // success\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Failure) { // failure\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Warning) { // warning\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Info) { // info\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\r\n        }\r\n        ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n    }\r\n    // without icon\r\n    else {\r\n      ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n    }\r\n    // use icon: end\r\n    // notify content: end\r\n\n    // notify append or prepend: begin\r\n    if (newNotifySettings.position === 'left-bottom' || newNotifySettings.position === 'right-bottom') { // the new one will be first\r\n      var notifyWrap = window.document.getElementById(notifySettings.wrapID);\r\n      notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\r\n    } else {\r\n      window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\r\n    }\r\n    // notify append or prepend: end\r\n\n    // remove by timeout or click: begin\r\n    var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\r\n    if (eachNotifyElement) {\r\n      // timeout variables\r\n      var timeoutHide;\r\n      var timeoutRemove;\r\n\n      // hide notify elm and hide overlay: begin\r\n      var hideNotifyElementsAndOverlay = function () {\r\n        eachNotifyElement.classList.add('nx-remove');\r\n        var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n        if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\r\n          removeOverlay.classList.add('nx-remove');\r\n        }\r\n        clearTimeout(timeoutHide);\r\n      };\r\n      // hide notify elm and hide overlay: end\r\n\n      // remove notify elm and wrapper: begin\r\n      var removeNotifyElmentsAndWrapper = function () {\r\n        if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\r\n          eachNotifyElement.parentNode.removeChild(eachNotifyElement);\r\n        }\r\n        if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) { // if childs count === 0 remove wrap\r\n          ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\r\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n          if (removeOverlay && removeOverlay.parentNode !== null) {\r\n            removeOverlay.parentNode.removeChild(removeOverlay);\r\n          }\r\n        }\r\n        clearTimeout(timeoutRemove);\r\n      };\r\n      // remove notify elm and wrapper: end\r\n\n      // if has close button and callbackOrOptions is not a function: begin\r\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        var closeButtonElm = window.document.getElementById(ntflxNotify.id).querySelector('span.nx-close-button');\r\n        closeButtonElm.addEventListener('click', function () {\r\n          hideNotifyElementsAndOverlay();\r\n          var clickToCloseTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(clickToCloseTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if has close button and callbackOrOptions is not a function: end\r\n\n      // if callbackOrOptions or click to close: begin\r\n      if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\r\n        eachNotifyElement.addEventListener('click', function () {\r\n          if (typeof callbackOrOptions === 'function') {\r\n            callbackOrOptions();\r\n          }\r\n          hideNotifyElementsAndOverlay();\r\n          var callbackTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(callbackTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if callbackOrOptions or click to close: end\r\n\n      // else auto remove: begin\r\n      if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        // auto remove: begin\r\n        var autoRemove = function () {\r\n          timeoutHide = setTimeout(function () {\r\n            hideNotifyElementsAndOverlay();\r\n          }, newNotifySettings.timeout);\r\n          timeoutRemove = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n          }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\r\n        };\r\n        autoRemove();\r\n        // auto remove: end\r\n\n        // pause auto remove: begin\r\n        if (newNotifySettings.pauseOnHover) {\r\n          eachNotifyElement.addEventListener('mouseenter', function () {\r\n            eachNotifyElement.classList.add('nx-paused');\r\n            clearTimeout(timeoutHide);\r\n            clearTimeout(timeoutRemove);\r\n          });\r\n          eachNotifyElement.addEventListener('mouseleave', function () {\r\n            eachNotifyElement.classList.remove('nx-paused');\r\n            autoRemove();\r\n          });\r\n        }\r\n        // pause auto remove: end\r\n      }\r\n      // else auto remove: end\r\n    }\r\n    // remove by timeout or click: end\r\n\n    // notify - show only the last one: begin\r\n    if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\r\n      var allNotifyElmNotTheLastOne = window.document.querySelectorAll('[id^=' + newNotifySettings.ID + '-]:not([id=' + newNotifySettings.ID + '-' + notifyCreateCounter + '])');\r\n      for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\r\n        var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\r\n        if (eachNotifyElmNotLastOne.parentNode !== null) {\r\n          eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\r\n        }\r\n      }\r\n    }\r\n    // notify - show only the last one: end\r\n\n    // extend new settings with the backup settings\r\n    newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\r\n\n  };\n  // NOTIFY: Create: end\n\n  var Notiflix = {\n    Notify: {\r\n      // Init\r\n      init: function (userNotifyOptions) {\r\n        // extend options\r\n        newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userNotifyExtendOptions) {\r\n        // if initialized already\r\n        if (newNotifySettings) {\r\n          newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Notify module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Success\r\n      success: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\r\n      },\r\n      // Failure\r\n      failure: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\r\n      },\r\n      // Warning\r\n      warning: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\r\n      },\r\n      // Info\r\n      info: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Notify: Notiflix.Notify });\n  } else {\n    return { Notify: Notiflix.Notify };\n  }\n\n});","import { movieLink } from './linkapi';\nimport imageURL from '../images/placeholder.jpg'\n\n\nexport function getItemTemplate({\n    title,\n    poster_path,\n    release_date,\n    genre_ids,\n    id,\n    \n  }, genres) {\n\n    const GenresList = genres.reduce ((acc, element) => {\n      if (genre_ids.includes(element.id)){ acc.push(element.name) }     \n      return acc;\n   }, []); \n\n    const year = (release_date) ? release_date.substr (0, 4) : \"No release date\";\n    const cardImg1x = (poster_path) ? movieLink.getImageUrl(poster_path, 500) : imageURL;\n    // const cardImg2x = (poster_path) ? movieLink.getImageUrl(poster_path, 500) : imageURL;\n    const filmGenres = (GenresList.length) ? GenresList : ['No genre'];\n      \n\n    return `<li class=\"film-list__item\" id= ${id}>\n    <a href=\"\" class=\"film-list__link link\">\n        <div class=\"film-list__top-wrap\">\n            <picture>\n                <source\n                srcset=\"\n                   ${cardImg1x}  1x,\n                   ${cardImg1x}  2x \"\n                media=\"(min-width: 1280px)\"\n                />\n                <source\n                srcset=\"\n                  ${cardImg1x}  1x,\n                  ${cardImg1x}  2x\"\n                   media=\"(min-width: 768px)\"\n                />\n                <source\n                srcset=\"\n                  ${cardImg1x}  1x,\n                  ${cardImg1x}  2x\"\n                   media=\"(max-width: 480px)\"\n                />\n                <img src=\"${cardImg1x}\"\n                loading=\"lazy\" \n                alt=\"${title}\" />\n            </picture>\n        </div>\n        <div class=\"film-data\">\n          <h2 class=\"film-data__title\">${title}</h2>\n          <div class=\"film-data__info\">\n            <p class=\"film-data__genres\">${[...filmGenres]}</p>\n            <p class=\"film-data__year\">| ${year}</p>\n          </div>\n        </div>\n      </a>\n    </li>`;\n  }","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getItemTemplate } from './getItemTemplate';\nimport { movieLink } from './linkapi';\n\n\nconst refs = {\n  filmList: document.querySelector('.film-list'),\n};\n\nexport async function renderFilms(responce, genres) {\n\n  refs.filmList.innerHTML = \"\";\n\n  let films = [];\n\n   films = responce.map (element => getItemTemplate(element, genres));\n   refs.filmList.insertAdjacentHTML('beforeend', films.join(''));\n  \n}","import { trendMovies, searchMoies } from './requests';\nimport { refs } from './refs';\n\nlet qwery = '';\nlet actualPage = 0;\n\nexport function pagination(currentPage, totalPage, qweryWord) {\n  refs.pageNavigation.style.display = 'none';\n  refs.pageBack.style.display = 'none';\n  refs.pageNext.style.display = 'none';\n  const pages = [];\n  actualPage = currentPage;\n  refs.pages.innerHTML = '';\n  qwery = qweryWord;\n  makeArray(pages, currentPage, totalPage);\n\n  if (totalPage > 1) {\n    refs.pageNavigation.style.display = 'flex';\n    navigationRender(pages, currentPage, totalPage);\n  }\n\n  if (totalPage > 2 && currentPage !== totalPage)\n    refs.pageNext.style.display = 'flex';\n  if (totalPage > 2 && currentPage > 1) refs.pageBack.style.display = 'flex';\n\n  function navigationRender(pages, pageCur, pageTot) {\n    const markupPages = pages\n      .map(page => makePage(page, pageCur, pageTot))\n      .join('');\n    refs.pages.insertAdjacentHTML('beforeend', markupPages);\n  }\n\n  function makePage(pageNum, pageCur, pageTot) {\n    let current = '';\n    let nav = pageNum;\n    let pageClass = 'page';\n\n    if (Number(pageNum) === Number(pageCur)) current = ' current';\n    if (pageNum === '...') pageClass = 'points';\n\n    return `<div class=\"${\n      pageClass + current\n    }\" data-nav=\"${nav}\">${pageNum}</div>`;\n  }\n\n  function makeArray(pages, pageCur, pageTot) {\n    if (pageTot < 10) {\n      fillArray(0, pageTot - 1, 1);\n      return pages;\n    } else {\n      pages[0] = 1;\n      pages[8] = pageTot;\n\n      if (pageCur > 5) {\n        pages[1] = '...';\n      } else {\n        pages[1] = 2;\n      }\n      if (pageCur < pageTot - 4) {\n        pages[7] = '...';\n      } else {\n        pages[7] = pageTot - 1;\n      }\n      if (pageCur > 5 && pageCur < pageTot - 3) fillArray(2, 6, pageCur - 2);\n      if (pageCur < 6) fillArray(2, 6, 3);\n      if (pageCur > pageTot - 4) fillArray(2, 6, pageTot - 6);\n      return pages;\n    }\n  }\n\n  function fillArray(posBeg, posEnd, startVal) {\n    for (let i = posBeg; i <= posEnd; i++) {\n      pages[i] = startVal;\n      startVal++;\n    }\n  }\n}\n\nexport function navigation(event) {\n  let nav = event.target.dataset.nav;\n  if (event.target.dataset.nav === '...') return;\n  if (event.target.nodeName.toUpperCase() === 'SVG')\n    nav = event.target.parentNode.dataset.nav;\n  if (event.target.nodeName.toUpperCase() === 'USE')\n    nav = event.target.parentNode.parentNode.dataset.nav;\n\n  switch (nav) {\n    case 'next':\n      switchQwery(qwery, actualPage + 1);\n      break;\n\n    case 'back':\n      switchQwery(qwery, actualPage - 1);\n      break;\n\n    default:\n      switchQwery(qwery, nav);\n  }\n\n  function switchQwery(qwery, numPage) {\n    switch (qwery) {\n      case 'trending':\n        trendMovies(numPage);\n        break;\n\n      default:\n        searchMoies(qwery, numPage);\n    }\n  }\n}\n","import { movieLink } from './linkapi';\nimport { pagination, navigation } from './pagination';\nimport { renderFilms } from './renderFilms';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\n\nlet movies = [];\nlet genres = [];\n\nexport async function trendMovies(pageNum) {\n  await movieLink\n    .getMovies(pageNum)\n    .then(response => (movies = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (movies.length === 0) return;\n  await movieLink\n    .getGenresList()\n    .then(response => (genres = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (genres.length === 0) return;\n  renderFilms(movies.results, genres);\n  if (pageNum < 4) window.scrollTo(0, 0);\n  else window.scrollTo(0, 216);\n  pagination(movies.page, movies.total_pages, 'trending');\n}\n\nexport async function searchMoies(searchWord, pageNum) {\n  await movieLink\n    .getMoviesByWord(searchWord, pageNum)\n    .then(response => (movies = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (movies.length === 0) return;\n  await movieLink\n    .getGenresList()\n    .then(response => (genres = response))\n    .catch(error =>\n      Notiflix.Notify.failure(\n        `Some broblems with api or query! Err: ${error}`,\n        {\n          cssAnimationStyle: 'from-top',\n          position: 'center-center',\n          borderRadius: '25px',\n          clickToClose: true,\n        }\n      )\n    );\n  if (genres.length === 0) return;\n  if (movies.total_results === 0)\n    return Notiflix.Notify.failure(\n      `Sorry, there are no movies matching your search query. Please try again.`,\n      {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n  if (movies.page === 1)\n    Notiflix.Notify.success(\n      `Hooray! We found ${movies.total_results} movies.`,\n      {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n\n  renderFilms(movies.results, genres);\n  if (pageNum < 4) window.scrollTo(0, 0);\n  else window.scrollTo(0, 216);\n  pagination(movies.page, movies.total_pages, searchWord);\n}\n\ntrendMovies(1);\nrefs.pageNavigation.addEventListener('click', navigation, false);\nrefs.searchInput.focus();\nrefs.searchForm.addEventListener('submit', event => {\n  event.preventDefault();\n  searchRequest();\n});\n\nfunction searchRequest() {\n  refs.searchInput.blur();\n  const movieRequest = refs.searchInput.value.trimRight().trimLeft();\n  if (!/^[A-ZА-ЯЁЇІЄ\\s]+$/i.test(movieRequest)) {\n    Notiflix.Notify.failure(\n      `Sorry, there are no moies matching your search query. Please try again.`,\n      {\n        cssAnimationStyle: 'from-top',\n        position: 'center-center',\n        borderRadius: '25px',\n        clickToClose: true,\n      }\n    );\n    refs.searchInput.value = '';\n    return;\n  }\n  refs.pageNavigation.removeEventListener('click', navigation, false);\n  searchMoies(movieRequest, 1);\n  refs.pageNavigation.addEventListener('click', navigation, false);\n}\n","import { refs } from './refs';\nimport { getQueueList } from './localStorage';\n\nconst activatesLibraryBtn = () => {\n  refs.homeBtn.classList.remove('active');\n  refs.libraryBtn.classList.add('active');\n};\n\nconst activatesWatchedBtn = () => {\n  refs.queueBtn.classList.remove('active-liberty-btn');\n  refs.watchedBtn.classList.add('active-liberty-btn');\n};\n\nconst activatesQueueBtn = () => {\n  refs.watchedBtn.classList.remove('active-liberty-btn');\n  refs.queueBtn.classList.add('active-liberty-btn');\n};\n\nconst changesAppearanceHeader = () => {\n  refs.header.classList.add('header__liberty');\n  refs.searcBox.style.display = 'none';\n  refs.pageNavigation.style.display = 'none';\n\n  refs.watchedBtn.style.display = 'flex';\n  refs.queueBtn.style.display = 'flex';\n  refs.queueBtn.classList.add('active-liberty-btn');\n};\n\nconst switchOnLibrary = e => {\n  e.preventDefault();\n  activatesLibraryBtn();\n  changesAppearanceHeader();\n\n  refs.filmList.style.minHeight = '500px';\n  getQueueList();\n};\n\nrefs.libraryBtn.addEventListener('click', switchOnLibrary);\nrefs.watchedBtn.addEventListener('click', activatesWatchedBtn);\nrefs.queueBtn.addEventListener('click', activatesQueueBtn);\n","\nconst toTop = document.querySelector(\"#to-top\");\n\ntoTop.hidden = false;\nwindow.addEventListener(\"scroll\", () => {\ntoTop.hidden = scrollY > 200 ? false : true;\n});\n\ntoTop.onclick = () => {\nwindow.scrollTo(0, 0);\n};\n\ndocument.querySelector(\"#to-top\").addEventListener(\"click\", function () {\n\n    let toTopInterval = setInterval(function(){\n\n        let supportedScrollTop = document.body.scrollTop > 0 ? document.body : document.documentElement;\n\n        if (supportedScrollTop.scrollTop > 0) {\n            supportedScrollTop.scrollTop = supportedScrollTop.scrollTop - 50;\n            \n        }\n\n        if (supportedScrollTop.scrollTop < 1) {\n            clearInterval(toTopInterval);\n        }\n\n    }, 10);\n\n}, false);\n"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","defineProperty","module","exports","value","default","obj","constructor","Symbol","self","ReferenceError","$c1b1a34fae3d3c27$var$setPrototypeOf","o1","p1","setPrototypeOf","o","p","__proto__","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","$b9926a5835d271e3$var$getPrototypeOf","getPrototypeOf","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","parcelRequire","__esModule","arr","Array","isArray","iter","iterator","from","TypeError","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","toString","slice","name","test","len","arr2","$f215c72f040a88cf$var$_arrayLikeToArray","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","key","enumerable","configurable","writable","Parent","args","Class","$bd045042b29ce6c9$var$construct","apply","arguments","$bd045042b29ce6c9$var$_setPrototypeOf","$bd045042b29ce6c9$var$isNativeReflectConstruct","Date","Parent1","args1","Class1","a","push","instance","Function","bind","object","property","hasOwnProperty","$1b88cb4cd4b28de3$var$_getPrototypeOf","fn","indexOf","register","JSON","parse","$84ebd01c1ddf4bef$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","$84ebd01c1ddf4bef$exports","this","undefined","$21b983287c82ebd3$var$runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","next1","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","key1","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$21b983287c82ebd3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","$l5bVx","$fc8f2e2c969d032f$export$2e2bcd8739ae039","thisArg","cache","$8ca3655f37d9652c$var$toString","$8ca3655f37d9652c$var$getPrototypeOf","$8ca3655f37d9652c$var$kindOf","thing","str","toLowerCase","$8ca3655f37d9652c$var$kindOfTest","$8ca3655f37d9652c$var$typeOfTest","$parcel$interopDefault","$8ca3655f37d9652c$var$isArray","$8ca3655f37d9652c$var$isUndefined","$8ca3655f37d9652c$var$isArrayBuffer","$8ca3655f37d9652c$var$isString","$8ca3655f37d9652c$var$isFunction","$8ca3655f37d9652c$var$isNumber","$8ca3655f37d9652c$var$isObject","$8ca3655f37d9652c$var$isPlainObject","val","$8ca3655f37d9652c$var$isDate","$8ca3655f37d9652c$var$isFile","$8ca3655f37d9652c$var$isBlob","$8ca3655f37d9652c$var$isFileList","$8ca3655f37d9652c$var$isURLSearchParams","$8ca3655f37d9652c$var$forEach","l","ref","_allOwnKeys","allOwnKeys","getOwnPropertyNames","$8ca3655f37d9652c$var$findKey","_key","$8ca3655f37d9652c$var$_global","$parcel$global","$8ca3655f37d9652c$var$isContextDefined","TypedArray","hasOwnProperty1","$8ca3655f37d9652c$var$isTypedArray","Uint8Array","$8ca3655f37d9652c$var$isHTMLForm","$8ca3655f37d9652c$var$hasOwnProperty","prop","$8ca3655f37d9652c$var$isRegExp","$8ca3655f37d9652c$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","$8ca3655f37d9652c$export$2e2bcd8739ae039","isArrayBuffer","isBuffer","isFormData","pattern","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isBoolean","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isRegExp","isFunction","isStream","pipe","isURLSearchParams","isTypedArray","isFileList","merge","$8ca3655f37d9652c$var$merge","caseless","assignValue","targetKey","extend","b","trim","stripBOM","content","charCodeAt","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","kindOf","kindOfTest","endsWith","searchString","position","String","lastIndex","toArray","forEachEntry","pair","matchAll","regExp","exec","isHTMLForm","hasOwnProp","reduceDescriptors","freezeMethods","set","toObjectSet","arrayOrString","delimiter","split","toCamelCase","m","p2","toUpperCase","noop","toFiniteNumber","defaultValue","Number","isFinite","findKey","global","isContextDefined","toJSONObject","visit","source","target","reducedValue","$665014edacbfe17b$exports","Constructor","$74e7f8130373505f$var$_defineProperties","$44aee3fe793a4c74$var$AxiosError","message","code","config","request","response","captureStackTrace","$74e7f8130373505f$exports","protoProps","staticProps","$8ca3655f37d9652c$exports","toJSON","description","number","fileName","lineNumber","columnNumber","status","$44aee3fe793a4c74$var$prototype","$44aee3fe793a4c74$var$descriptors","customProps","axiosError","cause","$44aee3fe793a4c74$export$2e2bcd8739ae039","$c764dedfb56f5a44$export$2e2bcd8739ae039","window","$ds8z5","$ae7f60fd48750bb9$exports","subClass","superClass","$ae7f60fd48750bb9$var$_setPrototypeOf","$2059300b4b5a348b$exports","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","$2059300b4b5a348b$var$_possibleConstructorReturn","$24f87a6f86a8996f$export$a143d493d941bafc","$3caef5c332c7293f$export$d622b2ad8d90c771","$3caef5c332c7293f$export$6100ba28696e12de","$2059300b4b5a348b$var$_interopRequireDefault","b64","tmp","i1","lens","$3caef5c332c7293f$var$getLens","validLen","placeHoldersLen","$3caef5c332c7293f$var$Arr","$3caef5c332c7293f$var$_byteLength","curByte","len2","$3caef5c332c7293f$var$revLookup","uint8","len3","extraBytes","parts","maxChunkLength","i3","$3caef5c332c7293f$var$encodeChunk","$3caef5c332c7293f$var$lookup","join","$56a54f6ebabce67d$export$aafa59e2e03f2942","$56a54f6ebabce67d$export$68d8715fc104d294","$3caef5c332c7293f$var$code","$3caef5c332c7293f$var$i","$3caef5c332c7293f$var$len","len1","start","end","num","output","i2","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","c","rt","abs","floor","log","LN2","$24f87a6f86a8996f$var$customInspectSymbol","$24f87a6f86a8996f$var$Buffer","$24f87a6f86a8996f$var$K_MAX_LENGTH","$24f87a6f86a8996f$var$createBuffer","RangeError","buf","encodingOrOffset","$24f87a6f86a8996f$var$allocUnsafe","$24f87a6f86a8996f$var$from","string","encoding","isEncoding","$24f87a6f86a8996f$var$byteLength","actual","write","$24f87a6f86a8996f$var$fromString","arrayView","$24f87a6f86a8996f$var$isInstance","copy","$24f87a6f86a8996f$var$fromArrayBuffer","byteOffset","byteLength","$24f87a6f86a8996f$var$fromArrayLike","$24f87a6f86a8996f$var$fromArrayView","SharedArrayBuffer","$24f87a6f86a8996f$var$checked","$24f87a6f86a8996f$var$numberIsNaN","data","$24f87a6f86a8996f$var$fromObject","toPrimitive","$24f87a6f86a8996f$var$assertSize","size","array","mustMatch","loweredCase","$24f87a6f86a8996f$var$utf8ToBytes","$24f87a6f86a8996f$var$base64ToBytes","$24f87a6f86a8996f$var$slowToString","$24f87a6f86a8996f$var$hexSlice","$24f87a6f86a8996f$var$utf8Slice","$24f87a6f86a8996f$var$asciiSlice","$24f87a6f86a8996f$var$latin1Slice","$24f87a6f86a8996f$var$base64Slice","$24f87a6f86a8996f$var$utf16leSlice","$24f87a6f86a8996f$var$swap","$24f87a6f86a8996f$var$bidirectionalIndexOf","dir","$24f87a6f86a8996f$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$24f87a6f86a8996f$var$hexWrite","remaining","strLen","parsed","parseInt","substr","$24f87a6f86a8996f$var$utf8Write","$24f87a6f86a8996f$var$blitBuffer","$24f87a6f86a8996f$var$asciiWrite","byteArray","$24f87a6f86a8996f$var$asciiToBytes","$24f87a6f86a8996f$var$base64Write","$24f87a6f86a8996f$var$ucs2Write","units","hi","lo","$24f87a6f86a8996f$var$utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$24f87a6f86a8996f$var$MAX_ARGUMENTS_LENGTH","fromCharCode","$24f87a6f86a8996f$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$24f87a6f86a8996f$var$typedArraySupport","console","get","poolSize","alloc","fill","$24f87a6f86a8996f$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","ret","out","$24f87a6f86a8996f$var$hexSliceLookupTable","bytes","$24f87a6f86a8996f$var$checkOffset","ext","$24f87a6f86a8996f$var$checkInt","max","$24f87a6f86a8996f$var$wrtBigUInt64LE","$24f87a6f86a8996f$var$checkIntBI","BigInt","$24f87a6f86a8996f$var$wrtBigUInt64BE","$24f87a6f86a8996f$var$checkIEEE754","$24f87a6f86a8996f$var$writeFloat","littleEndian","noAssert","$24f87a6f86a8996f$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$24f87a6f86a8996f$var$defineBigIntMethod","$24f87a6f86a8996f$var$validateNumber","first","last","$24f87a6f86a8996f$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$24f87a6f86a8996f$var$errors","$24f87a6f86a8996f$var$E","sym","getMessage","Base1","Base","NodeError","_this","$24f87a6f86a8996f$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$24f87a6f86a8996f$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","$24f87a6f86a8996f$var$INVALID_BASE64_RE","leadSurrogate","$24f87a6f86a8996f$var$base64clean","src","dst","alphabet","table","i16","$24f87a6f86a8996f$var$BufferBigIntNotDefined","$0c29ca57d54f85e9$var$isVisitable","$0c29ca57d54f85e9$var$removeBrackets","$0c29ca57d54f85e9$var$renderKey","path","dots","map","token","$0c29ca57d54f85e9$var$predicates","$0c29ca57d54f85e9$export$2e2bcd8739ae039","formData","options","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","append","convertValue","toISOString","$0c29ca57d54f85e9$require$Buffer","stringify","some","$0c29ca57d54f85e9$var$isFlatArray","el","index","exposedHelpers","isVisitable","build","$63e4e0dff2b7ef1a$var$encode","charMap","encodeURIComponent","$63e4e0dff2b7ef1a$var$AxiosURLSearchParams","params","_pairs","$63e4e0dff2b7ef1a$var$prototype","encoder","_encode","$63e4e0dff2b7ef1a$export$2e2bcd8739ae039","$4858799f155a4706$var$encode","$4858799f155a4706$export$2e2bcd8739ae039","serializedParams","encode","serializeFn","serialize","hashmarkIndex","product","$089e14d5c08cea15$var$InterceptorManager","InterceptorManager","handlers","fulfilled","rejected","synchronous","runWhen","h","$089e14d5c08cea15$export$2e2bcd8739ae039","$c54b4d6d29e2eb6b$export$2e2bcd8739ae039","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","$d2ba66411c13cc9b$export$2e2bcd8739ae039","URLSearchParams","$7cdf1698dc68a071$export$2e2bcd8739ae039","$97999e9cdfd9bdaf$var$isStandardBrowserEnv","navigator","document","$97999e9cdfd9bdaf$var$isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","$97999e9cdfd9bdaf$export$2e2bcd8739ae039","isBrowser","classes","isStandardBrowserEnv","isStandardBrowserWebWorkerEnv","protocols","$3444de215011fd2b$export$2e2bcd8739ae039","helpers","isNode","$bdd273a6ec9f935e$export$2e2bcd8739ae039","buildPath","isNumericKey","isLast","$bdd273a6ec9f935e$var$arrayToObject","entries","$bdd273a6ec9f935e$var$parsePropPath","$8d19883a18ea96be$var$DEFAULT_CONTENT_TYPE","$8d19883a18ea96be$var$defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","env","rawValue","parser","$8d19883a18ea96be$var$stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","Accept","$8d19883a18ea96be$export$2e2bcd8739ae039","$111a013c31e2261e$exports","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$102410410d0dc09d$var$ignoreDuplicateOf","$c2923f037e2bae4f$var$$internals","$c2923f037e2bae4f$var$normalizeHeader","header","$c2923f037e2bae4f$var$normalizeValue","$c2923f037e2bae4f$var$matchHeaderValue","$c2923f037e2bae4f$var$_iterator","$c2923f037e2bae4f$var$_toStringTag","$c2923f037e2bae4f$var$AxiosHeaders","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","rawHeaders","setHeaders","line","substring","tokens","tokensRE","$c2923f037e2bae4f$var$parseTokens","matcher","deleted","deleteHeader","delete","format","normalized","w","char","$c2923f037e2bae4f$var$formatHeader","_len","targets","_constructor","asStrings","param","_param","computed","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","$c2923f037e2bae4f$var$buildAccessors","accessor","$c2923f037e2bae4f$export$2e2bcd8739ae039","$e27ce2658796d30f$export$2e2bcd8739ae039","fns","normalize","$ffcdf0443516cf49$export$2e2bcd8739ae039","__CANCEL__","$a251e9fa67c89486$var$CanceledError","ERR_CANCELED","$a251e9fa67c89486$export$2e2bcd8739ae039","$df046ee58fb378eb$export$2e2bcd8739ae039","ERR_BAD_REQUEST","$e52288d5ced91a0f$export$2e2bcd8739ae039","expires","domain","secure","cookie","toGMTString","RegExp","decodeURIComponent","remove","now","$b453718e09262365$export$2e2bcd8739ae039","baseURL","relativeURL","$c5c7eeec01fb8b89$export$2e2bcd8739ae039","requestedURL","$6c85e22328488296$export$2e2bcd8739ae039","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","$a1af1a7f806b22ba$export$2e2bcd8739ae039","samplesCount","firstSampleTS","timestamps","head","tail","chunkLength","startedAt","bytesCount","passed","round","$85bd0ac91b9e9771$var$progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","$85bd0ac91b9e9771$export$2e2bcd8739ae039","XMLHttpRequest","onCanceled","requestData","requestHeaders","cancelToken","unsubscribe","signal","removeEventListener","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","$b57d5c296e05dd0f$var$knownAdapters","http","xhr","$b57d5c296e05dd0f$export$2e2bcd8739ae039","getAdapter","adapters","nameOrAdapter","$03c1ec60679d4a92$var$throwIfCancellationRequested","throwIfRequested","$03c1ec60679d4a92$export$2e2bcd8739ae039","reason","$ed738da9502ca495$var$headersToObject","$ed738da9502ca495$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$f1f155cc89389bcb$export$a4ad2735b021c132","$73047b42f9e782d3$var$validators","$73047b42f9e782d3$var$deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","warn","$73047b42f9e782d3$export$2e2bcd8739ae039","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","validators","$6c6ea2375c06af66$var$validators","$6c6ea2375c06af66$var$Axios","Axios","instanceConfig","defaults","interceptors","configOrUrl","contextHeaders","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","promise","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","$6c6ea2375c06af66$export$2e2bcd8739ae039","$52ff30ac6ac58fe8$export$2e2bcd8739ae039","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","$eb999ef253053d6e$var$axios","$eb999ef253053d6e$var$createInstance","defaultConfig","CanceledError","isCancel","VERSION","toFormData","AxiosError","Cancel","all","promises","spread","callback","isAxiosError","payload","mergeConfig","formToJSON","t","$eb999ef253053d6e$export$2e2bcd8739ae039","$dc2edf588077df3d$exports","t1","e1","a1","n1","r1","s1","l1","m1","wrapID","overlayID","width","distance","opacity","borderRadius","rtl","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","c1","backgroundColor","backOverlayClickToClose","svgSize","titleFontSize","titleMaxLength","messageFontSize","buttonFontSize","buttonMaxLength","svgColor","titleColor","messageColor","buttonBackground","buttonColor","f1","d1","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","x1","g1","customSvgUrl","customSvgCode","messageID","b1","u1","querySelectorLimit","y1","k1","h1","getElementById","innerHTML","appendChild","v","_$t","a2","N","textContent","innerText","W1","I1","R1","A1","M","B","D1","T1","F1","r","G","Notify","init","f","toLocaleLowerCase","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","height","animationDuration","body","g","color","u","insertBefore","firstChild","k","C","z","childElementCount","clearTimeout","S","parentNode","removeChild","querySelector","W","I","R","querySelectorAll","A","E1","j1","Report","C1","z1","S1","L1","_$e","_$a","O1","H1","Confirm","padding","ceil","L","focus","setSelectionRange","_$i","preventDefault","keyCode","dispatchEvent","Event","stopPropagation","returnValue","cancelBubble","_$n","P1","U1","Loading","X1","innerWidth","q1","Q","Y","e2","isPrototypeOf","NodeList","Block","X","tagName","D","T","F","E","q","O","getComputedStyle","getPropertyValue","H","P","V","offsetHeight","getAttribute","Y1","K","$","J","createRange","selectNode","Z","createContextualFragment","_","tt","et","it","show","ask","prompt","standard","hourglass","circle","arrows","pulse","custom","notiflix","change","getElementsByTagName","V1","Notiflix","amd","$480998b00013bc4d$var$keyApi","$480998b00013bc4d$export$3dec35ae983201d9","getMovies","pageNumber","_callee","api_key","page","_ctx","getMoviesByWord","queryWord","language","query","include_adult","getMoviesById","movieId","t0","getGenresList","genres","getImageUrl","imgName","imgSize","$85f5db3f9041613a$exports","getBundleURL","$c574853c4efbf564$export$e05fa48ccab9af8","poster_path","title","vote_average","vote_count","popularity","original_title","overview","genresList","element","cardImgModal","toFixed","$37e33676934ad046$var$_obj","$hKHmD","$37e33676934ad046$export$21666b427502ea6d","pageNavigation","pageBack","pageNext","pages","searchInput","searchForm","searcBox","libraryBtn","homeBtn","watchedBtn","queueBtn","$92d073a641c2e300$export$2aa1a1304c0a961a","release_date","genre","year","cardImg1x","$6f0847c1b7777a77$export$dd8ff8abcc9cbcb","parseData","filmList","_$id","item","insertAdjacentHTML","$0aa9cd13c14a6e1e$export$4ff26d5e859c2689","$0aa9cd13c14a6e1e$export$80626178c79a45e9","$0aa9cd13c14a6e1e$var$textInEmptyContainer","$0aa9cd13c14a6e1e$var$formDataQueue","$0aa9cd13c14a6e1e$var$formDataWatched","$0aa9cd13c14a6e1e$export$be9b951aae673f4e","savedData","localStorage","getItem","$0aa9cd13c14a6e1e$export$f3fde474d5abd81f","getData","$0aa9cd13c14a6e1e$var$addFilmInSutableList","setItem","$0aa9cd13c14a6e1e$var$removeFromStorageList","clickableButton","unclickableButton","text","removeAttribute","cursor","findIndex","savedId","removeItem","$0aa9cd13c14a6e1e$var$changesClickableBtn","btn","$0aa9cd13c14a6e1e$var$changesUnclickableBtn","$0aa9cd13c14a6e1e$export$42763a430f2e2138","btnWatched","btnQueue","contains","$e08672c9889dd930$exports","receiver","$e08672c9889dd930$var$get","$e08672c9889dd930$var$_superPropBase","$e08672c9889dd930$var$_interopRequireDefault","target1","property1","receiver1","base","getOwnPropertyDescriptor","$30de785adf49c647$exports","$30de785adf49c647$var$wrapNativeSuper","$30de785adf49c647$var$_construct","$30de785adf49c647$var$_interopRequireDefault","$30de785adf49c647$var$_isNativeFunction","$30de785adf49c647$var$_getPrototypeOf","$30de785adf49c647$var$_setPrototypeOf","_cache","Map","has","Wrapper","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$exports","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","$4acf49f6c3e67aec$var$currentQueue","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","$4acf49f6c3e67aec$var$drainQueue","run","marker","$4acf49f6c3e67aec$var$runClearTimeout","$4acf49f6c3e67aec$var$Item","$4acf49f6c3e67aec$var$noop","nextTick","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","$1d9d263a787f8021$export$588c7fdda06fbb0a","assertion","$1d9d263a787f8021$export$a39cad550e7ab28a","$1d9d263a787f8021$var$stringToByteArray$1","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","stringToByteArray","c2","c22","c31","$1d9d263a787f8021$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$1d9d263a787f8021$export$e510a73ee562749","utf8Bytes","$1d9d263a787f8021$export$b3b2de96497acc47","$1d9d263a787f8021$export$4b5284a3025a455","$1d9d263a787f8021$export$6c40052bed430212","$1d9d263a787f8021$export$54e9fb29908872fa","$1d9d263a787f8021$export$c36915b22ce77c19","$1d9d263a787f8021$export$872f8323f01d7ae0","indexedDB","$1d9d263a787f8021$var$getDefaultsFromGlobal","$1d9d263a787f8021$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$1d9d263a787f8021$var$getDefaultsFromEnvVariable","$1d9d263a787f8021$export$c62426fdd000a97e","decoded","$1d9d263a787f8021$var$getDefaultsFromCookie","productName","_b","separatorIndex","$1d9d263a787f8021$export$3dfb6827a9f89756","_a","$1d9d263a787f8021$var$getDefaults","$1d9d263a787f8021$export$85f6557964517f1a","Deferred","iat","user_id","project","Error1","FirebaseError","customData","$1d9d263a787f8021$export$3fa6e1b18a3b2d40","service","serviceName","errors","ErrorFactory","fullCode","template","$1d9d263a787f8021$var$replaceTemplate","fullMessage","$1d9d263a787f8021$export$dd24e9cd51226c56","claims","signature","$1d9d263a787f8021$export$2344b14b097df817","$1d9d263a787f8021$export$871de8747c9eaa88","contextObj","$1d9d263a787f8021$export$9cb4719e2e525b7a","_didIteratorError","_iteratorError","bKeys","aProp","bProp","_iteratorNormalCompletion","_iterator","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","aKeys","$1d9d263a787f8021$var$isObject","$1d9d263a787f8021$export$ac4103b836844853","querystringParams","_loop","_step","arrayVal","Component","instanceFactory","multipleInstances","onInstanceCreated","Provider","container","identifier","instancesDeferred","normalizedIdentifier","deferred","isInitialized","shouldAutoInitialize","instanceIdentifier","optional","component","getOrInitializeService","instancesOptions","instances","services","INTERNAL","_delete","$4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME","_options","normalizeInstanceIdentifier","isComponentSet","instanceDeferred","normalizedDeferredIdentifier","existingCallbacks","onInitCallbacks","Set","existingInstance","callbacks","invokeOnInitCallbacks","$f4758df7279d6c6a$export$243e62d78d3b544d","LogLevel1","$f4758df7279d6c6a$var$instances","DEBUG","VERBOSE","INFO","WARN","ERROR","logType","logLevel","$f4758df7279d6c6a$var$ConsoleMethod","_console","Logger","_logLevel","$f4758df7279d6c6a$var$defaultLogLevel","$f4758df7279d6c6a$var$defaultLogHandler","_userLogHandler","$f4758df7279d6c6a$var$levelStringToEnum","_logHandler","$9eddae5a012cde57$exports","ownKeys","getOwnPropertySymbols","$9eddae5a012cde57$var$_defineProperty","$9eddae5a012cde57$var$_interopRequireDefault","$f1bf9542bc9ee5ed$var$idbProxyableTypes","$f1bf9542bc9ee5ed$var$cursorAdvanceMethods","$f1bf9542bc9ee5ed$var$cursorRequestMap","WeakMap","$f1bf9542bc9ee5ed$var$transactionDoneMap","$f1bf9542bc9ee5ed$var$transactionStoreNamesMap","$f1bf9542bc9ee5ed$var$transformCache","$f1bf9542bc9ee5ed$export$407448d2b89b1813","$f1bf9542bc9ee5ed$var$idbProxyTraps","IDBTransaction","objectStoreNames","objectStore","$f1bf9542bc9ee5ed$export$efccba1c4a2ef57b","$f1bf9542bc9ee5ed$var$wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","$f1bf9542bc9ee5ed$export$3b14a55fb2447963","storeNames","_func","tx","sort","$f1bf9542bc9ee5ed$var$transformCachableValue","unlisten","DOMException","$f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","IDBRequest","newValue","$7818c326be87ea84$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","db","$7818c326be87ea84$var$readMethods","$7818c326be87ea84$var$writeMethods","$7818c326be87ea84$var$cachedMethods","$7818c326be87ea84$var$getMethod","targetFuncName","useIndex","isWrite","storeName","_target","_$target","_args","store","shift","oldTraps","PlatformLoggerServiceImpl","getProviders","provider","$0913f93b5b3c9bac$var$isVersionServiceProvider","$0913f93b5b3c9bac$var$_obj","$0913f93b5b3c9bac$var$logger","$f4758df7279d6c6a$export$efa9a398d6368992","$0913f93b5b3c9bac$export$9f30fa0c10967f7f","$0913f93b5b3c9bac$var$PLATFORM_LOG_STRING","$0913f93b5b3c9bac$var$name$o","app","debug","componentName","$0913f93b5b3c9bac$export$fa5244b94c62d36a","$0913f93b5b3c9bac$export$fa0d6da0f5838f50","name1","getProvider","getImmediate","heartbeatController","triggerHeartbeat","$0913f93b5b3c9bac$var$ERROR_FACTORY","$0913f93b5b3c9bac$var$ERRORS","FirebaseAppImpl","_isDeleted","automaticDataCollectionEnabled","_automaticDataCollectionEnabled","checkDestroyed","_config","_container","setLogLevelImpl","appName","name3","$4d80d01579d5bd6a$export$436a80eea5d5c0c5","$0913f93b5b3c9bac$export$9566bce3835c0f28","newApp","$0913f93b5b3c9bac$export$f9962582c9e66d99","name5","$0913f93b5b3c9bac$export$b4e3c36c855b14b5","$0913f93b5b3c9bac$export$c55cfd413944906d","$4d80d01579d5bd6a$export$16fa2f45be04daa8","library","$0913f93b5b3c9bac$var$STORE_NAME","createObjectStore","idbGetError","$0913f93b5b3c9bac$var$computeKey","$0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB","heartbeatObject","_storage","agent","platformLogger","getPlatformInfoString","date","$0913f93b5b3c9bac$var$getUTCDateString","_heartbeatsCache","hbTimestamp","singleDateHeartbeat","overwrite","heartbeatsToSend","unsentEntries","headerString","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","$c81c85f5b6b618be$var$d","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","$c81c85f5b6b618be$var$w","$c81c85f5b6b618be$var$m","$c81c85f5b6b618be$var$y","_m","$c81c85f5b6b618be$var$v","$c81c85f5b6b618be$var$g","$c81c85f5b6b618be$var$b","$c81c85f5b6b618be$var$E","$c81c85f5b6b618be$var$P","$c81c85f5b6b618be$var$S","$c81c85f5b6b618be$export$8fada0bf726bf278","FirebaseError1","U","_super","$c81c85f5b6b618be$var$B","user","$c81c85f5b6b618be$var$Q","enqueueRetryable","$c81c85f5b6b618be$var$W","onInit","getToken","accessToken","getUid","$c81c85f5b6b618be$var$G","getAuthHeaderValueForFirstParty","$c81c85f5b6b618be$var$K","$c81c85f5b6b618be$var$Y","$c81c85f5b6b618be$var$H","t2","appCheck","$c81c85f5b6b618be$var$X","projectId","database","$c81c85f5b6b618be$var$dt","$c81c85f5b6b618be$var$wt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","$c81c85f5b6b618be$var$_t","$c81c85f5b6b618be$var$_iterator","$c81c85f5b6b618be$var$It","It","binaryString","t9","e9","EMPTY_BYTE_STRING","$c81c85f5b6b618be$var$ae","ae","RED","EMPTY","inorderTraversal","reverseTraversal","isEmpty","maxKey","insert","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","BLACK","$c81c85f5b6b618be$var$pn","$c81c85f5b6b618be$var$gn","gn","t44","e24","ssl","credentials","ignoreUndefinedProperties","cacheSizeBytes","experimentalForceLongPolling","experimentalAutoDetectLongPolling","useFetchStreams","$c81c85f5b6b618be$export$d0e2b3272814ce82","_n","_authCredentials","_appCheckCredentials","_databaseId","_app","_persistenceKey","_settings","_settingsFrozen","_terminateTask","t45","client","sessionIndex","iamToken","authTokenFactory","_terminate","databaseId","settings","terminate","$ff2bca6a92cd1276$export$20b1dbb5a4ce4b93","fetch","ok","json","t86","e43","_setSettings","setMultipleInstances","$9df926e0a287432e$exports","visible","children","ownerDocument","e3","n2","_$t1","e4","HTMLElement","cloneNode","closable","onShow","onClose","e5","parentElement","e6","requestAnimationFrame","$97c5e52317cfdd8b$var$refsO","listFilm","filmCardItem","backdrop","filmListCard","movieCard","teaserBtnPlay","$97c5e52317cfdd8b$var$closeMainModal","$97c5e52317cfdd8b$var$onEscKeyClick","$c39a6b7c0d436061$var$closeModal","modal","overflow","currentTarget","closest","render","dataStorageWatched","dataStorageQueue","results","teaser","video","terailerKey","trailerRend","toggle","openModalBtn","closeModalBtn","bckdrp","$a9d69158b154a93b$var$SDK_VERSION","DOMStorageWrapper","domStorage_","prefix_","prefixedName_","$1d9d263a787f8021$export$fac44ee5b035f737","storedVal","$a9d69158b154a93b$var$MemoryStorage","MemoryStorage","cache_","isInMemoryStorage","$a9d69158b154a93b$var$createStoragefor","domStorageName","domStorage","$a9d69158b154a93b$var$DOMStorageWrapper","$a9d69158b154a93b$var$PersistentStorage","$a9d69158b154a93b$var$SessionStorage","$1d9d263a787f8021$export$655666783217a925","sha11","digest","sha1Bytes","varArgs","$a9d69158b154a93b$var$buildLogMessage_","$a9d69158b154a93b$var$logger","$a9d69158b154a93b$var$enableLogging$1","logger_","persistent","$a9d69158b154a93b$var$logClient","$a9d69158b154a93b$var$log","$a9d69158b154a93b$var$firstLog_","$a9d69158b154a93b$var$logWrapper","prefix","$a9d69158b154a93b$var$error","$a9d69158b154a93b$var$fatal","$a9d69158b154a93b$var$isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","$a9d69158b154a93b$var$MIN_NAME","$a9d69158b154a93b$var$MAX_NAME","$a9d69158b154a93b$var$nameCompare","bAsInt","$a9d69158b154a93b$var$stringCompare","$a9d69158b154a93b$var$ObjectToUniqueKey","segsize","ln","bias","hexByte","time","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","forceRefresh","_this1","addTokenListener","$a9d69158b154a93b$var$warn","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","_this2","addAuthTokenListener","removeAuthTokenListener","errorMessage","$a9d69158b154a93b$var$EmulatorTokenProvider","EmulatorTokenProvider","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","RepoInfo","nodeAdmin","_host","internalHost","_domain","newHost","isCacheableHost","query2","repoInfo","connURL","$a9d69158b154a93b$var$LONG_POLLING","isCustomHost","StatsCollection","name2","amount","counters_","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","responseNum","requestNum","toProcess","$a9d69158b154a93b$var$exceptionGuard","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","BrowserPollConnection","bytesSent","$a9d69158b154a93b$var$statsManagerGetCollection","_this4","curSegmentNum","onDisconnect_","onDisconnect1","myPacketOrderer","$a9d69158b154a93b$var$PacketReceiver","onMessage","isClosed_","onClosed_","$1d9d263a787f8021$export$5d1d834fbbf8bab7","called","wrappedFn","attachEvent","_this3","incrementIncomingBytes_","scriptTagHolder","connectTimeoutTimer_","everConnected_","command","$a9d69158b154a93b$var$FIREBASE_LONGPOLL_START_PARAM","sendNewPolls","closeAfter","handleResponse","pN","urlParams","random","$a9d69158b154a93b$var$PROTOCOL_VERSION","connectURL","urlFn","log_","addTag","startLongPoll","addDisconnectPingFrame","myDisconnFrame","shutdown_","dataStr","stats_","incrementCounter","base64data","dataSegs","$a9d69158b154a93b$var$splitStringBySize","$a9d69158b154a93b$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","bytesReceived","forceAllow_","forceDisallow_","FirebaseIFrameScriptHolder","commandCB","onMessageCB","onDisconnect2","currentSerial","uniqueCallbackIdentifier","myIFrame","createIFrame_","script","iframeContents","doc","alive","onDisconnect3","onDisconnect","myPW","newRequest_","outstandingRequests","pendingSegs","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","serial","doNewRequest","keepaliveTimeout","loadCB","_this5","newScript","onload","rstate","iframe","contentWindow","contentDocument","$a9d69158b154a93b$var$WebSocketImpl","MozWebSocket","WebSocket","connectionURL_","WebSocketConnection","onDisconnect4","device","platform","proxy","origin","mySock","onopen","onclose","handleIncomingFrame","frames","totalFrames","fullMess","jsonMess","$1d9d263a787f8021$export$c5a53ce6a17cf18d","frameCount","handleNewFrameCount_","mess","appendFrame_","remainingData","extractFrameCount_","resetKeepAlive","sendString_","keepaliveTimer","setInterval","$a9d69158b154a93b$var$FORGE_DOMAIN_RE","isOldAndroid","oldAndroidMatch","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","isWebSocketsAvailable","$a9d69158b154a93b$var$WebSocketConnection","isSkipPollConnection","previouslyFailed","ALL_TRANSPORTS","transports","transports_","globalTransportInitialized_","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","pendingDataMessages","$a9d69158b154a93b$var$TransportManager","conn","transportManager_","initialTransport","conn_","nextTransportId_","onConnectionLost","disconnReceiver_","tx_","healthyTimeout_","isHealthy_","markConnectionHealthy","healthyTimeoutMS","connectionCount","onConnectionLost_","everConnected","secondaryConn_","onSecondaryConnectionLost_","rx_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","$a9d69158b154a93b$var$requireKey","onSecondaryControl_","proceedWithUpgrade_","tryCleanupConnection","onDataMessage_","onPrimaryResponse_","primaryResponsesRequired_","onConnectionShutdown_","sendPingOnPrimaryIfNecessary_","sessionId","handshake","state_","onConnectionEstablished_","timestamp","version2","upgradeTransport","startUpgrade_","onDisconnect5","$a9d69158b154a93b$var$setTimeoutNonBlocking","closeConnections_","start_","ServerActions","pathString","onComplete","stats","allowedEvents_","EventEmitter","$1d9d263a787f8021$export$a7a9523472993e97","eventType","listeners_","validateEventType_","eventData","getInitialEvent","find","OnlineMonitor","online_","trigger","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","Path","begin","pieces","childPathObj","$a9d69158b154a93b$var$Path","$a9d69158b154a93b$var$newRelativePath","outerPath","innerPath","outer","inner","$a9d69158b154a93b$var$pathPopFront","other","$a9d69158b154a93b$var$pathGetLength","ValidationPath","errorPrefix_","byteLength_","parts_","$1d9d263a787f8021$export$9536dc0a75b20bf9","validationPath","$a9d69158b154a93b$var$validationPathToErrorString","VisibilityMonitor","visibilityChange","hidden","visible_","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","$a9d69158b154a93b$var$RECONNECT_MIN_DELAY","realtime_","$a9d69158b154a93b$var$OnlineMonitor","getInstance","onOnline_","action","onResponse","curReqNum","requestNumber_","connected_","requestCBHash_","initConnection_","_path","query4","currentHashFn","tag","queryId","listens","listenSpec","sendListen_","get1","outstandingGets_","sendRequest","outstandingGetCount_","query5","_queryIdentifier","req","_queryObject","hashFn","warnOnListenWarnings_","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","$1d9d263a787f8021$export$9565ca3d387f8aa0","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","query6","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","putInternal","outstandingPuts_","outstandingPutCount_","queued","errorReason","reqNum","onDataPush_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","maxReconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onDisconnect6","onRealtimeDisconnect_","nextConnectionId_","canceled","sendRequestFn","closeFn","forceTokenRefresh_","ref1","connection","$a9d69158b154a93b$var$Connection","interruptReasons_","delta","put","query7","removeListen_","listen","normalizedPathString","map1","statusCode","explanation","invalidAuthTokenCount_","notifyForInvalidToken","tryAuth","queries","setMaxNode","MAX_NODE","sendGet_","clientName","reportStats","warnings","$1d9d263a787f8021$export$e51ae4db7b428f67","indexSpec","query8","_queryParams","getIndex","node","NamedNode","Index","oldNode","newNode","oldWrapped","$a9d69158b154a93b$var$NamedNode","newWrapped","MIN","KeyIndex","$a9d69158b154a93b$var$KeyIndex","startKey","comparator","isReverse_","SortedMapIterator","cmp","nodeStack_","resultGenerator_","LLRBNode","$a9d69158b154a93b$var$SortedMap","EMPTY_NODE","count","min_","fixUp_","smallest","isRed_","rotateRight_","moveRedRight_","removeMin_","colorFlip_","rotateLeft_","nl","nr","blackDepth","check_","LLRBEmptyNode","$a9d69158b154a93b$var$LLRBNode","comparator_","SortedMap","root_","rightParent","minKey","setPriorityMaxNode","resultGenerator","$a9d69158b154a93b$var$SortedMapIterator","$a9d69158b154a93b$var$NAME_ONLY_COMPARATOR","$a9d69158b154a93b$var$NAME_COMPARATOR","$a9d69158b154a93b$var$LLRBEmptyNode","priority","$a9d69158b154a93b$var$doubleToIEEE754String","isLeafNode","priorityNode","$a9d69158b154a93b$var$MAX_NODE$2","getPriority","value_","priorityNode_","newPriorityNode","LeafNode","childName","__childrenNodeConstructor","childNode","newChildNode","front","$a9d69158b154a93b$var$pathGetFront","updateImmediateChild","updateChild","exportFormat","getValue","lazyHash_","toHash","$a9d69158b154a93b$var$priorityHashText","compareToLeafNode_","otherLeaf","otherIndex","VALUE_TYPE_ORDER","otherLeafType","thisIndex","thisLeafType","PriorityIndex","aPriority","bPriority","indexCmp","$a9d69158b154a93b$var$LeafNode","$a9d69158b154a93b$var$MAX_NODE$1","$a9d69158b154a93b$var$PriorityIndex","Base12Num","bits","bits_","current_","childList","keyFn","mapSortFn","low","high","namedNode","middle","chunkSize","buildBalancedTree","attachPennant","pennant","base12","isOne","nextBitIsOne","chunkSize1","buildPennant","$a9d69158b154a93b$var$Base12Num","root1","indexes_","indexSet_","IndexMap","indexKey","sortedMap","indexDefinition","sawIndexedValue","existingChildren","getIterator","Wrap","getNext","indexName","newIndexSet","newIndexes","indexedChildren","$a9d69158b154a93b$var$fallbackObject","$a9d69158b154a93b$var$buildChildSet","getCompare","existingSnap","newChildren","$a9d69158b154a93b$var$PRIORITY_INDEX","$a9d69158b154a93b$var$_defaultIndexMap","ChildrenNode","children_","indexMap_","$a9d69158b154a93b$var$validatePriorityNode","$a9d69158b154a93b$var$EMPTY_NODE","child2","getImmediateChild","getChild","updatePriority","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","INTEGER_REGEXP_","$a9d69158b154a93b$var$sha1","idx","predecessor","getPredecessorKey","resolveIndex_","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","startPost","peek","maxPost","endPost","getReverseIteratorFrom","$a9d69158b154a93b$var$KEY_INDEX","hasIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","$a9d69158b154a93b$var$IndexMap","Default","$a9d69158b154a93b$var$MAX_NODE","ChildrenNode1","MaxNode","$a9d69158b154a93b$var$ChildrenNode","__EMPTY_NODE","$a9d69158b154a93b$var$nodeFromJSON","jsonLeaf","childData","childrenHavePriority","hinzeJsonObj","$a9d69158b154a93b$var$each","child3","childSet","sortedChildSet","PathIndex","indexPath_","snap","indexValue","name6","valueNode","$a9d69158b154a93b$var$pathSlice","$a9d69158b154a93b$var$ValueIndex","ValueIndex","compareTo","name7","$a9d69158b154a93b$var$VALUE_INDEX","$a9d69158b154a93b$var$changeValue","snapshotNode","$a9d69158b154a93b$var$changeChildAdded","$a9d69158b154a93b$var$changeChildRemoved","$a9d69158b154a93b$var$changeChildChanged","oldSnap","QueryParams","endBeforeSet_","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","index_","loadsAllData","copy1","limit_","startAfterSet_","queryParams","orderBy","$a9d69158b154a93b$var$PathIndex","qs","startParam","endParam","isViewFromLeft","$a9d69158b154a93b$var$queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","query9","listenId","getListenId_","thisListen","queryStringParameters","$a9d69158b154a93b$var$queryParamsToRestQueryStringParameters","restRequest_","query10","query11","_this7","query12","isDefault","$a9d69158b154a93b$var$ServerActions","$a9d69158b154a93b$var$SnapshotHolder","SnapshotHolder","rootNode_","$a9d69158b154a93b$var$newSparseSnapshotTree","$a9d69158b154a93b$var$pathIsEmpty","childKey","sparseSnapshotTree","prefixPath","tree","$a9d69158b154a93b$var$OperationType","OperationType1","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","$a9d69158b154a93b$var$StatsListener","reportStats_","reportedStats","haveStatsToReport","$a9d69158b154a93b$var$emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","childTree","subtree","$a9d69158b154a93b$var$newEmptyPath","OVERWRITE","Overwrite","Merge","MERGE","$a9d69158b154a93b$var$CacheNode","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","hasChild","eventGenerator","events","changes","registrations","eventCache","aWrapped","bWrapped","$a9d69158b154a93b$var$eventGeneratorCompareChanges","filteredChanges","materializedChange","prevName","getPredecessorChildName","$a9d69158b154a93b$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","query_","$a9d69158b154a93b$var$newViewCache","serverCache","$a9d69158b154a93b$var$viewCacheUpdateEventSnap","viewCache","eventSnap","filtered","$a9d69158b154a93b$var$viewCacheUpdateServerSnap","serverSnap","$a9d69158b154a93b$var$viewCacheGetCompleteEventSnap","getNode","$a9d69158b154a93b$var$viewCacheGetCompleteServerSnap","$a9d69158b154a93b$var$EmptyChildren","$a9d69158b154a93b$var$ImmutableTree","ImmutableTree","relativePath","predicate","child5","childExistingPathAndValue","findRootMostMatchingPathAndValue","$a9d69158b154a93b$var$pathChild","toSet","newChild","child7","child8","newTree","fold_","pathSoFar","accum","pathToFollow","currentRelativePath","nextChild","foreachOnPath_","foreach_","childPath","childSnap","$a9d69158b154a93b$var$CompoundWrite","CompoundWrite","writeTree_","$a9d69158b154a93b$var$compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree1","setTree","$a9d69158b154a93b$var$compoundWriteAddWrites","updates","newWrite","$a9d69158b154a93b$var$compoundWriteRemoveWrite","empty","newWriteTree2","$a9d69158b154a93b$var$compoundWriteHasCompleteWrite","$a9d69158b154a93b$var$compoundWriteGetCompleteNode","$a9d69158b154a93b$var$compoundWriteGetCompleteChildren","$a9d69158b154a93b$var$compoundWriteChildCompoundWrite","shadowingNode","errorPrefixFxn","$a9d69158b154a93b$var$compoundWriteApply","writeTree","priorityWrite","$a9d69158b154a93b$var$applySubtreeWrite","$a9d69158b154a93b$var$writeTreeChildWrites","$a9d69158b154a93b$var$newWriteTreeRef","errorPrefix","allWrites","writeId","$a9d69158b154a93b$var$writeTreeRemoveWrite","removedWriteWasVisible","writeToRemove","removedWriteOverlapsWithOtherWrites","currentWrite","$a9d69158b154a93b$var$writeTreeRecordContainsPath_","$a9d69158b154a93b$var$pathContains","visibleWrites","$a9d69158b154a93b$var$writeTreeLayerTree_","$a9d69158b154a93b$var$writeTreeDefaultFilter_","lastWriteId","$a9d69158b154a93b$var$writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","child10","deepNode","$a9d69158b154a93b$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$a9d69158b154a93b$var$compoundWriteIsEmpty","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$a9d69158b154a93b$var$writeTreeCalcCompleteEventChildren","$a9d69158b154a93b$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$a9d69158b154a93b$var$writeTreeRefShadowingWrite","$a9d69158b154a93b$var$writeTreeShadowingWrite","$a9d69158b154a93b$var$writeTreeRefCalcIndexedSlice","completeServerData","toIterate","withIndex","nodes","$a9d69158b154a93b$var$writeTreeCalcIndexedSlice","$a9d69158b154a93b$var$writeTreeRefCalcCompleteChild","existingServerCache","$a9d69158b154a93b$var$writeTreeCalcCompleteChild","$a9d69158b154a93b$var$writeTreeRefChild","$a9d69158b154a93b$var$ChildChangeAccumulator","ChildChangeAccumulator","changeMap","oldChange","oldType","$a9d69158b154a93b$var$NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","child","$a9d69158b154a93b$var$WriteTreeCompleteChildSource","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","child11","$a9d69158b154a93b$var$viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","newViewCache1","filterServerNode","accumulator","fromUser","$a9d69158b154a93b$var$viewProcessorApplyUserOverwrite","fromServer","tagged","isFiltered","$a9d69158b154a93b$var$viewProcessorApplyServerOverwrite","$a9d69158b154a93b$var$viewProcessorCacheHasChild","curViewCache","foreach","$a9d69158b154a93b$var$viewProcessorApplyUserMerge","$a9d69158b154a93b$var$viewProcessorApplyServerMerge","ackUserWrite","newEventCache","oldEventCache","serverChildren","updateFullNode","$a9d69158b154a93b$var$viewProcessorRevertUserWrite","ackPath","changedChildren","name8","serverCachePath","mergePath","isCompleteForPath","changedChildren1","$a9d69158b154a93b$var$viewProcessorAckUserWrite","LISTEN_COMPLETE","oldServerNode","$a9d69158b154a93b$var$viewProcessorGenerateEventCacheAfterServerEvent","newViewCache5","$a9d69158b154a93b$var$viewProcessorListenComplete","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","newEventChild","childChangePath","eventChildUpdate","filtersNodes","changedSnap","getIndexedFilter","newServerCache","serverFilter","oldServerSnap","newServerNode","newViewCache3","newViewCache4","oldChild","getCompleteChild","$a9d69158b154a93b$var$pathGetBack","$a9d69158b154a93b$var$pathParent","$a9d69158b154a93b$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","view","processor_","isIndexed","eventRegistration","moves","eventRegistrations","eventGenerator_","syncPoint","optCompleteServerCache","views","$a9d69158b154a93b$var$viewApplyOperation","view1","$a9d69158b154a93b$var$syncPointGetCompleteServerCache","$a9d69158b154a93b$var$viewGetCompleteServerCache","SyncTree","listenProvider_","pendingWriteTree_","$a9d69158b154a93b$var$syncTreeApplyUserOverwrite","syncTree","newData","$a9d69158b154a93b$var$syncTreeApplyOperationToSyncPoints_","$a9d69158b154a93b$var$Overwrite","$a9d69158b154a93b$var$syncTreeAckUserWrite","$a9d69158b154a93b$var$writeTreeGetWrite","$a9d69158b154a93b$var$AckUserWrite","$a9d69158b154a93b$var$syncTreeApplyServerOverwrite","$a9d69158b154a93b$var$syncTreeApplyTaggedQueryOverwrite","$a9d69158b154a93b$var$syncTreeQueryKeyForTag_","queryKey","$a9d69158b154a93b$var$syncTreeApplyTaggedOperation_","queryPath","$a9d69158b154a93b$var$syncTreeCalcCompleteEventCache","serverCache1","syncPointTree_","findOnPath","childWritesCache","$a9d69158b154a93b$var$syncTreeApplyOperationHelper_","childOperation","childServerCache","$a9d69158b154a93b$var$syncPointApplyOperation","syncPointTree","operationForChild","$a9d69158b154a93b$var$syncTreeParseQueryKey_","splitIndex","ExistingValueProvider","syncTree_","DeferredValueProvider","path_","existingVal","serverValues","$a9d69158b154a93b$var$resolveComplexDeferredValue","$a9d69158b154a93b$var$resolveScalarDeferredValue","op","existing","existingNode","$a9d69158b154a93b$var$DeferredValueProvider","$a9d69158b154a93b$var$resolveDeferredLeafValue","rawPri","leafNode","childrenNode","$a9d69158b154a93b$var$resolveDeferredValue","name9","parent","childCount","Tree","$a9d69158b154a93b$var$treeSubTree","pathObj","child13","$a9d69158b154a93b$var$Tree","$a9d69158b154a93b$var$treeGetValue","$a9d69158b154a93b$var$treeSetValue","$a9d69158b154a93b$var$treeUpdateParents","$a9d69158b154a93b$var$treeHasChildren","includeSelf","childrenFirst","child15","$a9d69158b154a93b$var$treeGetPath","child16","childEmpty","$a9d69158b154a93b$var$treeIsEmpty","childExists","$a9d69158b154a93b$var$INVALID_KEY_REGEX_","$a9d69158b154a93b$var$INVALID_PATH_REGEX_","$a9d69158b154a93b$var$MAX_LEAF_SIZE_","$a9d69158b154a93b$var$isValidKey","$a9d69158b154a93b$var$isValidPathString","$a9d69158b154a93b$var$validateFirebaseData","errorPrefix1","$a9d69158b154a93b$var$ValidationPath","hasDotValue","hasActualChild","child1","$a9d69158b154a93b$export$8637b026ace8abb1","fnName","argumentName","$1d9d263a787f8021$export$adea4917e02d93dc","enableLoggingImpl","creatorFunction","changeTree","fromObject","$a9d69158b154a93b$var$Merge","$a9d69158b154a93b$var$referenceConstructor$1","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","$a9d69158b154a93b$export$eff4d24c3ff7876e","root","factory","$2714068f688990bd$export$18a63439252de862","genre_ids","GenresList","reduce","acc","filmGenres","$c72c4ee5f4be9835$exports","newNotifySettings","typesNotify","notifySettings","commonConsoleError","commonCheckHeadOrBody","commonExtendOptions","extended","deep","notifyGetInternalCSSCodes","notifyCreateCounter","notifyCreate","notifyType","callbackOrOptions","newNotifySettingsBackup","newOptions","html","htmlPool","theType","ntflxNotifyWrap","ntflxNotifyOverlay","ntflxNotify","closeButtonHTML","svgIcon","notifyWrap","eachNotifyElement","timeoutHide","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","removeNotifyElmentsAndWrapper","clickToCloseTimeout","callbackTimeout","autoRemove","allNotifyElmNotTheLastOne","eachNotifyElmNotLastOne","userNotifyOptions","getInternalCSSCodes","styleElementId","internalCSS","commonSetInternalCSSCodes","userNotifyExtendOptions","$189a6f10e095007e$var$refs","$189a6f10e095007e$export$e98cbe51299acd52","responce","$189a6f10e095007e$var$_renderFilms","films","$dfaf77c789ce7a24$var$qwery","$dfaf77c789ce7a24$var$actualPage","$dfaf77c789ce7a24$export$22fa394f3ba39578","currentPage","totalPage","qweryWord","pageCur","pageTot","pages1","fillArray","posBeg","posEnd","startVal","markupPages","pageNum","current","nav","pageClass","makePage","navigationRender","$dfaf77c789ce7a24$export$428e7c787d57587d","dataset","nodeName","switchQwery","qwery1","numPage","$2d6425a333e4b240$export$9d2e8b65238dea05","$2d6425a333e4b240$export$3a3c4dee50295cf0","$2d6425a333e4b240$var$movies","$2d6425a333e4b240$var$genres","$2d6425a333e4b240$var$_trendMovies","scrollTo","total_pages","searchWord","$2d6425a333e4b240$var$_searchMoies","total_results","blur","movieRequest","trimRight","trimLeft","$2d6425a333e4b240$var$searchRequest","minHeight","$67f8cd19887e7316$var$toTop","scrollY","onclick","toTopInterval","supportedScrollTop","scrollTop","documentElement","clearInterval"],"version":3,"file":"index.16caad27.js.map"}